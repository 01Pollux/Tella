// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: econ_gcmessages.proto

#include "econ_gcmessages.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr CMsgApplyAutograph::CMsgApplyAutograph(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : autograph_item_id_(uint64_t{0u})
  , item_item_id_(uint64_t{0u}){}
struct CMsgApplyAutographDefaultTypeInternal {
  constexpr CMsgApplyAutographDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgApplyAutographDefaultTypeInternal() {}
  union {
    CMsgApplyAutograph _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgApplyAutographDefaultTypeInternal _CMsgApplyAutograph_default_instance_;
constexpr CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_id_(uint64_t{0u})
  , event_type_(0u)
  , adjustment_(0u){}
struct CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustmentDefaultTypeInternal {
  constexpr CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustmentDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustmentDefaultTypeInternal() {}
  union {
    CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustmentDefaultTypeInternal _CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_default_instance_;
constexpr CMsgEconPlayerStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : strange_count_adjustments_()
  , account_id_(0u){}
struct CMsgEconPlayerStrangeCountAdjustmentDefaultTypeInternal {
  constexpr CMsgEconPlayerStrangeCountAdjustmentDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgEconPlayerStrangeCountAdjustmentDefaultTypeInternal() {}
  union {
    CMsgEconPlayerStrangeCountAdjustment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgEconPlayerStrangeCountAdjustmentDefaultTypeInternal _CMsgEconPlayerStrangeCountAdjustment_default_instance_;
constexpr CMsgRequestItemPurgatory_FinalizePurchase::CMsgRequestItemPurgatory_FinalizePurchase(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_ids_(){}
struct CMsgRequestItemPurgatory_FinalizePurchaseDefaultTypeInternal {
  constexpr CMsgRequestItemPurgatory_FinalizePurchaseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgRequestItemPurgatory_FinalizePurchaseDefaultTypeInternal() {}
  union {
    CMsgRequestItemPurgatory_FinalizePurchase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgRequestItemPurgatory_FinalizePurchaseDefaultTypeInternal _CMsgRequestItemPurgatory_FinalizePurchase_default_instance_;
constexpr CMsgRequestItemPurgatory_FinalizePurchaseResponse::CMsgRequestItemPurgatory_FinalizePurchaseResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0u){}
struct CMsgRequestItemPurgatory_FinalizePurchaseResponseDefaultTypeInternal {
  constexpr CMsgRequestItemPurgatory_FinalizePurchaseResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgRequestItemPurgatory_FinalizePurchaseResponseDefaultTypeInternal() {}
  union {
    CMsgRequestItemPurgatory_FinalizePurchaseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgRequestItemPurgatory_FinalizePurchaseResponseDefaultTypeInternal _CMsgRequestItemPurgatory_FinalizePurchaseResponse_default_instance_;
constexpr CMsgRequestItemPurgatory_RefundPurchase::CMsgRequestItemPurgatory_RefundPurchase(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_id_(uint64_t{0u}){}
struct CMsgRequestItemPurgatory_RefundPurchaseDefaultTypeInternal {
  constexpr CMsgRequestItemPurgatory_RefundPurchaseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgRequestItemPurgatory_RefundPurchaseDefaultTypeInternal() {}
  union {
    CMsgRequestItemPurgatory_RefundPurchase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgRequestItemPurgatory_RefundPurchaseDefaultTypeInternal _CMsgRequestItemPurgatory_RefundPurchase_default_instance_;
constexpr CMsgRequestItemPurgatory_RefundPurchaseResponse::CMsgRequestItemPurgatory_RefundPurchaseResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0u){}
struct CMsgRequestItemPurgatory_RefundPurchaseResponseDefaultTypeInternal {
  constexpr CMsgRequestItemPurgatory_RefundPurchaseResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgRequestItemPurgatory_RefundPurchaseResponseDefaultTypeInternal() {}
  union {
    CMsgRequestItemPurgatory_RefundPurchaseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgRequestItemPurgatory_RefundPurchaseResponseDefaultTypeInternal _CMsgRequestItemPurgatory_RefundPurchaseResponse_default_instance_;
constexpr CMsgCraftingResponse::CMsgCraftingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_ids_(){}
struct CMsgCraftingResponseDefaultTypeInternal {
  constexpr CMsgCraftingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgCraftingResponseDefaultTypeInternal() {}
  union {
    CMsgCraftingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgCraftingResponseDefaultTypeInternal _CMsgCraftingResponse_default_instance_;
constexpr CMsgGCRequestStoreSalesData::CMsgGCRequestStoreSalesData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : version_(0u)
  , currency_(0u){}
struct CMsgGCRequestStoreSalesDataDefaultTypeInternal {
  constexpr CMsgGCRequestStoreSalesDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCRequestStoreSalesDataDefaultTypeInternal() {}
  union {
    CMsgGCRequestStoreSalesData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCRequestStoreSalesDataDefaultTypeInternal _CMsgGCRequestStoreSalesData_default_instance_;
constexpr CMsgGCRequestStoreSalesDataResponse_Price::CMsgGCRequestStoreSalesDataResponse_Price(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_def_(0u)
  , price_(0u){}
struct CMsgGCRequestStoreSalesDataResponse_PriceDefaultTypeInternal {
  constexpr CMsgGCRequestStoreSalesDataResponse_PriceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCRequestStoreSalesDataResponse_PriceDefaultTypeInternal() {}
  union {
    CMsgGCRequestStoreSalesDataResponse_Price _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCRequestStoreSalesDataResponse_PriceDefaultTypeInternal _CMsgGCRequestStoreSalesDataResponse_Price_default_instance_;
constexpr CMsgGCRequestStoreSalesDataResponse::CMsgGCRequestStoreSalesDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sale_price_()
  , version_(0u)
  , expiration_time_(0u){}
struct CMsgGCRequestStoreSalesDataResponseDefaultTypeInternal {
  constexpr CMsgGCRequestStoreSalesDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCRequestStoreSalesDataResponseDefaultTypeInternal() {}
  union {
    CMsgGCRequestStoreSalesDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCRequestStoreSalesDataResponseDefaultTypeInternal _CMsgGCRequestStoreSalesDataResponse_default_instance_;
constexpr CMsgGCRequestStoreSalesDataUpToDateResponse::CMsgGCRequestStoreSalesDataUpToDateResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : version_(0u)
  , expiration_time_(0u){}
struct CMsgGCRequestStoreSalesDataUpToDateResponseDefaultTypeInternal {
  constexpr CMsgGCRequestStoreSalesDataUpToDateResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCRequestStoreSalesDataUpToDateResponseDefaultTypeInternal() {}
  union {
    CMsgGCRequestStoreSalesDataUpToDateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCRequestStoreSalesDataUpToDateResponseDefaultTypeInternal _CMsgGCRequestStoreSalesDataUpToDateResponse_default_instance_;
constexpr CMsgGCToGCPingRequest::CMsgGCToGCPingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CMsgGCToGCPingRequestDefaultTypeInternal {
  constexpr CMsgGCToGCPingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToGCPingRequestDefaultTypeInternal() {}
  union {
    CMsgGCToGCPingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToGCPingRequestDefaultTypeInternal _CMsgGCToGCPingRequest_default_instance_;
constexpr CMsgGCToGCPingResponse::CMsgGCToGCPingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CMsgGCToGCPingResponseDefaultTypeInternal {
  constexpr CMsgGCToGCPingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToGCPingResponseDefaultTypeInternal() {}
  union {
    CMsgGCToGCPingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToGCPingResponseDefaultTypeInternal _CMsgGCToGCPingResponse_default_instance_;
constexpr CMsgGCToGCGetUserSessionServer::CMsgGCToGCGetUserSessionServer(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : account_id_(0u){}
struct CMsgGCToGCGetUserSessionServerDefaultTypeInternal {
  constexpr CMsgGCToGCGetUserSessionServerDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToGCGetUserSessionServerDefaultTypeInternal() {}
  union {
    CMsgGCToGCGetUserSessionServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToGCGetUserSessionServerDefaultTypeInternal _CMsgGCToGCGetUserSessionServer_default_instance_;
constexpr CMsgGCToGCGetUserSessionServerResponse::CMsgGCToGCGetUserSessionServerResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : server_steam_id_(uint64_t{0u}){}
struct CMsgGCToGCGetUserSessionServerResponseDefaultTypeInternal {
  constexpr CMsgGCToGCGetUserSessionServerResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToGCGetUserSessionServerResponseDefaultTypeInternal() {}
  union {
    CMsgGCToGCGetUserSessionServerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToGCGetUserSessionServerResponseDefaultTypeInternal _CMsgGCToGCGetUserSessionServerResponse_default_instance_;
constexpr CMsgGCToGCGetUserServerMembers::CMsgGCToGCGetUserServerMembers(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : account_id_(0u)
  , max_spectators_(0u){}
struct CMsgGCToGCGetUserServerMembersDefaultTypeInternal {
  constexpr CMsgGCToGCGetUserServerMembersDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToGCGetUserServerMembersDefaultTypeInternal() {}
  union {
    CMsgGCToGCGetUserServerMembers _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToGCGetUserServerMembersDefaultTypeInternal _CMsgGCToGCGetUserServerMembers_default_instance_;
constexpr CMsgGCToGCGetUserServerMembersResponse::CMsgGCToGCGetUserServerMembersResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : member_account_id_(){}
struct CMsgGCToGCGetUserServerMembersResponseDefaultTypeInternal {
  constexpr CMsgGCToGCGetUserServerMembersResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToGCGetUserServerMembersResponseDefaultTypeInternal() {}
  union {
    CMsgGCToGCGetUserServerMembersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToGCGetUserServerMembersResponseDefaultTypeInternal _CMsgGCToGCGetUserServerMembersResponse_default_instance_;
constexpr CMsgLookupMultipleAccountNames::CMsgLookupMultipleAccountNames(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accountids_()
  , _accountids_cached_byte_size_(){}
struct CMsgLookupMultipleAccountNamesDefaultTypeInternal {
  constexpr CMsgLookupMultipleAccountNamesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgLookupMultipleAccountNamesDefaultTypeInternal() {}
  union {
    CMsgLookupMultipleAccountNames _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgLookupMultipleAccountNamesDefaultTypeInternal _CMsgLookupMultipleAccountNames_default_instance_;
constexpr CMsgLookupMultipleAccountNamesResponse_Account::CMsgLookupMultipleAccountNamesResponse_Account(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : persona_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , accountid_(0u){}
struct CMsgLookupMultipleAccountNamesResponse_AccountDefaultTypeInternal {
  constexpr CMsgLookupMultipleAccountNamesResponse_AccountDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgLookupMultipleAccountNamesResponse_AccountDefaultTypeInternal() {}
  union {
    CMsgLookupMultipleAccountNamesResponse_Account _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgLookupMultipleAccountNamesResponse_AccountDefaultTypeInternal _CMsgLookupMultipleAccountNamesResponse_Account_default_instance_;
constexpr CMsgLookupMultipleAccountNamesResponse::CMsgLookupMultipleAccountNamesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accounts_(){}
struct CMsgLookupMultipleAccountNamesResponseDefaultTypeInternal {
  constexpr CMsgLookupMultipleAccountNamesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgLookupMultipleAccountNamesResponseDefaultTypeInternal() {}
  union {
    CMsgLookupMultipleAccountNamesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgLookupMultipleAccountNamesResponseDefaultTypeInternal _CMsgLookupMultipleAccountNamesResponse_default_instance_;
constexpr CMsgGCToGCGrantSelfMadeItemToAccount::CMsgGCToGCGrantSelfMadeItemToAccount(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_def_index_(0u)
  , accountid_(0u){}
struct CMsgGCToGCGrantSelfMadeItemToAccountDefaultTypeInternal {
  constexpr CMsgGCToGCGrantSelfMadeItemToAccountDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToGCGrantSelfMadeItemToAccountDefaultTypeInternal() {}
  union {
    CMsgGCToGCGrantSelfMadeItemToAccount _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToGCGrantSelfMadeItemToAccountDefaultTypeInternal _CMsgGCToGCGrantSelfMadeItemToAccount_default_instance_;
constexpr CMsgGCToGCThankedByNewUser::CMsgGCToGCThankedByNewUser(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : new_user_accountid_(0u)
  , thanked_user_accountid_(0u){}
struct CMsgGCToGCThankedByNewUserDefaultTypeInternal {
  constexpr CMsgGCToGCThankedByNewUserDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToGCThankedByNewUserDefaultTypeInternal() {}
  union {
    CMsgGCToGCThankedByNewUser _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToGCThankedByNewUserDefaultTypeInternal _CMsgGCToGCThankedByNewUser_default_instance_;
constexpr CMsgGCShuffleCrateContents::CMsgGCShuffleCrateContents(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : user_code_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , crate_item_id_(uint64_t{0u}){}
struct CMsgGCShuffleCrateContentsDefaultTypeInternal {
  constexpr CMsgGCShuffleCrateContentsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCShuffleCrateContentsDefaultTypeInternal() {}
  union {
    CMsgGCShuffleCrateContents _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCShuffleCrateContentsDefaultTypeInternal _CMsgGCShuffleCrateContents_default_instance_;
constexpr CMsgGCQuestObjective_Progress::CMsgGCQuestObjective_Progress(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : quest_id_(uint64_t{0u})
  , quest_attrib_index_(0u)
  , delta_(0u)
  , owner_steamid_(uint64_t{0u}){}
struct CMsgGCQuestObjective_ProgressDefaultTypeInternal {
  constexpr CMsgGCQuestObjective_ProgressDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCQuestObjective_ProgressDefaultTypeInternal() {}
  union {
    CMsgGCQuestObjective_Progress _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCQuestObjective_ProgressDefaultTypeInternal _CMsgGCQuestObjective_Progress_default_instance_;
constexpr CMsgGCQuestObjective_PointsChange::CMsgGCQuestObjective_PointsChange(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : quest_id_(uint64_t{0u})
  , owner_steamid_(uint64_t{0u})
  , update_base_points_(false)
  , points_0_(0u)
  , points_1_(0u)
  , points_2_(0u){}
struct CMsgGCQuestObjective_PointsChangeDefaultTypeInternal {
  constexpr CMsgGCQuestObjective_PointsChangeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCQuestObjective_PointsChangeDefaultTypeInternal() {}
  union {
    CMsgGCQuestObjective_PointsChange _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCQuestObjective_PointsChangeDefaultTypeInternal _CMsgGCQuestObjective_PointsChange_default_instance_;
constexpr CMsgGCQuestComplete_Request::CMsgGCQuestComplete_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : quest_id_(uint64_t{0u}){}
struct CMsgGCQuestComplete_RequestDefaultTypeInternal {
  constexpr CMsgGCQuestComplete_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCQuestComplete_RequestDefaultTypeInternal() {}
  union {
    CMsgGCQuestComplete_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCQuestComplete_RequestDefaultTypeInternal _CMsgGCQuestComplete_Request_default_instance_;
constexpr CMsgGCQuestCompleted::CMsgGCQuestCompleted(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CMsgGCQuestCompletedDefaultTypeInternal {
  constexpr CMsgGCQuestCompletedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCQuestCompletedDefaultTypeInternal() {}
  union {
    CMsgGCQuestCompleted _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCQuestCompletedDefaultTypeInternal _CMsgGCQuestCompleted_default_instance_;
constexpr CMsgGCQuestObjective_RequestLoanerItems::CMsgGCQuestObjective_RequestLoanerItems(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : quest_id_(uint64_t{0u}){}
struct CMsgGCQuestObjective_RequestLoanerItemsDefaultTypeInternal {
  constexpr CMsgGCQuestObjective_RequestLoanerItemsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCQuestObjective_RequestLoanerItemsDefaultTypeInternal() {}
  union {
    CMsgGCQuestObjective_RequestLoanerItems _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCQuestObjective_RequestLoanerItemsDefaultTypeInternal _CMsgGCQuestObjective_RequestLoanerItems_default_instance_;
constexpr CMsgGCQuestObjective_RequestLoanerResponse::CMsgGCQuestObjective_RequestLoanerResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CMsgGCQuestObjective_RequestLoanerResponseDefaultTypeInternal {
  constexpr CMsgGCQuestObjective_RequestLoanerResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCQuestObjective_RequestLoanerResponseDefaultTypeInternal() {}
  union {
    CMsgGCQuestObjective_RequestLoanerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCQuestObjective_RequestLoanerResponseDefaultTypeInternal _CMsgGCQuestObjective_RequestLoanerResponse_default_instance_;
constexpr CMsgCraftCollectionUpgrade::CMsgCraftCollectionUpgrade(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_id_(){}
struct CMsgCraftCollectionUpgradeDefaultTypeInternal {
  constexpr CMsgCraftCollectionUpgradeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgCraftCollectionUpgradeDefaultTypeInternal() {}
  union {
    CMsgCraftCollectionUpgrade _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgCraftCollectionUpgradeDefaultTypeInternal _CMsgCraftCollectionUpgrade_default_instance_;
constexpr CMsgCraftHalloweenOffering::CMsgCraftHalloweenOffering(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_id_()
  , tool_id_(uint64_t{0u}){}
struct CMsgCraftHalloweenOfferingDefaultTypeInternal {
  constexpr CMsgCraftHalloweenOfferingDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgCraftHalloweenOfferingDefaultTypeInternal() {}
  union {
    CMsgCraftHalloweenOffering _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgCraftHalloweenOfferingDefaultTypeInternal _CMsgCraftHalloweenOffering_default_instance_;
constexpr CMsgCraftCommonStatClock::CMsgCraftCommonStatClock(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_id_()
  , tool_id_(uint64_t{0u}){}
struct CMsgCraftCommonStatClockDefaultTypeInternal {
  constexpr CMsgCraftCommonStatClockDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgCraftCommonStatClockDefaultTypeInternal() {}
  union {
    CMsgCraftCommonStatClock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgCraftCommonStatClockDefaultTypeInternal _CMsgCraftCommonStatClock_default_instance_;
constexpr CMsgGCQuestDiscard_Request::CMsgGCQuestDiscard_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : quest_id_(uint64_t{0u}){}
struct CMsgGCQuestDiscard_RequestDefaultTypeInternal {
  constexpr CMsgGCQuestDiscard_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCQuestDiscard_RequestDefaultTypeInternal() {}
  union {
    CMsgGCQuestDiscard_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCQuestDiscard_RequestDefaultTypeInternal _CMsgGCQuestDiscard_Request_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_econ_5fgcmessages_2eproto[34];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_econ_5fgcmessages_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_econ_5fgcmessages_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_econ_5fgcmessages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CMsgApplyAutograph, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgApplyAutograph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgApplyAutograph, autograph_item_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgApplyAutograph, item_item_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, event_type_),
  PROTOBUF_FIELD_OFFSET(::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, item_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, adjustment_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgEconPlayerStrangeCountAdjustment, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgEconPlayerStrangeCountAdjustment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgEconPlayerStrangeCountAdjustment, account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgEconPlayerStrangeCountAdjustment, strange_count_adjustments_),
  0,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgRequestItemPurgatory_FinalizePurchase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgRequestItemPurgatory_FinalizePurchase, item_ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgRequestItemPurgatory_FinalizePurchaseResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgRequestItemPurgatory_FinalizePurchaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgRequestItemPurgatory_FinalizePurchaseResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgRequestItemPurgatory_RefundPurchase, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgRequestItemPurgatory_RefundPurchase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgRequestItemPurgatory_RefundPurchase, item_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgRequestItemPurgatory_RefundPurchaseResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgRequestItemPurgatory_RefundPurchaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgRequestItemPurgatory_RefundPurchaseResponse, result_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgCraftingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgCraftingResponse, item_ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesData, version_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesData, currency_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataResponse_Price, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataResponse_Price, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataResponse_Price, item_def_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataResponse_Price, price_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataResponse, sale_price_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataResponse, version_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataResponse, expiration_time_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataUpToDateResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataUpToDateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataUpToDateResponse, version_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCRequestStoreSalesDataUpToDateResponse, expiration_time_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCPingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCPingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserSessionServer, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserSessionServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserSessionServer, account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserSessionServerResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserSessionServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserSessionServerResponse, server_steam_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserServerMembers, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserServerMembers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserServerMembers, account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserServerMembers, max_spectators_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserServerMembersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGetUserServerMembersResponse, member_account_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgLookupMultipleAccountNames, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgLookupMultipleAccountNames, accountids_),
  PROTOBUF_FIELD_OFFSET(::CMsgLookupMultipleAccountNamesResponse_Account, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgLookupMultipleAccountNamesResponse_Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgLookupMultipleAccountNamesResponse_Account, accountid_),
  PROTOBUF_FIELD_OFFSET(::CMsgLookupMultipleAccountNamesResponse_Account, persona_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgLookupMultipleAccountNamesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgLookupMultipleAccountNamesResponse, accounts_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGrantSelfMadeItemToAccount, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGrantSelfMadeItemToAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGrantSelfMadeItemToAccount, item_def_index_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCGrantSelfMadeItemToAccount, accountid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCThankedByNewUser, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCThankedByNewUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCThankedByNewUser, new_user_accountid_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToGCThankedByNewUser, thanked_user_accountid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgGCShuffleCrateContents, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCShuffleCrateContents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCShuffleCrateContents, crate_item_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCShuffleCrateContents, user_code_string_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_Progress, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_Progress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_Progress, quest_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_Progress, quest_attrib_index_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_Progress, delta_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_Progress, owner_steamid_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_PointsChange, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_PointsChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_PointsChange, quest_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_PointsChange, owner_steamid_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_PointsChange, update_base_points_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_PointsChange, points_0_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_PointsChange, points_1_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_PointsChange, points_2_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestComplete_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestComplete_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestComplete_Request, quest_id_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestCompleted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_RequestLoanerItems, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_RequestLoanerItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_RequestLoanerItems, quest_id_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestObjective_RequestLoanerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgCraftCollectionUpgrade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgCraftCollectionUpgrade, item_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgCraftHalloweenOffering, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgCraftHalloweenOffering, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgCraftHalloweenOffering, tool_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgCraftHalloweenOffering, item_id_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgCraftCommonStatClock, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgCraftCommonStatClock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgCraftCommonStatClock, tool_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgCraftCommonStatClock, item_id_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestDiscard_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestDiscard_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCQuestDiscard_Request, quest_id_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CMsgApplyAutograph)},
  { 9, 17, sizeof(::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment)},
  { 20, 27, sizeof(::CMsgEconPlayerStrangeCountAdjustment)},
  { 29, -1, sizeof(::CMsgRequestItemPurgatory_FinalizePurchase)},
  { 35, 41, sizeof(::CMsgRequestItemPurgatory_FinalizePurchaseResponse)},
  { 42, 48, sizeof(::CMsgRequestItemPurgatory_RefundPurchase)},
  { 49, 55, sizeof(::CMsgRequestItemPurgatory_RefundPurchaseResponse)},
  { 56, -1, sizeof(::CMsgCraftingResponse)},
  { 62, 69, sizeof(::CMsgGCRequestStoreSalesData)},
  { 71, 78, sizeof(::CMsgGCRequestStoreSalesDataResponse_Price)},
  { 80, 88, sizeof(::CMsgGCRequestStoreSalesDataResponse)},
  { 91, 98, sizeof(::CMsgGCRequestStoreSalesDataUpToDateResponse)},
  { 100, -1, sizeof(::CMsgGCToGCPingRequest)},
  { 105, -1, sizeof(::CMsgGCToGCPingResponse)},
  { 110, 116, sizeof(::CMsgGCToGCGetUserSessionServer)},
  { 117, 123, sizeof(::CMsgGCToGCGetUserSessionServerResponse)},
  { 124, 131, sizeof(::CMsgGCToGCGetUserServerMembers)},
  { 133, -1, sizeof(::CMsgGCToGCGetUserServerMembersResponse)},
  { 139, -1, sizeof(::CMsgLookupMultipleAccountNames)},
  { 145, 152, sizeof(::CMsgLookupMultipleAccountNamesResponse_Account)},
  { 154, -1, sizeof(::CMsgLookupMultipleAccountNamesResponse)},
  { 160, 167, sizeof(::CMsgGCToGCGrantSelfMadeItemToAccount)},
  { 169, 176, sizeof(::CMsgGCToGCThankedByNewUser)},
  { 178, 185, sizeof(::CMsgGCShuffleCrateContents)},
  { 187, 196, sizeof(::CMsgGCQuestObjective_Progress)},
  { 200, 211, sizeof(::CMsgGCQuestObjective_PointsChange)},
  { 217, 223, sizeof(::CMsgGCQuestComplete_Request)},
  { 224, -1, sizeof(::CMsgGCQuestCompleted)},
  { 229, 235, sizeof(::CMsgGCQuestObjective_RequestLoanerItems)},
  { 236, -1, sizeof(::CMsgGCQuestObjective_RequestLoanerResponse)},
  { 241, -1, sizeof(::CMsgCraftCollectionUpgrade)},
  { 247, 254, sizeof(::CMsgCraftHalloweenOffering)},
  { 256, 263, sizeof(::CMsgCraftCommonStatClock)},
  { 265, 271, sizeof(::CMsgGCQuestDiscard_Request)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgApplyAutograph_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgEconPlayerStrangeCountAdjustment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgRequestItemPurgatory_FinalizePurchase_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgRequestItemPurgatory_FinalizePurchaseResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgRequestItemPurgatory_RefundPurchase_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgRequestItemPurgatory_RefundPurchaseResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgCraftingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCRequestStoreSalesData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCRequestStoreSalesDataResponse_Price_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCRequestStoreSalesDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCRequestStoreSalesDataUpToDateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToGCPingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToGCPingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToGCGetUserSessionServer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToGCGetUserSessionServerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToGCGetUserServerMembers_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToGCGetUserServerMembersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgLookupMultipleAccountNames_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgLookupMultipleAccountNamesResponse_Account_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgLookupMultipleAccountNamesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToGCGrantSelfMadeItemToAccount_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToGCThankedByNewUser_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCShuffleCrateContents_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCQuestObjective_Progress_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCQuestObjective_PointsChange_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCQuestComplete_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCQuestCompleted_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCQuestObjective_RequestLoanerItems_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCQuestObjective_RequestLoanerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgCraftCollectionUpgrade_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgCraftHalloweenOffering_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgCraftCommonStatClock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCQuestDiscard_Request_default_instance_),
};

const char descriptor_table_protodef_econ_5fgcmessages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025econ_gcmessages.proto\032\023steammessages.p"
  "roto\"E\n\022CMsgApplyAutograph\022\031\n\021autograph_"
  "item_id\030\001 \001(\004\022\024\n\014item_item_id\030\002 \001(\004\"\360\001\n$"
  "CMsgEconPlayerStrangeCountAdjustment\022\022\n\n"
  "account_id\030\001 \001(\r\022`\n\031strange_count_adjust"
  "ments\030\002 \003(\0132=.CMsgEconPlayerStrangeCount"
  "Adjustment.CStrangeCountAdjustment\032R\n\027CS"
  "trangeCountAdjustment\022\022\n\nevent_type\030\001 \001("
  "\r\022\017\n\007item_id\030\002 \001(\004\022\022\n\nadjustment\030\003 \001(\r\"="
  "\n)CMsgRequestItemPurgatory_FinalizePurch"
  "ase\022\020\n\010item_ids\030\001 \003(\004\"C\n1CMsgRequestItem"
  "Purgatory_FinalizePurchaseResponse\022\016\n\006re"
  "sult\030\001 \001(\r\":\n\'CMsgRequestItemPurgatory_R"
  "efundPurchase\022\017\n\007item_id\030\001 \001(\004\"A\n/CMsgRe"
  "questItemPurgatory_RefundPurchaseRespons"
  "e\022\016\n\006result\030\001 \001(\r\"(\n\024CMsgCraftingRespons"
  "e\022\020\n\010item_ids\030\001 \003(\004\"@\n\033CMsgGCRequestStor"
  "eSalesData\022\017\n\007version\030\001 \001(\r\022\020\n\010currency\030"
  "\002 \001(\r\"\271\001\n#CMsgGCRequestStoreSalesDataRes"
  "ponse\022>\n\nsale_price\030\001 \003(\0132*.CMsgGCReques"
  "tStoreSalesDataResponse.Price\022\017\n\007version"
  "\030\002 \001(\r\022\027\n\017expiration_time\030\003 \001(\r\032(\n\005Price"
  "\022\020\n\010item_def\030\001 \001(\r\022\r\n\005price\030\002 \001(\r\"W\n+CMs"
  "gGCRequestStoreSalesDataUpToDateResponse"
  "\022\017\n\007version\030\001 \001(\r\022\027\n\017expiration_time\030\002 \001"
  "(\r\"\027\n\025CMsgGCToGCPingRequest\"\030\n\026CMsgGCToG"
  "CPingResponse\"4\n\036CMsgGCToGCGetUserSessio"
  "nServer\022\022\n\naccount_id\030\001 \001(\r\"A\n&CMsgGCToG"
  "CGetUserSessionServerResponse\022\027\n\017server_"
  "steam_id\030\001 \001(\006\"L\n\036CMsgGCToGCGetUserServe"
  "rMembers\022\022\n\naccount_id\030\001 \001(\r\022\026\n\016max_spec"
  "tators\030\002 \001(\r\"C\n&CMsgGCToGCGetUserServerM"
  "embersResponse\022\031\n\021member_account_id\030\001 \003("
  "\r\"8\n\036CMsgLookupMultipleAccountNames\022\026\n\na"
  "ccountids\030\001 \003(\rB\002\020\001\"\232\001\n&CMsgLookupMultip"
  "leAccountNamesResponse\022A\n\010accounts\030\001 \003(\013"
  "2/.CMsgLookupMultipleAccountNamesRespons"
  "e.Account\032-\n\007Account\022\021\n\taccountid\030\001 \001(\r\022"
  "\017\n\007persona\030\002 \001(\t\"Q\n$CMsgGCToGCGrantSelfM"
  "adeItemToAccount\022\026\n\016item_def_index\030\001 \001(\r"
  "\022\021\n\taccountid\030\002 \001(\r\"X\n\032CMsgGCToGCThanked"
  "ByNewUser\022\032\n\022new_user_accountid\030\001 \001(\r\022\036\n"
  "\026thanked_user_accountid\030\002 \001(\r\"M\n\032CMsgGCS"
  "huffleCrateContents\022\025\n\rcrate_item_id\030\001 \001"
  "(\004\022\030\n\020user_code_string\030\002 \001(\t\"s\n\035CMsgGCQu"
  "estObjective_Progress\022\020\n\010quest_id\030\001 \001(\004\022"
  "\032\n\022quest_attrib_index\030\002 \001(\r\022\r\n\005delta\030\003 \001"
  "(\r\022\025\n\rowner_steamid\030\004 \001(\006\"\245\001\n!CMsgGCQues"
  "tObjective_PointsChange\022\020\n\010quest_id\030\001 \001("
  "\004\022\025\n\rowner_steamid\030\004 \001(\006\022!\n\022update_base_"
  "points\030\005 \001(\010:\005false\022\020\n\010points_0\030\006 \001(\r\022\020\n"
  "\010points_1\030\007 \001(\r\022\020\n\010points_2\030\010 \001(\r\"/\n\033CMs"
  "gGCQuestComplete_Request\022\020\n\010quest_id\030\001 \001"
  "(\004\"\026\n\024CMsgGCQuestCompleted\";\n\'CMsgGCQues"
  "tObjective_RequestLoanerItems\022\020\n\010quest_i"
  "d\030\001 \001(\004\",\n*CMsgGCQuestObjective_RequestL"
  "oanerResponse\"-\n\032CMsgCraftCollectionUpgr"
  "ade\022\017\n\007item_id\030\001 \003(\004\">\n\032CMsgCraftHallowe"
  "enOffering\022\017\n\007tool_id\030\001 \001(\004\022\017\n\007item_id\030\002"
  " \003(\004\"<\n\030CMsgCraftCommonStatClock\022\017\n\007tool"
  "_id\030\001 \001(\004\022\017\n\007item_id\030\002 \003(\004\".\n\032CMsgGCQues"
  "tDiscard_Request\022\020\n\010quest_id\030\001 \001(\004*\313/\n\nE"
  "GCItemMsg\022\021\n\014k_EMsgGCBase\020\350\007\022\"\n\035k_EMsgGC"
  "SetSingleItemPosition\020\351\007\022\022\n\rk_EMsgGCCraf"
  "t\020\352\007\022\032\n\025k_EMsgGCCraftResponse\020\353\007\022\023\n\016k_EM"
  "sgGCDelete\020\354\007\022$\n\037k_EMsgGCVerifyCacheSubs"
  "cription\020\355\007\022\025\n\020k_EMsgGCNameItem\020\356\007\022\030\n\023k_"
  "EMsgGCUnlockCrate\020\357\007\022 \n\033k_EMsgGCUnlockCr"
  "ateResponse\020\360\007\022\026\n\021k_EMsgGCPaintItem\020\361\007\022\036"
  "\n\031k_EMsgGCPaintItemResponse\020\362\007\022\"\n\035k_EMsg"
  "GCGoldenWrenchBroadcast\020\363\007\022\030\n\023k_EMsgGCMO"
  "TDRequest\020\364\007\022 \n\033k_EMsgGCMOTDRequestRespo"
  "nse\020\365\007\022\031\n\024k_EMsgGCNameBaseItem\020\373\007\022!\n\034k_E"
  "MsgGCNameBaseItemResponse\020\374\007\022(\n#k_EMsgGC"
  "RemoveSocketItem_DEPRECATED\020\375\007\0220\n+k_EMsg"
  "GCRemoveSocketItemResponse_DEPRECATED\020\376\007"
  "\022!\n\034k_EMsgGCCustomizeItemTexture\020\377\007\022)\n$k"
  "_EMsgGCCustomizeItemTextureResponse\020\200\010\022\033"
  "\n\026k_EMsgGCUseItemRequest\020\201\010\022\034\n\027k_EMsgGCU"
  "seItemResponse\020\202\010\022%\n k_EMsgGCRespawnPost"
  "LoadoutChange\020\205\010\022\033\n\026k_EMsgGCRemoveItemNa"
  "me\020\206\010\022\034\n\027k_EMsgGCRemoveItemPaint\020\207\010\022\031\n\024k"
  "_EMsgGCGiftWrapItem\020\210\010\022!\n\034k_EMsgGCGiftWr"
  "apItemResponse\020\211\010\022\030\n\023k_EMsgGCDeliverGift"
  "\020\212\010\022(\n#k_EMsgGCDeliverGiftResponseReceiv"
  "er\020\214\010\022\036\n\031k_EMsgGCUnwrapGiftRequest\020\215\010\022\037\n"
  "\032k_EMsgGCUnwrapGiftResponse\020\216\010\022\031\n\024k_EMsg"
  "GCSetItemStyle\020\217\010\022\036\n\031k_EMsgGCUsedClaimCo"
  "deItem\020\220\010\022\026\n\021k_EMsgGCSortItems\020\221\010\022*\n%k_E"
  "MsgGC_RevolvingLootList_DEPRECATED\020\222\010\022\032\n"
  "\025k_EMsgGCLookupAccount\020\223\010\022\"\n\035k_EMsgGCLoo"
  "kupAccountResponse\020\224\010\022\036\n\031k_EMsgGCLookupA"
  "ccountName\020\225\010\022&\n!k_EMsgGCLookupAccountNa"
  "meResponse\020\226\010\022\035\n\030k_EMsgGCUpdateItemSchem"
  "a\020\231\010\022$\n\037k_EMsgGCRequestInventoryRefresh\020"
  "\232\010\022 \n\033k_EMsgGCRemoveCustomTexture\020\233\010\022(\n#"
  "k_EMsgGCRemoveCustomTextureResponse\020\234\010\022\035"
  "\n\030k_EMsgGCRemoveMakersMark\020\235\010\022%\n k_EMsgG"
  "CRemoveMakersMarkResponse\020\236\010\022#\n\036k_EMsgGC"
  "RemoveUniqueCraftIndex\020\237\010\022+\n&k_EMsgGCRem"
  "oveUniqueCraftIndexResponse\020\240\010\022\033\n\026k_EMsg"
  "GCSaxxyBroadcast\020\241\010\022!\n\034k_EMsgGCBackpackS"
  "ortFinished\020\242\010\022$\n\037k_EMsgGCAdjustItemEqui"
  "ppedState\020\243\010\022\030\n\023k_EMsgGCCollectItem\020\245\010\022\035"
  "\n\030k_EMsgGCItemAcknowledged\020\246\010\022)\n$k_EMsgG"
  "CPresets_SelectPresetForClass\020\247\010\022$\n\037k_EM"
  "sgGCPresets_SetItemPosition\020\250\010\022\031\n\024k_EMsg"
  "GC_ReportAbuse\020\251\010\022!\n\034k_EMsgGC_ReportAbus"
  "eResponse\020\252\010\022.\n)k_EMsgGCPresets_SelectPr"
  "esetForClassReply\020\253\010\022!\n\034k_EMsgGCNameItem"
  "Notification\020\254\010\022&\n!k_EMsgGCClientDisplay"
  "Notification\020\255\010\022\035\n\030k_EMsgGCApplyStrangeP"
  "art\020\256\010\022)\n$k_EMsgGC_IncrementKillCountAtt"
  "ribute\020\257\010\022(\n#k_EMsgGC_IncrementKillCount"
  "Response\020\260\010\022\036\n\031k_EMsgGCRemoveStrangePart"
  "\020\261\010\022\037\n\032k_EMsgGCResetStrangeScores\020\262\010\022\030\n\023"
  "k_EMsgGCGiftedItems\020\263\010\022\035\n\030k_EMsgGCApplyU"
  "pgradeCard\020\265\010\022\036\n\031k_EMsgGCRemoveUpgradeCa"
  "rd\020\266\010\022$\n\037k_EMsgGCApplyStrangeRestriction"
  "\020\267\010\022$\n\037k_EMsgGCClientRequestMarketData\020\270"
  "\010\022,\n\'k_EMsgGCClientRequestMarketDataResp"
  "onse\020\271\010\022\030\n\023k_EMsgGCApplyXifier\020\272\010\022 \n\033k_E"
  "MsgGCApplyXifierResponse\020\273\010\022(\n#k_EMsgGC_"
  "TrackUniquePlayerPairEvent\020\274\010\022*\n%k_EMsgG"
  "CFulfillDynamicRecipeComponent\020\275\010\0222\n-k_E"
  "MsgGCFulfillDynamicRecipeComponentRespon"
  "se\020\276\010\022(\n#k_EMsgGCSetItemEffectVerticalOf"
  "fset\020\277\010\022&\n!k_EMsgGCSetHatEffectUseHeadOr"
  "igin\020\300\010\022\037\n\032k_EMsgGCItemEaterRecharger\020\301\010"
  "\022\'\n\"k_EMsgGCItemEaterRechargerResponse\020\302"
  "\010\022 \n\033k_EMsgGCApplyBaseItemXifier\020\303\010\022%\n k"
  "_EMsgGCApplyClassTransmogrifier\020\304\010\022(\n#k_"
  "EMsgGCApplyHalloweenSpellbookPage\020\305\010\022\035\n\030"
  "k_EMsgGCRemoveKillStreak\020\306\010\022%\n k_EMsgGCR"
  "emoveKillStreakResponse\020\307\010\022$\n\037k_EMsgGCTF"
  "SpecificItemBroadcast\020\310\010\0222\n-k_EMsgGC_Inc"
  "rementKillCountAttribute_Multiple\020\311\010\022%\n "
  "k_EMsgGCDeliverGiftResponseGiver\020\312\010\022\035\n\030k"
  "_EMsgGCSetItemPositions\020\314\010\022\'\n\"k_EMsgGCLo"
  "okupMultipleAccountNames\020\315\010\022/\n*k_EMsgGCL"
  "ookupMultipleAccountNamesResponse\020\316\010\022\030\n\023"
  "k_EMsgGCTradingBase\020\334\013\022)\n$k_EMsgGCTradin"
  "g_InitiateTradeRequest\020\335\013\022*\n%k_EMsgGCTra"
  "ding_InitiateTradeResponse\020\336\013\022!\n\034k_EMsgG"
  "CTrading_StartSession\020\337\013\022\"\n\035k_EMsgGCTrad"
  "ing_SessionClosed\020\345\013\022\"\n\035k_EMsgGCTrading_"
  "CancelSession\020\346\013\0221\n,k_EMsgGCTrading_Init"
  "iateTradeRequestResponse\020\352\013\022)\n$k_EMsgGCS"
  "erverBrowser_FavoriteServer\020\301\014\022*\n%k_EMsg"
  "GCServerBrowser_BlacklistServer\020\302\014\022\036\n\031k_"
  "EMsgGCServerRentalsBase\020\244\r\022#\n\036k_EMsgGCIt"
  "emPreviewCheckStatus\020\245\r\022&\n!k_EMsgGCItemP"
  "reviewStatusResponse\020\246\r\022\037\n\032k_EMsgGCItemP"
  "reviewRequest\020\247\r\022\'\n\"k_EMsgGCItemPreviewR"
  "equestResponse\020\250\r\022\036\n\031k_EMsgGCItemPreview"
  "Expire\020\251\r\022*\n%k_EMsgGCItemPreviewExpireNo"
  "tification\020\252\r\022.\n)k_EMsgGCItemPreviewItem"
  "BoughtNotification\020\254\r\022\037\n\032k_EMsgGCDev_New"
  "ItemRequest\020\321\017\022\'\n\"k_EMsgGCDev_NewItemReq"
  "uestResponse\020\322\017\022%\n k_EMsgGCDev_DebugRoll"
  "LootRequest\020\323\017\022\035\n\030k_EMsgGCStoreGetUserDa"
  "ta\020\304\023\022%\n k_EMsgGCStoreGetUserDataRespons"
  "e\020\305\023\022)\n$k_EMsgGCStorePurchaseInit_DEPREC"
  "ATED\020\306\023\0221\n,k_EMsgGCStorePurchaseInitResp"
  "onse_DEPRECATED\020\307\023\022\"\n\035k_EMsgGCStorePurch"
  "aseFinalize\020\320\023\022*\n%k_EMsgGCStorePurchaseF"
  "inalizeResponse\020\321\023\022 \n\033k_EMsgGCStorePurch"
  "aseCancel\020\322\023\022(\n#k_EMsgGCStorePurchaseCan"
  "celResponse\020\323\023\022\"\n\035k_EMsgGCStorePurchaseQ"
  "ueryTxn\020\314\023\022*\n%k_EMsgGCStorePurchaseQuery"
  "TxnResponse\020\315\023\022\036\n\031k_EMsgGCStorePurchaseI"
  "nit\020\316\023\022&\n!k_EMsgGCStorePurchaseInitRespo"
  "nse\020\317\023\022\036\n\031k_EMsgGCToGCDirtySDOCache\020\324\023\022&"
  "\n!k_EMsgGCToGCDirtyMultipleSDOCache\020\325\023\022\""
  "\n\035k_EMsgGCToGCUpdateSQLKeyValue\020\326\023\022(\n#k_"
  "EMsgGCToGCBroadcastConsoleCommand\020\331\023\022!\n\034"
  "k_EMsgGCServerVersionUpdated\020\332\023\022\033\n\026k_EMs"
  "gGCApplyAutograph\020\333\023\022%\n k_EMsgGCToGCWebA"
  "PIAccountChanged\020\334\023\022!\n\034k_EMsgGCRequestAn"
  "nouncements\020\335\023\022)\n$k_EMsgGCRequestAnnounc"
  "ementsResponse\020\336\023\022%\n k_EMsgGCRequestPass"
  "portItemGrant\020\337\023\022!\n\034k_EMsgGCClientVersio"
  "nUpdated\020\340\023\022+\n&k_EMsgGCItemPurgatory_Fin"
  "alizePurchase\020\343\023\0223\n.k_EMsgGCItemPurgator"
  "y_FinalizePurchaseResponse\020\344\023\022)\n$k_EMsgG"
  "CItemPurgatory_RefundPurchase\020\345\023\0221\n,k_EM"
  "sgGCItemPurgatory_RefundPurchaseResponse"
  "\020\346\023\022.\n)k_EMsgGCToGCPlayerStrangeCountAdj"
  "ustments\020\347\023\022\"\n\035k_EMsgGCRequestStoreSales"
  "Data\020\350\023\022*\n%k_EMsgGCRequestStoreSalesData"
  "Response\020\351\023\0222\n-k_EMsgGCRequestStoreSales"
  "DataUpToDateResponse\020\352\023\022\034\n\027k_EMsgGCToGCP"
  "ingRequest\020\353\023\022\035\n\030k_EMsgGCToGCPingRespons"
  "e\020\354\023\022%\n k_EMsgGCToGCGetUserSessionServer"
  "\020\355\023\022-\n(k_EMsgGCToGCGetUserSessionServerR"
  "esponse\020\356\023\022%\n k_EMsgGCToGCGetUserServerM"
  "embers\020\357\023\022-\n(k_EMsgGCToGCGetUserServerMe"
  "mbersResponse\020\360\023\022+\n&k_EMsgGCToGCGrantSel"
  "fMadeItemToAccount\020\373\023\022!\n\034k_EMsgGCToGCTha"
  "nkedByNewUser\020\374\023\022!\n\034k_EMsgGCShuffleCrate"
  "Contents\020\375\023\022$\n\037k_EMsgGCQuestObjective_Pr"
  "ogress\020\376\023\022\033\n\026k_EMsgGCQuestCompleted\020\377\023\022\033"
  "\n\026k_EMsgGCApplyDuckToken\020\200\024\022(\n#k_EMsgGCQ"
  "uestObjective_PointsChange\020\202\024\022.\n)k_EMsgG"
  "CQuestObjective_RequestLoanerItems\020\204\024\0221\n"
  ",k_EMsgGCQuestObjective_RequestLoanerRes"
  "ponse\020\205\024\022&\n!k_EMsgGCApplyStrangeCountTra"
  "nsfer\020\206\024\022#\n\036k_EMsgGCCraftCollectionUpgra"
  "de\020\207\024\022#\n\036k_EMsgGCCraftHalloweenOffering\020"
  "\210\024\022!\n\034k_EMsgGCQuestDiscard_Request\020\211\024\022\033\n"
  "\026k_EMsgGCRemoveGiftedBy\020\212\024\022#\n\036k_EMsgGCRe"
  "moveGiftedByResponse\020\213\024\022\035\n\030k_EMsgGCRemov"
  "eFestivizer\020\214\024\022%\n k_EMsgGCRemoveFestiviz"
  "erResponse\020\215\024\022!\n\034k_EMsgGCCraftCommonStat"
  "Clock\020\216\024*\233\002\n\016EGCMsgResponse\022\026\n\022k_EGCMsgR"
  "esponseOK\020\000\022\032\n\026k_EGCMsgResponseDenied\020\001\022"
  "\037\n\033k_EGCMsgResponseServerError\020\002\022\033\n\027k_EG"
  "CMsgResponseTimeout\020\003\022\033\n\027k_EGCMsgRespons"
  "eInvalid\020\004\022\033\n\027k_EGCMsgResponseNoMatch\020\005\022"
  " \n\034k_EGCMsgResponseUnknownError\020\006\022\037\n\033k_E"
  "GCMsgResponseNotLoggedOn\020\007\022\032\n\026k_EGCMsgFa"
  "iledToCreate\020\010*\221\002\n\014EUnlockStyle\022\033\n\027k_Unl"
  "ockStyle_Succeeded\020\000\022\037\n\033k_UnlockStyle_Fa"
  "iled_PreReq\020\001\022#\n\037k_UnlockStyle_Failed_Ca"
  "ntAfford\020\002\022#\n\037k_UnlockStyle_Failed_CantC"
  "ommit\020\003\022&\n\"k_UnlockStyle_Failed_CantLock"
  "Cache\020\004\022)\n%k_UnlockStyle_Failed_CantAffo"
  "rdAttrib\020\005\022&\n\"k_UnlockStyle_Failed_CantA"
  "ffordGem\020\006*\363\002\n\037EItemPurgatoryResponse_Fi"
  "nalize\022.\n*k_ItemPurgatoryResponse_Finali"
  "ze_Succeeded\020\000\0226\n2k_ItemPurgatoryRespons"
  "e_Finalize_Failed_Incomplete\020\001\022\?\n;k_Item"
  "PurgatoryResponse_Finalize_Failed_ItemsN"
  "otInPurgatory\020\002\022=\n9k_ItemPurgatoryRespon"
  "se_Finalize_Failed_CouldNotFindItems\020\003\0225"
  "\n1k_ItemPurgatoryResponse_Finalize_Faile"
  "d_NoSOCache\020\004\0221\n-k_ItemPurgatoryResponse"
  "_Finalize_BackpackFull\020\005*\347\002\n\035EItemPurgat"
  "oryResponse_Refund\022,\n(k_ItemPurgatoryRes"
  "ponse_Refund_Succeeded\020\000\022<\n8k_ItemPurgat"
  "oryResponse_Refund_Failed_ItemNotInPurga"
  "tory\020\001\022:\n6k_ItemPurgatoryResponse_Refund"
  "_Failed_CouldNotFindItem\020\002\0223\n/k_ItemPurg"
  "atoryResponse_Refund_Failed_NoSOCache\020\003\022"
  "2\n.k_ItemPurgatoryResponse_Refund_Failed"
  "_NoDetail\020\004\0225\n1k_ItemPurgatoryResponse_R"
  "efund_Failed_NexonWebAPI\020\005B\005H\001\200\001\000"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_econ_5fgcmessages_2eproto_deps[1] = {
  &::descriptor_table_steammessages_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_econ_5fgcmessages_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_econ_5fgcmessages_2eproto = {
  false, false, 9873, descriptor_table_protodef_econ_5fgcmessages_2eproto, "econ_gcmessages.proto", 
  &descriptor_table_econ_5fgcmessages_2eproto_once, descriptor_table_econ_5fgcmessages_2eproto_deps, 1, 34,
  schemas, file_default_instances, TableStruct_econ_5fgcmessages_2eproto::offsets,
  file_level_metadata_econ_5fgcmessages_2eproto, file_level_enum_descriptors_econ_5fgcmessages_2eproto, file_level_service_descriptors_econ_5fgcmessages_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_econ_5fgcmessages_2eproto_getter() {
  return &descriptor_table_econ_5fgcmessages_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_econ_5fgcmessages_2eproto(&descriptor_table_econ_5fgcmessages_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCItemMsg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[0];
}
bool EGCItemMsg_IsValid(int value) {
  switch (value) {
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1019:
    case 1020:
    case 1021:
    case 1022:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1029:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1034:
    case 1036:
    case 1037:
    case 1038:
    case 1039:
    case 1040:
    case 1041:
    case 1042:
    case 1043:
    case 1044:
    case 1045:
    case 1046:
    case 1049:
    case 1050:
    case 1051:
    case 1052:
    case 1053:
    case 1054:
    case 1055:
    case 1056:
    case 1057:
    case 1058:
    case 1059:
    case 1061:
    case 1062:
    case 1063:
    case 1064:
    case 1065:
    case 1066:
    case 1067:
    case 1068:
    case 1069:
    case 1070:
    case 1071:
    case 1072:
    case 1073:
    case 1074:
    case 1075:
    case 1077:
    case 1078:
    case 1079:
    case 1080:
    case 1081:
    case 1082:
    case 1083:
    case 1084:
    case 1085:
    case 1086:
    case 1087:
    case 1088:
    case 1089:
    case 1090:
    case 1091:
    case 1092:
    case 1093:
    case 1094:
    case 1095:
    case 1096:
    case 1097:
    case 1098:
    case 1100:
    case 1101:
    case 1102:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1509:
    case 1510:
    case 1514:
    case 1601:
    case 1602:
    case 1700:
    case 1701:
    case 1702:
    case 1703:
    case 1704:
    case 1705:
    case 1706:
    case 1708:
    case 2001:
    case 2002:
    case 2003:
    case 2500:
    case 2501:
    case 2502:
    case 2503:
    case 2508:
    case 2509:
    case 2510:
    case 2511:
    case 2512:
    case 2513:
    case 2514:
    case 2515:
    case 2516:
    case 2517:
    case 2518:
    case 2521:
    case 2522:
    case 2523:
    case 2524:
    case 2525:
    case 2526:
    case 2527:
    case 2528:
    case 2531:
    case 2532:
    case 2533:
    case 2534:
    case 2535:
    case 2536:
    case 2537:
    case 2538:
    case 2539:
    case 2540:
    case 2541:
    case 2542:
    case 2543:
    case 2544:
    case 2555:
    case 2556:
    case 2557:
    case 2558:
    case 2559:
    case 2560:
    case 2562:
    case 2564:
    case 2565:
    case 2566:
    case 2567:
    case 2568:
    case 2569:
    case 2570:
    case 2571:
    case 2572:
    case 2573:
    case 2574:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCMsgResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[1];
}
bool EGCMsgResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EUnlockStyle_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[2];
}
bool EUnlockStyle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EItemPurgatoryResponse_Finalize_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[3];
}
bool EItemPurgatoryResponse_Finalize_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EItemPurgatoryResponse_Refund_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[4];
}
bool EItemPurgatoryResponse_Refund_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CMsgApplyAutograph::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgApplyAutograph>()._has_bits_);
  static void set_has_autograph_item_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_item_item_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgApplyAutograph::CMsgApplyAutograph(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgApplyAutograph)
}
CMsgApplyAutograph::CMsgApplyAutograph(const CMsgApplyAutograph& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&autograph_item_id_, &from.autograph_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_item_id_) -
    reinterpret_cast<char*>(&autograph_item_id_)) + sizeof(item_item_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgApplyAutograph)
}

void CMsgApplyAutograph::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&autograph_item_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&item_item_id_) -
    reinterpret_cast<char*>(&autograph_item_id_)) + sizeof(item_item_id_));
}

CMsgApplyAutograph::~CMsgApplyAutograph() {
  // @@protoc_insertion_point(destructor:CMsgApplyAutograph)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgApplyAutograph::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgApplyAutograph::ArenaDtor(void* object) {
  CMsgApplyAutograph* _this = reinterpret_cast< CMsgApplyAutograph* >(object);
  (void)_this;
}
void CMsgApplyAutograph::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgApplyAutograph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgApplyAutograph::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgApplyAutograph)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&autograph_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_item_id_) -
        reinterpret_cast<char*>(&autograph_item_id_)) + sizeof(item_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgApplyAutograph::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 autograph_item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_autograph_item_id(&has_bits);
          autograph_item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 item_item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_item_item_id(&has_bits);
          item_item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgApplyAutograph::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgApplyAutograph)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 autograph_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_autograph_item_id(), target);
  }

  // optional uint64 item_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_item_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgApplyAutograph)
  return target;
}

size_t CMsgApplyAutograph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgApplyAutograph)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 autograph_item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_autograph_item_id());
    }

    // optional uint64 item_item_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_item_item_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgApplyAutograph::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgApplyAutograph)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgApplyAutograph* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgApplyAutograph>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgApplyAutograph)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgApplyAutograph)
    MergeFrom(*source);
  }
}

void CMsgApplyAutograph::MergeFrom(const CMsgApplyAutograph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgApplyAutograph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      autograph_item_id_ = from.autograph_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_item_id_ = from.item_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgApplyAutograph::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgApplyAutograph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgApplyAutograph::CopyFrom(const CMsgApplyAutograph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgApplyAutograph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgApplyAutograph::IsInitialized() const {
  return true;
}

void CMsgApplyAutograph::InternalSwap(CMsgApplyAutograph* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgApplyAutograph, item_item_id_)
      + sizeof(CMsgApplyAutograph::item_item_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgApplyAutograph, autograph_item_id_)>(
          reinterpret_cast<char*>(&autograph_item_id_),
          reinterpret_cast<char*>(&other->autograph_item_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgApplyAutograph::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[0]);
}

// ===================================================================

class CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment>()._has_bits_);
  static void set_has_event_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_item_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_adjustment(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}
CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&adjustment_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(adjustment_));
  // @@protoc_insertion_point(copy_constructor:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&item_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&adjustment_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(adjustment_));
}

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::~CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment() {
  // @@protoc_insertion_point(destructor:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::ArenaDtor(void* object) {
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* _this = reinterpret_cast< CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* >(object);
  (void)_this;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adjustment_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(adjustment_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 event_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_event_type(&has_bits);
          event_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_item_id(&has_bits);
          item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 adjustment = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_adjustment(&has_bits);
          adjustment_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 event_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_event_type(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_item_id(), target);
  }

  // optional uint32 adjustment = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_adjustment(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return target;
}

size_t CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 item_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_item_id());
    }

    // optional uint32 event_type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_event_type());
    }

    // optional uint32 adjustment = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_adjustment());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
    MergeFrom(*source);
  }
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergeFrom(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      event_type_ = from.event_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      adjustment_ = from.adjustment_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CopyFrom(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::IsInitialized() const {
  return true;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::InternalSwap(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, adjustment_)
      + sizeof(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::adjustment_)
      - PROTOBUF_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, item_id_)>(
          reinterpret_cast<char*>(&item_id_),
          reinterpret_cast<char*>(&other->item_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[1]);
}

// ===================================================================

class CMsgEconPlayerStrangeCountAdjustment::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgEconPlayerStrangeCountAdjustment>()._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgEconPlayerStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  strange_count_adjustments_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgEconPlayerStrangeCountAdjustment)
}
CMsgEconPlayerStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      strange_count_adjustments_(from.strange_count_adjustments_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgEconPlayerStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment::SharedCtor() {
account_id_ = 0u;
}

CMsgEconPlayerStrangeCountAdjustment::~CMsgEconPlayerStrangeCountAdjustment() {
  // @@protoc_insertion_point(destructor:CMsgEconPlayerStrangeCountAdjustment)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgEconPlayerStrangeCountAdjustment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgEconPlayerStrangeCountAdjustment::ArenaDtor(void* object) {
  CMsgEconPlayerStrangeCountAdjustment* _this = reinterpret_cast< CMsgEconPlayerStrangeCountAdjustment* >(object);
  (void)_this;
}
void CMsgEconPlayerStrangeCountAdjustment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgEconPlayerStrangeCountAdjustment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgEconPlayerStrangeCountAdjustment::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgEconPlayerStrangeCountAdjustment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strange_count_adjustments_.Clear();
  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgEconPlayerStrangeCountAdjustment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_strange_count_adjustments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgEconPlayerStrangeCountAdjustment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgEconPlayerStrangeCountAdjustment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_strange_count_adjustments_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_strange_count_adjustments(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgEconPlayerStrangeCountAdjustment)
  return target;
}

size_t CMsgEconPlayerStrangeCountAdjustment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgEconPlayerStrangeCountAdjustment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  total_size += 1UL * this->_internal_strange_count_adjustments_size();
  for (const auto& msg : this->strange_count_adjustments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 account_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_account_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgEconPlayerStrangeCountAdjustment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgEconPlayerStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgEconPlayerStrangeCountAdjustment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgEconPlayerStrangeCountAdjustment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgEconPlayerStrangeCountAdjustment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgEconPlayerStrangeCountAdjustment)
    MergeFrom(*source);
  }
}

void CMsgEconPlayerStrangeCountAdjustment::MergeFrom(const CMsgEconPlayerStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgEconPlayerStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  strange_count_adjustments_.MergeFrom(from.strange_count_adjustments_);
  if (from._internal_has_account_id()) {
    _internal_set_account_id(from._internal_account_id());
  }
}

void CMsgEconPlayerStrangeCountAdjustment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgEconPlayerStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgEconPlayerStrangeCountAdjustment::CopyFrom(const CMsgEconPlayerStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgEconPlayerStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgEconPlayerStrangeCountAdjustment::IsInitialized() const {
  return true;
}

void CMsgEconPlayerStrangeCountAdjustment::InternalSwap(CMsgEconPlayerStrangeCountAdjustment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  strange_count_adjustments_.InternalSwap(&other->strange_count_adjustments_);
  swap(account_id_, other->account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgEconPlayerStrangeCountAdjustment::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[2]);
}

// ===================================================================

class CMsgRequestItemPurgatory_FinalizePurchase::_Internal {
 public:
};

CMsgRequestItemPurgatory_FinalizePurchase::CMsgRequestItemPurgatory_FinalizePurchase(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  item_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgRequestItemPurgatory_FinalizePurchase)
}
CMsgRequestItemPurgatory_FinalizePurchase::CMsgRequestItemPurgatory_FinalizePurchase(const CMsgRequestItemPurgatory_FinalizePurchase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_FinalizePurchase)
}

void CMsgRequestItemPurgatory_FinalizePurchase::SharedCtor() {
}

CMsgRequestItemPurgatory_FinalizePurchase::~CMsgRequestItemPurgatory_FinalizePurchase() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_FinalizePurchase)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgRequestItemPurgatory_FinalizePurchase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgRequestItemPurgatory_FinalizePurchase::ArenaDtor(void* object) {
  CMsgRequestItemPurgatory_FinalizePurchase* _this = reinterpret_cast< CMsgRequestItemPurgatory_FinalizePurchase* >(object);
  (void)_this;
}
void CMsgRequestItemPurgatory_FinalizePurchase::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgRequestItemPurgatory_FinalizePurchase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgRequestItemPurgatory_FinalizePurchase::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRequestItemPurgatory_FinalizePurchase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgRequestItemPurgatory_FinalizePurchase::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 item_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_item_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_item_ids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgRequestItemPurgatory_FinalizePurchase::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_FinalizePurchase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->_internal_item_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_item_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_FinalizePurchase)
  return target;
}

size_t CMsgRequestItemPurgatory_FinalizePurchase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRequestItemPurgatory_FinalizePurchase)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_item_ids_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestItemPurgatory_FinalizePurchase::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRequestItemPurgatory_FinalizePurchase)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_FinalizePurchase* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgRequestItemPurgatory_FinalizePurchase>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRequestItemPurgatory_FinalizePurchase)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRequestItemPurgatory_FinalizePurchase)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_FinalizePurchase::MergeFrom(const CMsgRequestItemPurgatory_FinalizePurchase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRequestItemPurgatory_FinalizePurchase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
}

void CMsgRequestItemPurgatory_FinalizePurchase::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRequestItemPurgatory_FinalizePurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_FinalizePurchase::CopyFrom(const CMsgRequestItemPurgatory_FinalizePurchase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRequestItemPurgatory_FinalizePurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_FinalizePurchase::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_FinalizePurchase::InternalSwap(CMsgRequestItemPurgatory_FinalizePurchase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  item_ids_.InternalSwap(&other->item_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgRequestItemPurgatory_FinalizePurchase::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[3]);
}

// ===================================================================

class CMsgRequestItemPurgatory_FinalizePurchaseResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgRequestItemPurgatory_FinalizePurchaseResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgRequestItemPurgatory_FinalizePurchaseResponse::CMsgRequestItemPurgatory_FinalizePurchaseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}
CMsgRequestItemPurgatory_FinalizePurchaseResponse::CMsgRequestItemPurgatory_FinalizePurchaseResponse(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SharedCtor() {
result_ = 0u;
}

CMsgRequestItemPurgatory_FinalizePurchaseResponse::~CMsgRequestItemPurgatory_FinalizePurchaseResponse() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::ArenaDtor(void* object) {
  CMsgRequestItemPurgatory_FinalizePurchaseResponse* _this = reinterpret_cast< CMsgRequestItemPurgatory_FinalizePurchaseResponse* >(object);
  (void)_this;
}
void CMsgRequestItemPurgatory_FinalizePurchaseResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgRequestItemPurgatory_FinalizePurchaseResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgRequestItemPurgatory_FinalizePurchaseResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return target;
}

size_t CMsgRequestItemPurgatory_FinalizePurchaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_FinalizePurchaseResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgRequestItemPurgatory_FinalizePurchaseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergeFrom(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::CopyFrom(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_FinalizePurchaseResponse::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::InternalSwap(CMsgRequestItemPurgatory_FinalizePurchaseResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgRequestItemPurgatory_FinalizePurchaseResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[4]);
}

// ===================================================================

class CMsgRequestItemPurgatory_RefundPurchase::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgRequestItemPurgatory_RefundPurchase>()._has_bits_);
  static void set_has_item_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgRequestItemPurgatory_RefundPurchase::CMsgRequestItemPurgatory_RefundPurchase(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgRequestItemPurgatory_RefundPurchase)
}
CMsgRequestItemPurgatory_RefundPurchase::CMsgRequestItemPurgatory_RefundPurchase(const CMsgRequestItemPurgatory_RefundPurchase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  item_id_ = from.item_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_RefundPurchase)
}

void CMsgRequestItemPurgatory_RefundPurchase::SharedCtor() {
item_id_ = uint64_t{0u};
}

CMsgRequestItemPurgatory_RefundPurchase::~CMsgRequestItemPurgatory_RefundPurchase() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_RefundPurchase)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgRequestItemPurgatory_RefundPurchase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgRequestItemPurgatory_RefundPurchase::ArenaDtor(void* object) {
  CMsgRequestItemPurgatory_RefundPurchase* _this = reinterpret_cast< CMsgRequestItemPurgatory_RefundPurchase* >(object);
  (void)_this;
}
void CMsgRequestItemPurgatory_RefundPurchase::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgRequestItemPurgatory_RefundPurchase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgRequestItemPurgatory_RefundPurchase::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRequestItemPurgatory_RefundPurchase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_ = uint64_t{0u};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgRequestItemPurgatory_RefundPurchase::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_item_id(&has_bits);
          item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgRequestItemPurgatory_RefundPurchase::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_RefundPurchase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_RefundPurchase)
  return target;
}

size_t CMsgRequestItemPurgatory_RefundPurchase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRequestItemPurgatory_RefundPurchase)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 item_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_item_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestItemPurgatory_RefundPurchase::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRequestItemPurgatory_RefundPurchase)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_RefundPurchase* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgRequestItemPurgatory_RefundPurchase>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRequestItemPurgatory_RefundPurchase)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRequestItemPurgatory_RefundPurchase)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_RefundPurchase::MergeFrom(const CMsgRequestItemPurgatory_RefundPurchase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRequestItemPurgatory_RefundPurchase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item_id()) {
    _internal_set_item_id(from._internal_item_id());
  }
}

void CMsgRequestItemPurgatory_RefundPurchase::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRequestItemPurgatory_RefundPurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_RefundPurchase::CopyFrom(const CMsgRequestItemPurgatory_RefundPurchase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRequestItemPurgatory_RefundPurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_RefundPurchase::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_RefundPurchase::InternalSwap(CMsgRequestItemPurgatory_RefundPurchase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgRequestItemPurgatory_RefundPurchase::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[5]);
}

// ===================================================================

class CMsgRequestItemPurgatory_RefundPurchaseResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgRequestItemPurgatory_RefundPurchaseResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgRequestItemPurgatory_RefundPurchaseResponse::CMsgRequestItemPurgatory_RefundPurchaseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgRequestItemPurgatory_RefundPurchaseResponse)
}
CMsgRequestItemPurgatory_RefundPurchaseResponse::CMsgRequestItemPurgatory_RefundPurchaseResponse(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgRequestItemPurgatory_RefundPurchaseResponse)
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SharedCtor() {
result_ = 0u;
}

CMsgRequestItemPurgatory_RefundPurchaseResponse::~CMsgRequestItemPurgatory_RefundPurchaseResponse() {
  // @@protoc_insertion_point(destructor:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::ArenaDtor(void* object) {
  CMsgRequestItemPurgatory_RefundPurchaseResponse* _this = reinterpret_cast< CMsgRequestItemPurgatory_RefundPurchaseResponse* >(object);
  (void)_this;
}
void CMsgRequestItemPurgatory_RefundPurchaseResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgRequestItemPurgatory_RefundPurchaseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgRequestItemPurgatory_RefundPurchaseResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgRequestItemPurgatory_RefundPurchaseResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return target;
}

size_t CMsgRequestItemPurgatory_RefundPurchaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_RefundPurchaseResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgRequestItemPurgatory_RefundPurchaseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRequestItemPurgatory_RefundPurchaseResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRequestItemPurgatory_RefundPurchaseResponse)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::MergeFrom(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::CopyFrom(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRequestItemPurgatory_RefundPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_RefundPurchaseResponse::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::InternalSwap(CMsgRequestItemPurgatory_RefundPurchaseResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgRequestItemPurgatory_RefundPurchaseResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[6]);
}

// ===================================================================

class CMsgCraftingResponse::_Internal {
 public:
};

CMsgCraftingResponse::CMsgCraftingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  item_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgCraftingResponse)
}
CMsgCraftingResponse::CMsgCraftingResponse(const CMsgCraftingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgCraftingResponse)
}

void CMsgCraftingResponse::SharedCtor() {
}

CMsgCraftingResponse::~CMsgCraftingResponse() {
  // @@protoc_insertion_point(destructor:CMsgCraftingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgCraftingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgCraftingResponse::ArenaDtor(void* object) {
  CMsgCraftingResponse* _this = reinterpret_cast< CMsgCraftingResponse* >(object);
  (void)_this;
}
void CMsgCraftingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgCraftingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgCraftingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCraftingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgCraftingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 item_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_item_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_item_ids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgCraftingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCraftingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->_internal_item_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_item_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCraftingResponse)
  return target;
}

size_t CMsgCraftingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCraftingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_item_ids_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCraftingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCraftingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCraftingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgCraftingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCraftingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCraftingResponse)
    MergeFrom(*source);
  }
}

void CMsgCraftingResponse::MergeFrom(const CMsgCraftingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCraftingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
}

void CMsgCraftingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCraftingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftingResponse::CopyFrom(const CMsgCraftingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCraftingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftingResponse::IsInitialized() const {
  return true;
}

void CMsgCraftingResponse::InternalSwap(CMsgCraftingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  item_ids_.InternalSwap(&other->item_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgCraftingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[7]);
}

// ===================================================================

class CMsgGCRequestStoreSalesData::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCRequestStoreSalesData>()._has_bits_);
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_currency(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCRequestStoreSalesData::CMsgGCRequestStoreSalesData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCRequestStoreSalesData)
}
CMsgGCRequestStoreSalesData::CMsgGCRequestStoreSalesData(const CMsgGCRequestStoreSalesData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&currency_) -
    reinterpret_cast<char*>(&version_)) + sizeof(currency_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesData)
}

void CMsgGCRequestStoreSalesData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&currency_) -
    reinterpret_cast<char*>(&version_)) + sizeof(currency_));
}

CMsgGCRequestStoreSalesData::~CMsgGCRequestStoreSalesData() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCRequestStoreSalesData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCRequestStoreSalesData::ArenaDtor(void* object) {
  CMsgGCRequestStoreSalesData* _this = reinterpret_cast< CMsgGCRequestStoreSalesData* >(object);
  (void)_this;
}
void CMsgGCRequestStoreSalesData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCRequestStoreSalesData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCRequestStoreSalesData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRequestStoreSalesData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&currency_) -
        reinterpret_cast<char*>(&version_)) + sizeof(currency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCRequestStoreSalesData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_version(&has_bits);
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 currency = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_currency(&has_bits);
          currency_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCRequestStoreSalesData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_version(), target);
  }

  // optional uint32 currency = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_currency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesData)
  return target;
}

size_t CMsgGCRequestStoreSalesData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRequestStoreSalesData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 version = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_version());
    }

    // optional uint32 currency = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_currency());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCRequestStoreSalesData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCRequestStoreSalesData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCRequestStoreSalesData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCRequestStoreSalesData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCRequestStoreSalesData)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesData::MergeFrom(const CMsgGCRequestStoreSalesData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRequestStoreSalesData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      currency_ = from.currency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCRequestStoreSalesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesData::CopyFrom(const CMsgGCRequestStoreSalesData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRequestStoreSalesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesData::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesData::InternalSwap(CMsgGCRequestStoreSalesData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCRequestStoreSalesData, currency_)
      + sizeof(CMsgGCRequestStoreSalesData::currency_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCRequestStoreSalesData, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCRequestStoreSalesData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[8]);
}

// ===================================================================

class CMsgGCRequestStoreSalesDataResponse_Price::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCRequestStoreSalesDataResponse_Price>()._has_bits_);
  static void set_has_item_def(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCRequestStoreSalesDataResponse_Price::CMsgGCRequestStoreSalesDataResponse_Price(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCRequestStoreSalesDataResponse.Price)
}
CMsgGCRequestStoreSalesDataResponse_Price::CMsgGCRequestStoreSalesDataResponse_Price(const CMsgGCRequestStoreSalesDataResponse_Price& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&item_def_, &from.item_def_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&item_def_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesDataResponse.Price)
}

void CMsgGCRequestStoreSalesDataResponse_Price::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&item_def_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&item_def_)) + sizeof(price_));
}

CMsgGCRequestStoreSalesDataResponse_Price::~CMsgGCRequestStoreSalesDataResponse_Price() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesDataResponse.Price)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCRequestStoreSalesDataResponse_Price::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCRequestStoreSalesDataResponse_Price::ArenaDtor(void* object) {
  CMsgGCRequestStoreSalesDataResponse_Price* _this = reinterpret_cast< CMsgGCRequestStoreSalesDataResponse_Price* >(object);
  (void)_this;
}
void CMsgGCRequestStoreSalesDataResponse_Price::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCRequestStoreSalesDataResponse_Price::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCRequestStoreSalesDataResponse_Price::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRequestStoreSalesDataResponse.Price)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_def_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&price_) -
        reinterpret_cast<char*>(&item_def_)) + sizeof(price_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCRequestStoreSalesDataResponse_Price::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 item_def = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_item_def(&has_bits);
          item_def_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 price = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_price(&has_bits);
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCRequestStoreSalesDataResponse_Price::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesDataResponse.Price)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_item_def(), target);
  }

  // optional uint32 price = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_price(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesDataResponse.Price)
  return target;
}

size_t CMsgGCRequestStoreSalesDataResponse_Price::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRequestStoreSalesDataResponse.Price)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 item_def = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_item_def());
    }

    // optional uint32 price = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_price());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCRequestStoreSalesDataResponse_Price::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCRequestStoreSalesDataResponse.Price)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataResponse_Price* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCRequestStoreSalesDataResponse_Price>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCRequestStoreSalesDataResponse.Price)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCRequestStoreSalesDataResponse.Price)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataResponse_Price::MergeFrom(const CMsgGCRequestStoreSalesDataResponse_Price& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRequestStoreSalesDataResponse.Price)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000002u) {
      price_ = from.price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesDataResponse_Price::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCRequestStoreSalesDataResponse.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataResponse_Price::CopyFrom(const CMsgGCRequestStoreSalesDataResponse_Price& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRequestStoreSalesDataResponse.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataResponse_Price::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesDataResponse_Price::InternalSwap(CMsgGCRequestStoreSalesDataResponse_Price* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, price_)
      + sizeof(CMsgGCRequestStoreSalesDataResponse_Price::price_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, item_def_)>(
          reinterpret_cast<char*>(&item_def_),
          reinterpret_cast<char*>(&other->item_def_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCRequestStoreSalesDataResponse_Price::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[9]);
}

// ===================================================================

class CMsgGCRequestStoreSalesDataResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCRequestStoreSalesDataResponse>()._has_bits_);
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_expiration_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCRequestStoreSalesDataResponse::CMsgGCRequestStoreSalesDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  sale_price_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCRequestStoreSalesDataResponse)
}
CMsgGCRequestStoreSalesDataResponse::CMsgGCRequestStoreSalesDataResponse(const CMsgGCRequestStoreSalesDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      sale_price_(from.sale_price_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&expiration_time_) -
    reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesDataResponse)
}

void CMsgGCRequestStoreSalesDataResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&expiration_time_) -
    reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
}

CMsgGCRequestStoreSalesDataResponse::~CMsgGCRequestStoreSalesDataResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCRequestStoreSalesDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCRequestStoreSalesDataResponse::ArenaDtor(void* object) {
  CMsgGCRequestStoreSalesDataResponse* _this = reinterpret_cast< CMsgGCRequestStoreSalesDataResponse* >(object);
  (void)_this;
}
void CMsgGCRequestStoreSalesDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCRequestStoreSalesDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCRequestStoreSalesDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRequestStoreSalesDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sale_price_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&expiration_time_) -
        reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCRequestStoreSalesDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sale_price(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_version(&has_bits);
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 expiration_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_expiration_time(&has_bits);
          expiration_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCRequestStoreSalesDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_sale_price_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_sale_price(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_version(), target);
  }

  // optional uint32 expiration_time = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_expiration_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesDataResponse)
  return target;
}

size_t CMsgGCRequestStoreSalesDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRequestStoreSalesDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  total_size += 1UL * this->_internal_sale_price_size();
  for (const auto& msg : this->sale_price_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 version = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_version());
    }

    // optional uint32 expiration_time = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_expiration_time());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCRequestStoreSalesDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCRequestStoreSalesDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCRequestStoreSalesDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCRequestStoreSalesDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCRequestStoreSalesDataResponse)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataResponse::MergeFrom(const CMsgGCRequestStoreSalesDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRequestStoreSalesDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sale_price_.MergeFrom(from.sale_price_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      expiration_time_ = from.expiration_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCRequestStoreSalesDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataResponse::CopyFrom(const CMsgGCRequestStoreSalesDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRequestStoreSalesDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataResponse::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesDataResponse::InternalSwap(CMsgGCRequestStoreSalesDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  sale_price_.InternalSwap(&other->sale_price_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, expiration_time_)
      + sizeof(CMsgGCRequestStoreSalesDataResponse::expiration_time_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCRequestStoreSalesDataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[10]);
}

// ===================================================================

class CMsgGCRequestStoreSalesDataUpToDateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCRequestStoreSalesDataUpToDateResponse>()._has_bits_);
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_expiration_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCRequestStoreSalesDataUpToDateResponse::CMsgGCRequestStoreSalesDataUpToDateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCRequestStoreSalesDataUpToDateResponse)
}
CMsgGCRequestStoreSalesDataUpToDateResponse::CMsgGCRequestStoreSalesDataUpToDateResponse(const CMsgGCRequestStoreSalesDataUpToDateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&expiration_time_) -
    reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestStoreSalesDataUpToDateResponse)
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&expiration_time_) -
    reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
}

CMsgGCRequestStoreSalesDataUpToDateResponse::~CMsgGCRequestStoreSalesDataUpToDateResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestStoreSalesDataUpToDateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::ArenaDtor(void* object) {
  CMsgGCRequestStoreSalesDataUpToDateResponse* _this = reinterpret_cast< CMsgGCRequestStoreSalesDataUpToDateResponse* >(object);
  (void)_this;
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&expiration_time_) -
        reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCRequestStoreSalesDataUpToDateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_version(&has_bits);
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 expiration_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_expiration_time(&has_bits);
          expiration_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCRequestStoreSalesDataUpToDateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_version(), target);
  }

  // optional uint32 expiration_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_expiration_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestStoreSalesDataUpToDateResponse)
  return target;
}

size_t CMsgGCRequestStoreSalesDataUpToDateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 version = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_version());
    }

    // optional uint32 expiration_time = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_expiration_time());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataUpToDateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCRequestStoreSalesDataUpToDateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCRequestStoreSalesDataUpToDateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCRequestStoreSalesDataUpToDateResponse)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::MergeFrom(const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      expiration_time_ = from.expiration_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::CopyFrom(const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRequestStoreSalesDataUpToDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataUpToDateResponse::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::InternalSwap(CMsgGCRequestStoreSalesDataUpToDateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, expiration_time_)
      + sizeof(CMsgGCRequestStoreSalesDataUpToDateResponse::expiration_time_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCRequestStoreSalesDataUpToDateResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[11]);
}

// ===================================================================

class CMsgGCToGCPingRequest::_Internal {
 public:
};

CMsgGCToGCPingRequest::CMsgGCToGCPingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToGCPingRequest)
}
CMsgGCToGCPingRequest::CMsgGCToGCPingRequest(const CMsgGCToGCPingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCPingRequest)
}

void CMsgGCToGCPingRequest::SharedCtor() {
}

CMsgGCToGCPingRequest::~CMsgGCToGCPingRequest() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCPingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToGCPingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToGCPingRequest::ArenaDtor(void* object) {
  CMsgGCToGCPingRequest* _this = reinterpret_cast< CMsgGCToGCPingRequest* >(object);
  (void)_this;
}
void CMsgGCToGCPingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToGCPingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToGCPingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCPingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToGCPingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToGCPingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCPingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCPingRequest)
  return target;
}

size_t CMsgGCToGCPingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCPingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCPingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCPingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCPingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToGCPingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCPingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCPingRequest)
    MergeFrom(*source);
  }
}

void CMsgGCToGCPingRequest::MergeFrom(const CMsgGCToGCPingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCPingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCToGCPingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCPingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCPingRequest::CopyFrom(const CMsgGCToGCPingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCPingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCPingRequest::IsInitialized() const {
  return true;
}

void CMsgGCToGCPingRequest::InternalSwap(CMsgGCToGCPingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToGCPingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[12]);
}

// ===================================================================

class CMsgGCToGCPingResponse::_Internal {
 public:
};

CMsgGCToGCPingResponse::CMsgGCToGCPingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToGCPingResponse)
}
CMsgGCToGCPingResponse::CMsgGCToGCPingResponse(const CMsgGCToGCPingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCPingResponse)
}

void CMsgGCToGCPingResponse::SharedCtor() {
}

CMsgGCToGCPingResponse::~CMsgGCToGCPingResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCPingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToGCPingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToGCPingResponse::ArenaDtor(void* object) {
  CMsgGCToGCPingResponse* _this = reinterpret_cast< CMsgGCToGCPingResponse* >(object);
  (void)_this;
}
void CMsgGCToGCPingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToGCPingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToGCPingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCPingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToGCPingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToGCPingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCPingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCPingResponse)
  return target;
}

size_t CMsgGCToGCPingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCPingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCPingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCPingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCPingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToGCPingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCPingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCPingResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCPingResponse::MergeFrom(const CMsgGCToGCPingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCPingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCToGCPingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCPingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCPingResponse::CopyFrom(const CMsgGCToGCPingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCPingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCPingResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCPingResponse::InternalSwap(CMsgGCToGCPingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToGCPingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[13]);
}

// ===================================================================

class CMsgGCToGCGetUserSessionServer::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToGCGetUserSessionServer>()._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCToGCGetUserSessionServer::CMsgGCToGCGetUserSessionServer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToGCGetUserSessionServer)
}
CMsgGCToGCGetUserSessionServer::CMsgGCToGCGetUserSessionServer(const CMsgGCToGCGetUserSessionServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserSessionServer)
}

void CMsgGCToGCGetUserSessionServer::SharedCtor() {
account_id_ = 0u;
}

CMsgGCToGCGetUserSessionServer::~CMsgGCToGCGetUserSessionServer() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserSessionServer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToGCGetUserSessionServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToGCGetUserSessionServer::ArenaDtor(void* object) {
  CMsgGCToGCGetUserSessionServer* _this = reinterpret_cast< CMsgGCToGCGetUserSessionServer* >(object);
  (void)_this;
}
void CMsgGCToGCGetUserSessionServer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToGCGetUserSessionServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToGCGetUserSessionServer::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCGetUserSessionServer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToGCGetUserSessionServer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToGCGetUserSessionServer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserSessionServer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserSessionServer)
  return target;
}

size_t CMsgGCToGCGetUserSessionServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCGetUserSessionServer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 account_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_account_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGetUserSessionServer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCGetUserSessionServer)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserSessionServer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToGCGetUserSessionServer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCGetUserSessionServer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCGetUserSessionServer)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserSessionServer::MergeFrom(const CMsgGCToGCGetUserSessionServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCGetUserSessionServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_account_id()) {
    _internal_set_account_id(from._internal_account_id());
  }
}

void CMsgGCToGCGetUserSessionServer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCGetUserSessionServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserSessionServer::CopyFrom(const CMsgGCToGCGetUserSessionServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCGetUserSessionServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserSessionServer::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserSessionServer::InternalSwap(CMsgGCToGCGetUserSessionServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToGCGetUserSessionServer::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[14]);
}

// ===================================================================

class CMsgGCToGCGetUserSessionServerResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToGCGetUserSessionServerResponse>()._has_bits_);
  static void set_has_server_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCToGCGetUserSessionServerResponse::CMsgGCToGCGetUserSessionServerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToGCGetUserSessionServerResponse)
}
CMsgGCToGCGetUserSessionServerResponse::CMsgGCToGCGetUserSessionServerResponse(const CMsgGCToGCGetUserSessionServerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  server_steam_id_ = from.server_steam_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserSessionServerResponse)
}

void CMsgGCToGCGetUserSessionServerResponse::SharedCtor() {
server_steam_id_ = uint64_t{0u};
}

CMsgGCToGCGetUserSessionServerResponse::~CMsgGCToGCGetUserSessionServerResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserSessionServerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToGCGetUserSessionServerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToGCGetUserSessionServerResponse::ArenaDtor(void* object) {
  CMsgGCToGCGetUserSessionServerResponse* _this = reinterpret_cast< CMsgGCToGCGetUserSessionServerResponse* >(object);
  (void)_this;
}
void CMsgGCToGCGetUserSessionServerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToGCGetUserSessionServerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToGCGetUserSessionServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCGetUserSessionServerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_steam_id_ = uint64_t{0u};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToGCGetUserSessionServerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 server_steam_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_server_steam_id(&has_bits);
          server_steam_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToGCGetUserSessionServerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserSessionServerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 server_steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_server_steam_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserSessionServerResponse)
  return target;
}

size_t CMsgGCToGCGetUserSessionServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCGetUserSessionServerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 server_steam_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGetUserSessionServerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCGetUserSessionServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserSessionServerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToGCGetUserSessionServerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCGetUserSessionServerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCGetUserSessionServerResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserSessionServerResponse::MergeFrom(const CMsgGCToGCGetUserSessionServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCGetUserSessionServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_server_steam_id()) {
    _internal_set_server_steam_id(from._internal_server_steam_id());
  }
}

void CMsgGCToGCGetUserSessionServerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCGetUserSessionServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserSessionServerResponse::CopyFrom(const CMsgGCToGCGetUserSessionServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCGetUserSessionServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserSessionServerResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserSessionServerResponse::InternalSwap(CMsgGCToGCGetUserSessionServerResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(server_steam_id_, other->server_steam_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToGCGetUserSessionServerResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[15]);
}

// ===================================================================

class CMsgGCToGCGetUserServerMembers::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToGCGetUserServerMembers>()._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_max_spectators(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCToGCGetUserServerMembers::CMsgGCToGCGetUserServerMembers(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToGCGetUserServerMembers)
}
CMsgGCToGCGetUserServerMembers::CMsgGCToGCGetUserServerMembers(const CMsgGCToGCGetUserServerMembers& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_spectators_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(max_spectators_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserServerMembers)
}

void CMsgGCToGCGetUserServerMembers::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&account_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&max_spectators_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(max_spectators_));
}

CMsgGCToGCGetUserServerMembers::~CMsgGCToGCGetUserServerMembers() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserServerMembers)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToGCGetUserServerMembers::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToGCGetUserServerMembers::ArenaDtor(void* object) {
  CMsgGCToGCGetUserServerMembers* _this = reinterpret_cast< CMsgGCToGCGetUserServerMembers* >(object);
  (void)_this;
}
void CMsgGCToGCGetUserServerMembers::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToGCGetUserServerMembers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToGCGetUserServerMembers::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCGetUserServerMembers)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_spectators_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(max_spectators_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToGCGetUserServerMembers::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 max_spectators = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_max_spectators(&has_bits);
          max_spectators_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToGCGetUserServerMembers::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserServerMembers)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional uint32 max_spectators = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_max_spectators(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserServerMembers)
  return target;
}

size_t CMsgGCToGCGetUserServerMembers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCGetUserServerMembers)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_account_id());
    }

    // optional uint32 max_spectators = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_max_spectators());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGetUserServerMembers::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCGetUserServerMembers)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserServerMembers* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToGCGetUserServerMembers>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCGetUserServerMembers)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCGetUserServerMembers)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserServerMembers::MergeFrom(const CMsgGCToGCGetUserServerMembers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCGetUserServerMembers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      max_spectators_ = from.max_spectators_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGetUserServerMembers::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCGetUserServerMembers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserServerMembers::CopyFrom(const CMsgGCToGCGetUserServerMembers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCGetUserServerMembers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserServerMembers::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserServerMembers::InternalSwap(CMsgGCToGCGetUserServerMembers* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, max_spectators_)
      + sizeof(CMsgGCToGCGetUserServerMembers::max_spectators_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, account_id_)>(
          reinterpret_cast<char*>(&account_id_),
          reinterpret_cast<char*>(&other->account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToGCGetUserServerMembers::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[16]);
}

// ===================================================================

class CMsgGCToGCGetUserServerMembersResponse::_Internal {
 public:
};

CMsgGCToGCGetUserServerMembersResponse::CMsgGCToGCGetUserServerMembersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  member_account_id_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToGCGetUserServerMembersResponse)
}
CMsgGCToGCGetUserServerMembersResponse::CMsgGCToGCGetUserServerMembersResponse(const CMsgGCToGCGetUserServerMembersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      member_account_id_(from.member_account_id_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGetUserServerMembersResponse)
}

void CMsgGCToGCGetUserServerMembersResponse::SharedCtor() {
}

CMsgGCToGCGetUserServerMembersResponse::~CMsgGCToGCGetUserServerMembersResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGetUserServerMembersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToGCGetUserServerMembersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToGCGetUserServerMembersResponse::ArenaDtor(void* object) {
  CMsgGCToGCGetUserServerMembersResponse* _this = reinterpret_cast< CMsgGCToGCGetUserServerMembersResponse* >(object);
  (void)_this;
}
void CMsgGCToGCGetUserServerMembersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToGCGetUserServerMembersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToGCGetUserServerMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCGetUserServerMembersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_account_id_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToGCGetUserServerMembersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 member_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_member_account_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_member_account_id(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToGCGetUserServerMembersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGetUserServerMembersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 member_account_id = 1;
  for (int i = 0, n = this->_internal_member_account_id_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_member_account_id(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGetUserServerMembersResponse)
  return target;
}

size_t CMsgGCToGCGetUserServerMembersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCGetUserServerMembersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 member_account_id = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->member_account_id_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_member_account_id_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGetUserServerMembersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCGetUserServerMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserServerMembersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToGCGetUserServerMembersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCGetUserServerMembersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCGetUserServerMembersResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserServerMembersResponse::MergeFrom(const CMsgGCToGCGetUserServerMembersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCGetUserServerMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_account_id_.MergeFrom(from.member_account_id_);
}

void CMsgGCToGCGetUserServerMembersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCGetUserServerMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserServerMembersResponse::CopyFrom(const CMsgGCToGCGetUserServerMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCGetUserServerMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserServerMembersResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserServerMembersResponse::InternalSwap(CMsgGCToGCGetUserServerMembersResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  member_account_id_.InternalSwap(&other->member_account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToGCGetUserServerMembersResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[17]);
}

// ===================================================================

class CMsgLookupMultipleAccountNames::_Internal {
 public:
};

CMsgLookupMultipleAccountNames::CMsgLookupMultipleAccountNames(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  accountids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgLookupMultipleAccountNames)
}
CMsgLookupMultipleAccountNames::CMsgLookupMultipleAccountNames(const CMsgLookupMultipleAccountNames& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      accountids_(from.accountids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgLookupMultipleAccountNames)
}

void CMsgLookupMultipleAccountNames::SharedCtor() {
}

CMsgLookupMultipleAccountNames::~CMsgLookupMultipleAccountNames() {
  // @@protoc_insertion_point(destructor:CMsgLookupMultipleAccountNames)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgLookupMultipleAccountNames::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgLookupMultipleAccountNames::ArenaDtor(void* object) {
  CMsgLookupMultipleAccountNames* _this = reinterpret_cast< CMsgLookupMultipleAccountNames* >(object);
  (void)_this;
}
void CMsgLookupMultipleAccountNames::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgLookupMultipleAccountNames::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgLookupMultipleAccountNames::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLookupMultipleAccountNames)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgLookupMultipleAccountNames::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 accountids = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_accountids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_accountids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgLookupMultipleAccountNames::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLookupMultipleAccountNames)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 accountids = 1 [packed = true];
  {
    int byte_size = _accountids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_accountids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLookupMultipleAccountNames)
  return target;
}

size_t CMsgLookupMultipleAccountNames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgLookupMultipleAccountNames)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 accountids = 1 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->accountids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _accountids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgLookupMultipleAccountNames::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgLookupMultipleAccountNames)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNames* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgLookupMultipleAccountNames>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgLookupMultipleAccountNames)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgLookupMultipleAccountNames)
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNames::MergeFrom(const CMsgLookupMultipleAccountNames& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgLookupMultipleAccountNames)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accountids_.MergeFrom(from.accountids_);
}

void CMsgLookupMultipleAccountNames::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgLookupMultipleAccountNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNames::CopyFrom(const CMsgLookupMultipleAccountNames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLookupMultipleAccountNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNames::IsInitialized() const {
  return true;
}

void CMsgLookupMultipleAccountNames::InternalSwap(CMsgLookupMultipleAccountNames* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  accountids_.InternalSwap(&other->accountids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgLookupMultipleAccountNames::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[18]);
}

// ===================================================================

class CMsgLookupMultipleAccountNamesResponse_Account::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgLookupMultipleAccountNamesResponse_Account>()._has_bits_);
  static void set_has_accountid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_persona(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgLookupMultipleAccountNamesResponse_Account::CMsgLookupMultipleAccountNamesResponse_Account(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgLookupMultipleAccountNamesResponse.Account)
}
CMsgLookupMultipleAccountNamesResponse_Account::CMsgLookupMultipleAccountNamesResponse_Account(const CMsgLookupMultipleAccountNamesResponse_Account& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  persona_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_persona()) {
    persona_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_persona(), 
      GetArenaForAllocation());
  }
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:CMsgLookupMultipleAccountNamesResponse.Account)
}

void CMsgLookupMultipleAccountNamesResponse_Account::SharedCtor() {
persona_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
accountid_ = 0u;
}

CMsgLookupMultipleAccountNamesResponse_Account::~CMsgLookupMultipleAccountNamesResponse_Account() {
  // @@protoc_insertion_point(destructor:CMsgLookupMultipleAccountNamesResponse.Account)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgLookupMultipleAccountNamesResponse_Account::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  persona_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgLookupMultipleAccountNamesResponse_Account::ArenaDtor(void* object) {
  CMsgLookupMultipleAccountNamesResponse_Account* _this = reinterpret_cast< CMsgLookupMultipleAccountNamesResponse_Account* >(object);
  (void)_this;
}
void CMsgLookupMultipleAccountNamesResponse_Account::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgLookupMultipleAccountNamesResponse_Account::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgLookupMultipleAccountNamesResponse_Account::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLookupMultipleAccountNamesResponse.Account)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    persona_.ClearNonDefaultToEmpty();
  }
  accountid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgLookupMultipleAccountNamesResponse_Account::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_accountid(&has_bits);
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string persona = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_persona();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgLookupMultipleAccountNamesResponse.Account.persona");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgLookupMultipleAccountNamesResponse_Account::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLookupMultipleAccountNamesResponse.Account)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_accountid(), target);
  }

  // optional string persona = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_persona().data(), static_cast<int>(this->_internal_persona().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgLookupMultipleAccountNamesResponse.Account.persona");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_persona(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLookupMultipleAccountNamesResponse.Account)
  return target;
}

size_t CMsgLookupMultipleAccountNamesResponse_Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgLookupMultipleAccountNamesResponse.Account)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string persona = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_persona());
    }

    // optional uint32 accountid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_accountid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgLookupMultipleAccountNamesResponse_Account::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgLookupMultipleAccountNamesResponse.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNamesResponse_Account* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgLookupMultipleAccountNamesResponse_Account>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgLookupMultipleAccountNamesResponse.Account)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgLookupMultipleAccountNamesResponse.Account)
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNamesResponse_Account::MergeFrom(const CMsgLookupMultipleAccountNamesResponse_Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgLookupMultipleAccountNamesResponse.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_persona(from._internal_persona());
    }
    if (cached_has_bits & 0x00000002u) {
      accountid_ = from.accountid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgLookupMultipleAccountNamesResponse_Account::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgLookupMultipleAccountNamesResponse.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNamesResponse_Account::CopyFrom(const CMsgLookupMultipleAccountNamesResponse_Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLookupMultipleAccountNamesResponse.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNamesResponse_Account::IsInitialized() const {
  return true;
}

void CMsgLookupMultipleAccountNamesResponse_Account::InternalSwap(CMsgLookupMultipleAccountNamesResponse_Account* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &persona_, GetArenaForAllocation(),
      &other->persona_, other->GetArenaForAllocation()
  );
  swap(accountid_, other->accountid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgLookupMultipleAccountNamesResponse_Account::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[19]);
}

// ===================================================================

class CMsgLookupMultipleAccountNamesResponse::_Internal {
 public:
};

CMsgLookupMultipleAccountNamesResponse::CMsgLookupMultipleAccountNamesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  accounts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgLookupMultipleAccountNamesResponse)
}
CMsgLookupMultipleAccountNamesResponse::CMsgLookupMultipleAccountNamesResponse(const CMsgLookupMultipleAccountNamesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      accounts_(from.accounts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgLookupMultipleAccountNamesResponse)
}

void CMsgLookupMultipleAccountNamesResponse::SharedCtor() {
}

CMsgLookupMultipleAccountNamesResponse::~CMsgLookupMultipleAccountNamesResponse() {
  // @@protoc_insertion_point(destructor:CMsgLookupMultipleAccountNamesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgLookupMultipleAccountNamesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgLookupMultipleAccountNamesResponse::ArenaDtor(void* object) {
  CMsgLookupMultipleAccountNamesResponse* _this = reinterpret_cast< CMsgLookupMultipleAccountNamesResponse* >(object);
  (void)_this;
}
void CMsgLookupMultipleAccountNamesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgLookupMultipleAccountNamesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgLookupMultipleAccountNamesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLookupMultipleAccountNamesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accounts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgLookupMultipleAccountNamesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_accounts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgLookupMultipleAccountNamesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLookupMultipleAccountNamesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_accounts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_accounts(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLookupMultipleAccountNamesResponse)
  return target;
}

size_t CMsgLookupMultipleAccountNamesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgLookupMultipleAccountNamesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  total_size += 1UL * this->_internal_accounts_size();
  for (const auto& msg : this->accounts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgLookupMultipleAccountNamesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgLookupMultipleAccountNamesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNamesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgLookupMultipleAccountNamesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgLookupMultipleAccountNamesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgLookupMultipleAccountNamesResponse)
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNamesResponse::MergeFrom(const CMsgLookupMultipleAccountNamesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgLookupMultipleAccountNamesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accounts_.MergeFrom(from.accounts_);
}

void CMsgLookupMultipleAccountNamesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgLookupMultipleAccountNamesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNamesResponse::CopyFrom(const CMsgLookupMultipleAccountNamesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLookupMultipleAccountNamesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNamesResponse::IsInitialized() const {
  return true;
}

void CMsgLookupMultipleAccountNamesResponse::InternalSwap(CMsgLookupMultipleAccountNamesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  accounts_.InternalSwap(&other->accounts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgLookupMultipleAccountNamesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[20]);
}

// ===================================================================

class CMsgGCToGCGrantSelfMadeItemToAccount::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToGCGrantSelfMadeItemToAccount>()._has_bits_);
  static void set_has_item_def_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_accountid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCToGCGrantSelfMadeItemToAccount::CMsgGCToGCGrantSelfMadeItemToAccount(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToGCGrantSelfMadeItemToAccount)
}
CMsgGCToGCGrantSelfMadeItemToAccount::CMsgGCToGCGrantSelfMadeItemToAccount(const CMsgGCToGCGrantSelfMadeItemToAccount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&item_def_index_, &from.item_def_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&item_def_index_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCGrantSelfMadeItemToAccount)
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&item_def_index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&item_def_index_)) + sizeof(accountid_));
}

CMsgGCToGCGrantSelfMadeItemToAccount::~CMsgGCToGCGrantSelfMadeItemToAccount() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCGrantSelfMadeItemToAccount)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToGCGrantSelfMadeItemToAccount::ArenaDtor(void* object) {
  CMsgGCToGCGrantSelfMadeItemToAccount* _this = reinterpret_cast< CMsgGCToGCGrantSelfMadeItemToAccount* >(object);
  (void)_this;
}
void CMsgGCToGCGrantSelfMadeItemToAccount::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToGCGrantSelfMadeItemToAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToGCGrantSelfMadeItemToAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_def_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&accountid_) -
        reinterpret_cast<char*>(&item_def_index_)) + sizeof(accountid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToGCGrantSelfMadeItemToAccount::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 item_def_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_item_def_index(&has_bits);
          item_def_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 accountid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_accountid(&has_bits);
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToGCGrantSelfMadeItemToAccount::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_item_def_index(), target);
  }

  // optional uint32 accountid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCGrantSelfMadeItemToAccount)
  return target;
}

size_t CMsgGCToGCGrantSelfMadeItemToAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 item_def_index = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_item_def_index());
    }

    // optional uint32 accountid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_accountid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGrantSelfMadeItemToAccount* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToGCGrantSelfMadeItemToAccount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCGrantSelfMadeItemToAccount)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCGrantSelfMadeItemToAccount)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantSelfMadeItemToAccount::MergeFrom(const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_index_ = from.item_def_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      accountid_ = from.accountid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGrantSelfMadeItemToAccount::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantSelfMadeItemToAccount::CopyFrom(const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCGrantSelfMadeItemToAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantSelfMadeItemToAccount::IsInitialized() const {
  return true;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::InternalSwap(CMsgGCToGCGrantSelfMadeItemToAccount* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, accountid_)
      + sizeof(CMsgGCToGCGrantSelfMadeItemToAccount::accountid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, item_def_index_)>(
          reinterpret_cast<char*>(&item_def_index_),
          reinterpret_cast<char*>(&other->item_def_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToGCGrantSelfMadeItemToAccount::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[21]);
}

// ===================================================================

class CMsgGCToGCThankedByNewUser::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToGCThankedByNewUser>()._has_bits_);
  static void set_has_new_user_accountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_thanked_user_accountid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCToGCThankedByNewUser::CMsgGCToGCThankedByNewUser(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToGCThankedByNewUser)
}
CMsgGCToGCThankedByNewUser::CMsgGCToGCThankedByNewUser(const CMsgGCToGCThankedByNewUser& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&new_user_accountid_, &from.new_user_accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&thanked_user_accountid_) -
    reinterpret_cast<char*>(&new_user_accountid_)) + sizeof(thanked_user_accountid_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCThankedByNewUser)
}

void CMsgGCToGCThankedByNewUser::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&new_user_accountid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&thanked_user_accountid_) -
    reinterpret_cast<char*>(&new_user_accountid_)) + sizeof(thanked_user_accountid_));
}

CMsgGCToGCThankedByNewUser::~CMsgGCToGCThankedByNewUser() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCThankedByNewUser)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToGCThankedByNewUser::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToGCThankedByNewUser::ArenaDtor(void* object) {
  CMsgGCToGCThankedByNewUser* _this = reinterpret_cast< CMsgGCToGCThankedByNewUser* >(object);
  (void)_this;
}
void CMsgGCToGCThankedByNewUser::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToGCThankedByNewUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToGCThankedByNewUser::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCThankedByNewUser)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&new_user_accountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&thanked_user_accountid_) -
        reinterpret_cast<char*>(&new_user_accountid_)) + sizeof(thanked_user_accountid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToGCThankedByNewUser::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 new_user_accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_new_user_accountid(&has_bits);
          new_user_accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 thanked_user_accountid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_thanked_user_accountid(&has_bits);
          thanked_user_accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToGCThankedByNewUser::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCThankedByNewUser)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 new_user_accountid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_new_user_accountid(), target);
  }

  // optional uint32 thanked_user_accountid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_thanked_user_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCThankedByNewUser)
  return target;
}

size_t CMsgGCToGCThankedByNewUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCThankedByNewUser)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 new_user_accountid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_new_user_accountid());
    }

    // optional uint32 thanked_user_accountid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_thanked_user_accountid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCThankedByNewUser::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCThankedByNewUser)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCThankedByNewUser* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToGCThankedByNewUser>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCThankedByNewUser)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCThankedByNewUser)
    MergeFrom(*source);
  }
}

void CMsgGCToGCThankedByNewUser::MergeFrom(const CMsgGCToGCThankedByNewUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCThankedByNewUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      new_user_accountid_ = from.new_user_accountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      thanked_user_accountid_ = from.thanked_user_accountid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCThankedByNewUser::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCThankedByNewUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCThankedByNewUser::CopyFrom(const CMsgGCToGCThankedByNewUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCThankedByNewUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCThankedByNewUser::IsInitialized() const {
  return true;
}

void CMsgGCToGCThankedByNewUser::InternalSwap(CMsgGCToGCThankedByNewUser* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToGCThankedByNewUser, thanked_user_accountid_)
      + sizeof(CMsgGCToGCThankedByNewUser::thanked_user_accountid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToGCThankedByNewUser, new_user_accountid_)>(
          reinterpret_cast<char*>(&new_user_accountid_),
          reinterpret_cast<char*>(&other->new_user_accountid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToGCThankedByNewUser::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[22]);
}

// ===================================================================

class CMsgGCShuffleCrateContents::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCShuffleCrateContents>()._has_bits_);
  static void set_has_crate_item_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_user_code_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCShuffleCrateContents::CMsgGCShuffleCrateContents(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCShuffleCrateContents)
}
CMsgGCShuffleCrateContents::CMsgGCShuffleCrateContents(const CMsgGCShuffleCrateContents& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_code_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_user_code_string()) {
    user_code_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_code_string(), 
      GetArenaForAllocation());
  }
  crate_item_id_ = from.crate_item_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCShuffleCrateContents)
}

void CMsgGCShuffleCrateContents::SharedCtor() {
user_code_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
crate_item_id_ = uint64_t{0u};
}

CMsgGCShuffleCrateContents::~CMsgGCShuffleCrateContents() {
  // @@protoc_insertion_point(destructor:CMsgGCShuffleCrateContents)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCShuffleCrateContents::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  user_code_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCShuffleCrateContents::ArenaDtor(void* object) {
  CMsgGCShuffleCrateContents* _this = reinterpret_cast< CMsgGCShuffleCrateContents* >(object);
  (void)_this;
}
void CMsgGCShuffleCrateContents::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCShuffleCrateContents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCShuffleCrateContents::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCShuffleCrateContents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    user_code_string_.ClearNonDefaultToEmpty();
  }
  crate_item_id_ = uint64_t{0u};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCShuffleCrateContents::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 crate_item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_crate_item_id(&has_bits);
          crate_item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string user_code_string = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_user_code_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgGCShuffleCrateContents.user_code_string");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCShuffleCrateContents::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCShuffleCrateContents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 crate_item_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_crate_item_id(), target);
  }

  // optional string user_code_string = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_user_code_string().data(), static_cast<int>(this->_internal_user_code_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGCShuffleCrateContents.user_code_string");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_code_string(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCShuffleCrateContents)
  return target;
}

size_t CMsgGCShuffleCrateContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCShuffleCrateContents)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string user_code_string = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_user_code_string());
    }

    // optional uint64 crate_item_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_crate_item_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCShuffleCrateContents::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCShuffleCrateContents)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCShuffleCrateContents* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCShuffleCrateContents>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCShuffleCrateContents)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCShuffleCrateContents)
    MergeFrom(*source);
  }
}

void CMsgGCShuffleCrateContents::MergeFrom(const CMsgGCShuffleCrateContents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCShuffleCrateContents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_user_code_string(from._internal_user_code_string());
    }
    if (cached_has_bits & 0x00000002u) {
      crate_item_id_ = from.crate_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCShuffleCrateContents::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCShuffleCrateContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCShuffleCrateContents::CopyFrom(const CMsgGCShuffleCrateContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCShuffleCrateContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCShuffleCrateContents::IsInitialized() const {
  return true;
}

void CMsgGCShuffleCrateContents::InternalSwap(CMsgGCShuffleCrateContents* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_code_string_, GetArenaForAllocation(),
      &other->user_code_string_, other->GetArenaForAllocation()
  );
  swap(crate_item_id_, other->crate_item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCShuffleCrateContents::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[23]);
}

// ===================================================================

class CMsgGCQuestObjective_Progress::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCQuestObjective_Progress>()._has_bits_);
  static void set_has_quest_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_quest_attrib_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_delta(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_owner_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGCQuestObjective_Progress::CMsgGCQuestObjective_Progress(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCQuestObjective_Progress)
}
CMsgGCQuestObjective_Progress::CMsgGCQuestObjective_Progress(const CMsgGCQuestObjective_Progress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&quest_id_, &from.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_steamid_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(owner_steamid_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCQuestObjective_Progress)
}

void CMsgGCQuestObjective_Progress::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&quest_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&owner_steamid_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(owner_steamid_));
}

CMsgGCQuestObjective_Progress::~CMsgGCQuestObjective_Progress() {
  // @@protoc_insertion_point(destructor:CMsgGCQuestObjective_Progress)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCQuestObjective_Progress::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCQuestObjective_Progress::ArenaDtor(void* object) {
  CMsgGCQuestObjective_Progress* _this = reinterpret_cast< CMsgGCQuestObjective_Progress* >(object);
  (void)_this;
}
void CMsgGCQuestObjective_Progress::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCQuestObjective_Progress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCQuestObjective_Progress::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCQuestObjective_Progress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&quest_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_steamid_) -
        reinterpret_cast<char*>(&quest_id_)) + sizeof(owner_steamid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCQuestObjective_Progress::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 quest_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_quest_id(&has_bits);
          quest_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 quest_attrib_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_quest_attrib_index(&has_bits);
          quest_attrib_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 delta = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_delta(&has_bits);
          delta_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 owner_steamid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_owner_steamid(&has_bits);
          owner_steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCQuestObjective_Progress::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCQuestObjective_Progress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 quest_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_quest_id(), target);
  }

  // optional uint32 quest_attrib_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_quest_attrib_index(), target);
  }

  // optional uint32 delta = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_delta(), target);
  }

  // optional fixed64 owner_steamid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(4, this->_internal_owner_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCQuestObjective_Progress)
  return target;
}

size_t CMsgGCQuestObjective_Progress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCQuestObjective_Progress)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint64 quest_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_quest_id());
    }

    // optional uint32 quest_attrib_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_quest_attrib_index());
    }

    // optional uint32 delta = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_delta());
    }

    // optional fixed64 owner_steamid = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCQuestObjective_Progress::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCQuestObjective_Progress)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCQuestObjective_Progress* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCQuestObjective_Progress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCQuestObjective_Progress)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCQuestObjective_Progress)
    MergeFrom(*source);
  }
}

void CMsgGCQuestObjective_Progress::MergeFrom(const CMsgGCQuestObjective_Progress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCQuestObjective_Progress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      quest_id_ = from.quest_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      quest_attrib_index_ = from.quest_attrib_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      delta_ = from.delta_;
    }
    if (cached_has_bits & 0x00000008u) {
      owner_steamid_ = from.owner_steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCQuestObjective_Progress::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCQuestObjective_Progress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCQuestObjective_Progress::CopyFrom(const CMsgGCQuestObjective_Progress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCQuestObjective_Progress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCQuestObjective_Progress::IsInitialized() const {
  return true;
}

void CMsgGCQuestObjective_Progress::InternalSwap(CMsgGCQuestObjective_Progress* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCQuestObjective_Progress, owner_steamid_)
      + sizeof(CMsgGCQuestObjective_Progress::owner_steamid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCQuestObjective_Progress, quest_id_)>(
          reinterpret_cast<char*>(&quest_id_),
          reinterpret_cast<char*>(&other->quest_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCQuestObjective_Progress::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[24]);
}

// ===================================================================

class CMsgGCQuestObjective_PointsChange::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCQuestObjective_PointsChange>()._has_bits_);
  static void set_has_quest_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_owner_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_update_base_points(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_points_0(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_points_1(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_points_2(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgGCQuestObjective_PointsChange::CMsgGCQuestObjective_PointsChange(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCQuestObjective_PointsChange)
}
CMsgGCQuestObjective_PointsChange::CMsgGCQuestObjective_PointsChange(const CMsgGCQuestObjective_PointsChange& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&quest_id_, &from.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&points_2_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(points_2_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCQuestObjective_PointsChange)
}

void CMsgGCQuestObjective_PointsChange::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&quest_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&points_2_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(points_2_));
}

CMsgGCQuestObjective_PointsChange::~CMsgGCQuestObjective_PointsChange() {
  // @@protoc_insertion_point(destructor:CMsgGCQuestObjective_PointsChange)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCQuestObjective_PointsChange::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCQuestObjective_PointsChange::ArenaDtor(void* object) {
  CMsgGCQuestObjective_PointsChange* _this = reinterpret_cast< CMsgGCQuestObjective_PointsChange* >(object);
  (void)_this;
}
void CMsgGCQuestObjective_PointsChange::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCQuestObjective_PointsChange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCQuestObjective_PointsChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCQuestObjective_PointsChange)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&quest_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&points_2_) -
        reinterpret_cast<char*>(&quest_id_)) + sizeof(points_2_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCQuestObjective_PointsChange::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 quest_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_quest_id(&has_bits);
          quest_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 owner_steamid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_owner_steamid(&has_bits);
          owner_steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional bool update_base_points = 5 [default = false];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_update_base_points(&has_bits);
          update_base_points_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 points_0 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_points_0(&has_bits);
          points_0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 points_1 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_points_1(&has_bits);
          points_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 points_2 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_points_2(&has_bits);
          points_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCQuestObjective_PointsChange::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCQuestObjective_PointsChange)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 quest_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_quest_id(), target);
  }

  // optional fixed64 owner_steamid = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(4, this->_internal_owner_steamid(), target);
  }

  // optional bool update_base_points = 5 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_update_base_points(), target);
  }

  // optional uint32 points_0 = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_points_0(), target);
  }

  // optional uint32 points_1 = 7;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_points_1(), target);
  }

  // optional uint32 points_2 = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_points_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCQuestObjective_PointsChange)
  return target;
}

size_t CMsgGCQuestObjective_PointsChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCQuestObjective_PointsChange)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional uint64 quest_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_quest_id());
    }

    // optional fixed64 owner_steamid = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional bool update_base_points = 5 [default = false];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional uint32 points_0 = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_points_0());
    }

    // optional uint32 points_1 = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_points_1());
    }

    // optional uint32 points_2 = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_points_2());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCQuestObjective_PointsChange::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCQuestObjective_PointsChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCQuestObjective_PointsChange* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCQuestObjective_PointsChange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCQuestObjective_PointsChange)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCQuestObjective_PointsChange)
    MergeFrom(*source);
  }
}

void CMsgGCQuestObjective_PointsChange::MergeFrom(const CMsgGCQuestObjective_PointsChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCQuestObjective_PointsChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      quest_id_ = from.quest_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_steamid_ = from.owner_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      update_base_points_ = from.update_base_points_;
    }
    if (cached_has_bits & 0x00000008u) {
      points_0_ = from.points_0_;
    }
    if (cached_has_bits & 0x00000010u) {
      points_1_ = from.points_1_;
    }
    if (cached_has_bits & 0x00000020u) {
      points_2_ = from.points_2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCQuestObjective_PointsChange::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCQuestObjective_PointsChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCQuestObjective_PointsChange::CopyFrom(const CMsgGCQuestObjective_PointsChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCQuestObjective_PointsChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCQuestObjective_PointsChange::IsInitialized() const {
  return true;
}

void CMsgGCQuestObjective_PointsChange::InternalSwap(CMsgGCQuestObjective_PointsChange* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCQuestObjective_PointsChange, points_2_)
      + sizeof(CMsgGCQuestObjective_PointsChange::points_2_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCQuestObjective_PointsChange, quest_id_)>(
          reinterpret_cast<char*>(&quest_id_),
          reinterpret_cast<char*>(&other->quest_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCQuestObjective_PointsChange::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[25]);
}

// ===================================================================

class CMsgGCQuestComplete_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCQuestComplete_Request>()._has_bits_);
  static void set_has_quest_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCQuestComplete_Request::CMsgGCQuestComplete_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCQuestComplete_Request)
}
CMsgGCQuestComplete_Request::CMsgGCQuestComplete_Request(const CMsgGCQuestComplete_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  quest_id_ = from.quest_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCQuestComplete_Request)
}

void CMsgGCQuestComplete_Request::SharedCtor() {
quest_id_ = uint64_t{0u};
}

CMsgGCQuestComplete_Request::~CMsgGCQuestComplete_Request() {
  // @@protoc_insertion_point(destructor:CMsgGCQuestComplete_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCQuestComplete_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCQuestComplete_Request::ArenaDtor(void* object) {
  CMsgGCQuestComplete_Request* _this = reinterpret_cast< CMsgGCQuestComplete_Request* >(object);
  (void)_this;
}
void CMsgGCQuestComplete_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCQuestComplete_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCQuestComplete_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCQuestComplete_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_id_ = uint64_t{0u};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCQuestComplete_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 quest_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_quest_id(&has_bits);
          quest_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCQuestComplete_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCQuestComplete_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 quest_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_quest_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCQuestComplete_Request)
  return target;
}

size_t CMsgGCQuestComplete_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCQuestComplete_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 quest_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_quest_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCQuestComplete_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCQuestComplete_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCQuestComplete_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCQuestComplete_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCQuestComplete_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCQuestComplete_Request)
    MergeFrom(*source);
  }
}

void CMsgGCQuestComplete_Request::MergeFrom(const CMsgGCQuestComplete_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCQuestComplete_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_quest_id()) {
    _internal_set_quest_id(from._internal_quest_id());
  }
}

void CMsgGCQuestComplete_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCQuestComplete_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCQuestComplete_Request::CopyFrom(const CMsgGCQuestComplete_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCQuestComplete_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCQuestComplete_Request::IsInitialized() const {
  return true;
}

void CMsgGCQuestComplete_Request::InternalSwap(CMsgGCQuestComplete_Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(quest_id_, other->quest_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCQuestComplete_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[26]);
}

// ===================================================================

class CMsgGCQuestCompleted::_Internal {
 public:
};

CMsgGCQuestCompleted::CMsgGCQuestCompleted(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCQuestCompleted)
}
CMsgGCQuestCompleted::CMsgGCQuestCompleted(const CMsgGCQuestCompleted& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCQuestCompleted)
}

void CMsgGCQuestCompleted::SharedCtor() {
}

CMsgGCQuestCompleted::~CMsgGCQuestCompleted() {
  // @@protoc_insertion_point(destructor:CMsgGCQuestCompleted)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCQuestCompleted::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCQuestCompleted::ArenaDtor(void* object) {
  CMsgGCQuestCompleted* _this = reinterpret_cast< CMsgGCQuestCompleted* >(object);
  (void)_this;
}
void CMsgGCQuestCompleted::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCQuestCompleted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCQuestCompleted::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCQuestCompleted)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCQuestCompleted::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCQuestCompleted::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCQuestCompleted)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCQuestCompleted)
  return target;
}

size_t CMsgGCQuestCompleted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCQuestCompleted)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCQuestCompleted::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCQuestCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCQuestCompleted* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCQuestCompleted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCQuestCompleted)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCQuestCompleted)
    MergeFrom(*source);
  }
}

void CMsgGCQuestCompleted::MergeFrom(const CMsgGCQuestCompleted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCQuestCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCQuestCompleted::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCQuestCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCQuestCompleted::CopyFrom(const CMsgGCQuestCompleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCQuestCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCQuestCompleted::IsInitialized() const {
  return true;
}

void CMsgGCQuestCompleted::InternalSwap(CMsgGCQuestCompleted* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCQuestCompleted::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[27]);
}

// ===================================================================

class CMsgGCQuestObjective_RequestLoanerItems::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCQuestObjective_RequestLoanerItems>()._has_bits_);
  static void set_has_quest_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCQuestObjective_RequestLoanerItems::CMsgGCQuestObjective_RequestLoanerItems(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCQuestObjective_RequestLoanerItems)
}
CMsgGCQuestObjective_RequestLoanerItems::CMsgGCQuestObjective_RequestLoanerItems(const CMsgGCQuestObjective_RequestLoanerItems& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  quest_id_ = from.quest_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCQuestObjective_RequestLoanerItems)
}

void CMsgGCQuestObjective_RequestLoanerItems::SharedCtor() {
quest_id_ = uint64_t{0u};
}

CMsgGCQuestObjective_RequestLoanerItems::~CMsgGCQuestObjective_RequestLoanerItems() {
  // @@protoc_insertion_point(destructor:CMsgGCQuestObjective_RequestLoanerItems)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCQuestObjective_RequestLoanerItems::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCQuestObjective_RequestLoanerItems::ArenaDtor(void* object) {
  CMsgGCQuestObjective_RequestLoanerItems* _this = reinterpret_cast< CMsgGCQuestObjective_RequestLoanerItems* >(object);
  (void)_this;
}
void CMsgGCQuestObjective_RequestLoanerItems::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCQuestObjective_RequestLoanerItems::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCQuestObjective_RequestLoanerItems::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCQuestObjective_RequestLoanerItems)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_id_ = uint64_t{0u};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCQuestObjective_RequestLoanerItems::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 quest_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_quest_id(&has_bits);
          quest_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCQuestObjective_RequestLoanerItems::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCQuestObjective_RequestLoanerItems)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 quest_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_quest_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCQuestObjective_RequestLoanerItems)
  return target;
}

size_t CMsgGCQuestObjective_RequestLoanerItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCQuestObjective_RequestLoanerItems)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 quest_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_quest_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCQuestObjective_RequestLoanerItems::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCQuestObjective_RequestLoanerItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCQuestObjective_RequestLoanerItems* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCQuestObjective_RequestLoanerItems>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCQuestObjective_RequestLoanerItems)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCQuestObjective_RequestLoanerItems)
    MergeFrom(*source);
  }
}

void CMsgGCQuestObjective_RequestLoanerItems::MergeFrom(const CMsgGCQuestObjective_RequestLoanerItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCQuestObjective_RequestLoanerItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_quest_id()) {
    _internal_set_quest_id(from._internal_quest_id());
  }
}

void CMsgGCQuestObjective_RequestLoanerItems::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCQuestObjective_RequestLoanerItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCQuestObjective_RequestLoanerItems::CopyFrom(const CMsgGCQuestObjective_RequestLoanerItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCQuestObjective_RequestLoanerItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCQuestObjective_RequestLoanerItems::IsInitialized() const {
  return true;
}

void CMsgGCQuestObjective_RequestLoanerItems::InternalSwap(CMsgGCQuestObjective_RequestLoanerItems* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(quest_id_, other->quest_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCQuestObjective_RequestLoanerItems::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[28]);
}

// ===================================================================

class CMsgGCQuestObjective_RequestLoanerResponse::_Internal {
 public:
};

CMsgGCQuestObjective_RequestLoanerResponse::CMsgGCQuestObjective_RequestLoanerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCQuestObjective_RequestLoanerResponse)
}
CMsgGCQuestObjective_RequestLoanerResponse::CMsgGCQuestObjective_RequestLoanerResponse(const CMsgGCQuestObjective_RequestLoanerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCQuestObjective_RequestLoanerResponse)
}

void CMsgGCQuestObjective_RequestLoanerResponse::SharedCtor() {
}

CMsgGCQuestObjective_RequestLoanerResponse::~CMsgGCQuestObjective_RequestLoanerResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCQuestObjective_RequestLoanerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCQuestObjective_RequestLoanerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCQuestObjective_RequestLoanerResponse::ArenaDtor(void* object) {
  CMsgGCQuestObjective_RequestLoanerResponse* _this = reinterpret_cast< CMsgGCQuestObjective_RequestLoanerResponse* >(object);
  (void)_this;
}
void CMsgGCQuestObjective_RequestLoanerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCQuestObjective_RequestLoanerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCQuestObjective_RequestLoanerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCQuestObjective_RequestLoanerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCQuestObjective_RequestLoanerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCQuestObjective_RequestLoanerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCQuestObjective_RequestLoanerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCQuestObjective_RequestLoanerResponse)
  return target;
}

size_t CMsgGCQuestObjective_RequestLoanerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCQuestObjective_RequestLoanerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCQuestObjective_RequestLoanerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCQuestObjective_RequestLoanerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCQuestObjective_RequestLoanerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCQuestObjective_RequestLoanerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCQuestObjective_RequestLoanerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCQuestObjective_RequestLoanerResponse)
    MergeFrom(*source);
  }
}

void CMsgGCQuestObjective_RequestLoanerResponse::MergeFrom(const CMsgGCQuestObjective_RequestLoanerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCQuestObjective_RequestLoanerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCQuestObjective_RequestLoanerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCQuestObjective_RequestLoanerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCQuestObjective_RequestLoanerResponse::CopyFrom(const CMsgGCQuestObjective_RequestLoanerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCQuestObjective_RequestLoanerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCQuestObjective_RequestLoanerResponse::IsInitialized() const {
  return true;
}

void CMsgGCQuestObjective_RequestLoanerResponse::InternalSwap(CMsgGCQuestObjective_RequestLoanerResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCQuestObjective_RequestLoanerResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[29]);
}

// ===================================================================

class CMsgCraftCollectionUpgrade::_Internal {
 public:
};

CMsgCraftCollectionUpgrade::CMsgCraftCollectionUpgrade(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  item_id_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgCraftCollectionUpgrade)
}
CMsgCraftCollectionUpgrade::CMsgCraftCollectionUpgrade(const CMsgCraftCollectionUpgrade& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      item_id_(from.item_id_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgCraftCollectionUpgrade)
}

void CMsgCraftCollectionUpgrade::SharedCtor() {
}

CMsgCraftCollectionUpgrade::~CMsgCraftCollectionUpgrade() {
  // @@protoc_insertion_point(destructor:CMsgCraftCollectionUpgrade)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgCraftCollectionUpgrade::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgCraftCollectionUpgrade::ArenaDtor(void* object) {
  CMsgCraftCollectionUpgrade* _this = reinterpret_cast< CMsgCraftCollectionUpgrade* >(object);
  (void)_this;
}
void CMsgCraftCollectionUpgrade::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgCraftCollectionUpgrade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgCraftCollectionUpgrade::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCraftCollectionUpgrade)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgCraftCollectionUpgrade::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_item_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_item_id(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgCraftCollectionUpgrade::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCraftCollectionUpgrade)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_id = 1;
  for (int i = 0, n = this->_internal_item_id_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_item_id(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCraftCollectionUpgrade)
  return target;
}

size_t CMsgCraftCollectionUpgrade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCraftCollectionUpgrade)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_id = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->item_id_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_item_id_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCraftCollectionUpgrade::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCraftCollectionUpgrade)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCraftCollectionUpgrade* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgCraftCollectionUpgrade>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCraftCollectionUpgrade)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCraftCollectionUpgrade)
    MergeFrom(*source);
  }
}

void CMsgCraftCollectionUpgrade::MergeFrom(const CMsgCraftCollectionUpgrade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCraftCollectionUpgrade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_id_.MergeFrom(from.item_id_);
}

void CMsgCraftCollectionUpgrade::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCraftCollectionUpgrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftCollectionUpgrade::CopyFrom(const CMsgCraftCollectionUpgrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCraftCollectionUpgrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftCollectionUpgrade::IsInitialized() const {
  return true;
}

void CMsgCraftCollectionUpgrade::InternalSwap(CMsgCraftCollectionUpgrade* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  item_id_.InternalSwap(&other->item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgCraftCollectionUpgrade::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[30]);
}

// ===================================================================

class CMsgCraftHalloweenOffering::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgCraftHalloweenOffering>()._has_bits_);
  static void set_has_tool_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgCraftHalloweenOffering::CMsgCraftHalloweenOffering(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  item_id_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgCraftHalloweenOffering)
}
CMsgCraftHalloweenOffering::CMsgCraftHalloweenOffering(const CMsgCraftHalloweenOffering& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      item_id_(from.item_id_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tool_id_ = from.tool_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgCraftHalloweenOffering)
}

void CMsgCraftHalloweenOffering::SharedCtor() {
tool_id_ = uint64_t{0u};
}

CMsgCraftHalloweenOffering::~CMsgCraftHalloweenOffering() {
  // @@protoc_insertion_point(destructor:CMsgCraftHalloweenOffering)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgCraftHalloweenOffering::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgCraftHalloweenOffering::ArenaDtor(void* object) {
  CMsgCraftHalloweenOffering* _this = reinterpret_cast< CMsgCraftHalloweenOffering* >(object);
  (void)_this;
}
void CMsgCraftHalloweenOffering::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgCraftHalloweenOffering::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgCraftHalloweenOffering::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCraftHalloweenOffering)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_.Clear();
  tool_id_ = uint64_t{0u};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgCraftHalloweenOffering::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 tool_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_tool_id(&has_bits);
          tool_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_item_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_item_id(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgCraftHalloweenOffering::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCraftHalloweenOffering)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 tool_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_tool_id(), target);
  }

  // repeated uint64 item_id = 2;
  for (int i = 0, n = this->_internal_item_id_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_item_id(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCraftHalloweenOffering)
  return target;
}

size_t CMsgCraftHalloweenOffering::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCraftHalloweenOffering)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_id = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->item_id_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_item_id_size());
    total_size += data_size;
  }

  // optional uint64 tool_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_tool_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCraftHalloweenOffering::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCraftHalloweenOffering)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCraftHalloweenOffering* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgCraftHalloweenOffering>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCraftHalloweenOffering)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCraftHalloweenOffering)
    MergeFrom(*source);
  }
}

void CMsgCraftHalloweenOffering::MergeFrom(const CMsgCraftHalloweenOffering& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCraftHalloweenOffering)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_id_.MergeFrom(from.item_id_);
  if (from._internal_has_tool_id()) {
    _internal_set_tool_id(from._internal_tool_id());
  }
}

void CMsgCraftHalloweenOffering::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCraftHalloweenOffering)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftHalloweenOffering::CopyFrom(const CMsgCraftHalloweenOffering& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCraftHalloweenOffering)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftHalloweenOffering::IsInitialized() const {
  return true;
}

void CMsgCraftHalloweenOffering::InternalSwap(CMsgCraftHalloweenOffering* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_id_.InternalSwap(&other->item_id_);
  swap(tool_id_, other->tool_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgCraftHalloweenOffering::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[31]);
}

// ===================================================================

class CMsgCraftCommonStatClock::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgCraftCommonStatClock>()._has_bits_);
  static void set_has_tool_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgCraftCommonStatClock::CMsgCraftCommonStatClock(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  item_id_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgCraftCommonStatClock)
}
CMsgCraftCommonStatClock::CMsgCraftCommonStatClock(const CMsgCraftCommonStatClock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      item_id_(from.item_id_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tool_id_ = from.tool_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgCraftCommonStatClock)
}

void CMsgCraftCommonStatClock::SharedCtor() {
tool_id_ = uint64_t{0u};
}

CMsgCraftCommonStatClock::~CMsgCraftCommonStatClock() {
  // @@protoc_insertion_point(destructor:CMsgCraftCommonStatClock)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgCraftCommonStatClock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgCraftCommonStatClock::ArenaDtor(void* object) {
  CMsgCraftCommonStatClock* _this = reinterpret_cast< CMsgCraftCommonStatClock* >(object);
  (void)_this;
}
void CMsgCraftCommonStatClock::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgCraftCommonStatClock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgCraftCommonStatClock::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCraftCommonStatClock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_.Clear();
  tool_id_ = uint64_t{0u};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgCraftCommonStatClock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 tool_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_tool_id(&has_bits);
          tool_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_item_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_item_id(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgCraftCommonStatClock::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCraftCommonStatClock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 tool_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_tool_id(), target);
  }

  // repeated uint64 item_id = 2;
  for (int i = 0, n = this->_internal_item_id_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_item_id(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCraftCommonStatClock)
  return target;
}

size_t CMsgCraftCommonStatClock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCraftCommonStatClock)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_id = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->item_id_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_item_id_size());
    total_size += data_size;
  }

  // optional uint64 tool_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_tool_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCraftCommonStatClock::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCraftCommonStatClock)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCraftCommonStatClock* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgCraftCommonStatClock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCraftCommonStatClock)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCraftCommonStatClock)
    MergeFrom(*source);
  }
}

void CMsgCraftCommonStatClock::MergeFrom(const CMsgCraftCommonStatClock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCraftCommonStatClock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_id_.MergeFrom(from.item_id_);
  if (from._internal_has_tool_id()) {
    _internal_set_tool_id(from._internal_tool_id());
  }
}

void CMsgCraftCommonStatClock::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCraftCommonStatClock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftCommonStatClock::CopyFrom(const CMsgCraftCommonStatClock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCraftCommonStatClock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftCommonStatClock::IsInitialized() const {
  return true;
}

void CMsgCraftCommonStatClock::InternalSwap(CMsgCraftCommonStatClock* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_id_.InternalSwap(&other->item_id_);
  swap(tool_id_, other->tool_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgCraftCommonStatClock::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[32]);
}

// ===================================================================

class CMsgGCQuestDiscard_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCQuestDiscard_Request>()._has_bits_);
  static void set_has_quest_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCQuestDiscard_Request::CMsgGCQuestDiscard_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCQuestDiscard_Request)
}
CMsgGCQuestDiscard_Request::CMsgGCQuestDiscard_Request(const CMsgGCQuestDiscard_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  quest_id_ = from.quest_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCQuestDiscard_Request)
}

void CMsgGCQuestDiscard_Request::SharedCtor() {
quest_id_ = uint64_t{0u};
}

CMsgGCQuestDiscard_Request::~CMsgGCQuestDiscard_Request() {
  // @@protoc_insertion_point(destructor:CMsgGCQuestDiscard_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCQuestDiscard_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCQuestDiscard_Request::ArenaDtor(void* object) {
  CMsgGCQuestDiscard_Request* _this = reinterpret_cast< CMsgGCQuestDiscard_Request* >(object);
  (void)_this;
}
void CMsgGCQuestDiscard_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCQuestDiscard_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCQuestDiscard_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCQuestDiscard_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_id_ = uint64_t{0u};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCQuestDiscard_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 quest_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_quest_id(&has_bits);
          quest_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCQuestDiscard_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCQuestDiscard_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 quest_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_quest_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCQuestDiscard_Request)
  return target;
}

size_t CMsgGCQuestDiscard_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCQuestDiscard_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 quest_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_quest_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCQuestDiscard_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCQuestDiscard_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCQuestDiscard_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCQuestDiscard_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCQuestDiscard_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCQuestDiscard_Request)
    MergeFrom(*source);
  }
}

void CMsgGCQuestDiscard_Request::MergeFrom(const CMsgGCQuestDiscard_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCQuestDiscard_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_quest_id()) {
    _internal_set_quest_id(from._internal_quest_id());
  }
}

void CMsgGCQuestDiscard_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCQuestDiscard_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCQuestDiscard_Request::CopyFrom(const CMsgGCQuestDiscard_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCQuestDiscard_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCQuestDiscard_Request::IsInitialized() const {
  return true;
}

void CMsgGCQuestDiscard_Request::InternalSwap(CMsgGCQuestDiscard_Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(quest_id_, other->quest_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCQuestDiscard_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_econ_5fgcmessages_2eproto_getter, &descriptor_table_econ_5fgcmessages_2eproto_once,
      file_level_metadata_econ_5fgcmessages_2eproto[33]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CMsgApplyAutograph* Arena::CreateMaybeMessage< ::CMsgApplyAutograph >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgApplyAutograph >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* Arena::CreateMaybeMessage< ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgEconPlayerStrangeCountAdjustment* Arena::CreateMaybeMessage< ::CMsgEconPlayerStrangeCountAdjustment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgEconPlayerStrangeCountAdjustment >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgRequestItemPurgatory_FinalizePurchase* Arena::CreateMaybeMessage< ::CMsgRequestItemPurgatory_FinalizePurchase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgRequestItemPurgatory_FinalizePurchase >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgRequestItemPurgatory_FinalizePurchaseResponse* Arena::CreateMaybeMessage< ::CMsgRequestItemPurgatory_FinalizePurchaseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgRequestItemPurgatory_FinalizePurchaseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgRequestItemPurgatory_RefundPurchase* Arena::CreateMaybeMessage< ::CMsgRequestItemPurgatory_RefundPurchase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgRequestItemPurgatory_RefundPurchase >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgRequestItemPurgatory_RefundPurchaseResponse* Arena::CreateMaybeMessage< ::CMsgRequestItemPurgatory_RefundPurchaseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgRequestItemPurgatory_RefundPurchaseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgCraftingResponse* Arena::CreateMaybeMessage< ::CMsgCraftingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgCraftingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCRequestStoreSalesData* Arena::CreateMaybeMessage< ::CMsgGCRequestStoreSalesData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCRequestStoreSalesData >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCRequestStoreSalesDataResponse_Price* Arena::CreateMaybeMessage< ::CMsgGCRequestStoreSalesDataResponse_Price >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCRequestStoreSalesDataResponse_Price >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCRequestStoreSalesDataResponse* Arena::CreateMaybeMessage< ::CMsgGCRequestStoreSalesDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCRequestStoreSalesDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCRequestStoreSalesDataUpToDateResponse* Arena::CreateMaybeMessage< ::CMsgGCRequestStoreSalesDataUpToDateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCRequestStoreSalesDataUpToDateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToGCPingRequest* Arena::CreateMaybeMessage< ::CMsgGCToGCPingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToGCPingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToGCPingResponse* Arena::CreateMaybeMessage< ::CMsgGCToGCPingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToGCPingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToGCGetUserSessionServer* Arena::CreateMaybeMessage< ::CMsgGCToGCGetUserSessionServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToGCGetUserSessionServer >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToGCGetUserSessionServerResponse* Arena::CreateMaybeMessage< ::CMsgGCToGCGetUserSessionServerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToGCGetUserSessionServerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToGCGetUserServerMembers* Arena::CreateMaybeMessage< ::CMsgGCToGCGetUserServerMembers >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToGCGetUserServerMembers >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToGCGetUserServerMembersResponse* Arena::CreateMaybeMessage< ::CMsgGCToGCGetUserServerMembersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToGCGetUserServerMembersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgLookupMultipleAccountNames* Arena::CreateMaybeMessage< ::CMsgLookupMultipleAccountNames >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgLookupMultipleAccountNames >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgLookupMultipleAccountNamesResponse_Account* Arena::CreateMaybeMessage< ::CMsgLookupMultipleAccountNamesResponse_Account >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgLookupMultipleAccountNamesResponse_Account >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgLookupMultipleAccountNamesResponse* Arena::CreateMaybeMessage< ::CMsgLookupMultipleAccountNamesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgLookupMultipleAccountNamesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToGCGrantSelfMadeItemToAccount* Arena::CreateMaybeMessage< ::CMsgGCToGCGrantSelfMadeItemToAccount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToGCGrantSelfMadeItemToAccount >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToGCThankedByNewUser* Arena::CreateMaybeMessage< ::CMsgGCToGCThankedByNewUser >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToGCThankedByNewUser >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCShuffleCrateContents* Arena::CreateMaybeMessage< ::CMsgGCShuffleCrateContents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCShuffleCrateContents >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCQuestObjective_Progress* Arena::CreateMaybeMessage< ::CMsgGCQuestObjective_Progress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCQuestObjective_Progress >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCQuestObjective_PointsChange* Arena::CreateMaybeMessage< ::CMsgGCQuestObjective_PointsChange >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCQuestObjective_PointsChange >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCQuestComplete_Request* Arena::CreateMaybeMessage< ::CMsgGCQuestComplete_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCQuestComplete_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCQuestCompleted* Arena::CreateMaybeMessage< ::CMsgGCQuestCompleted >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCQuestCompleted >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCQuestObjective_RequestLoanerItems* Arena::CreateMaybeMessage< ::CMsgGCQuestObjective_RequestLoanerItems >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCQuestObjective_RequestLoanerItems >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCQuestObjective_RequestLoanerResponse* Arena::CreateMaybeMessage< ::CMsgGCQuestObjective_RequestLoanerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCQuestObjective_RequestLoanerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgCraftCollectionUpgrade* Arena::CreateMaybeMessage< ::CMsgCraftCollectionUpgrade >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgCraftCollectionUpgrade >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgCraftHalloweenOffering* Arena::CreateMaybeMessage< ::CMsgCraftHalloweenOffering >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgCraftHalloweenOffering >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgCraftCommonStatClock* Arena::CreateMaybeMessage< ::CMsgCraftCommonStatClock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgCraftCommonStatClock >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCQuestDiscard_Request* Arena::CreateMaybeMessage< ::CMsgGCQuestDiscard_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCQuestDiscard_Request >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

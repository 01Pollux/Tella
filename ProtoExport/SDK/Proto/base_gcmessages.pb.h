// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base_gcmessages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_base_5fgcmessages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_base_5fgcmessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_base_5fgcmessages_2eproto M0PROTO
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct M0PROTO TableStruct_base_5fgcmessages_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[87]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern M0PROTO const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_base_5fgcmessages_2eproto;
class CGCStorePurchaseInit_LineItem;
struct CGCStorePurchaseInit_LineItemDefaultTypeInternal;
M0PROTO extern CGCStorePurchaseInit_LineItemDefaultTypeInternal _CGCStorePurchaseInit_LineItem_default_instance_;
class CMsgAdjustItemEquippedState;
struct CMsgAdjustItemEquippedStateDefaultTypeInternal;
M0PROTO extern CMsgAdjustItemEquippedStateDefaultTypeInternal _CMsgAdjustItemEquippedState_default_instance_;
class CMsgApplyStrangeCountTransfer;
struct CMsgApplyStrangeCountTransferDefaultTypeInternal;
M0PROTO extern CMsgApplyStrangeCountTransferDefaultTypeInternal _CMsgApplyStrangeCountTransfer_default_instance_;
class CMsgApplyStrangePart;
struct CMsgApplyStrangePartDefaultTypeInternal;
M0PROTO extern CMsgApplyStrangePartDefaultTypeInternal _CMsgApplyStrangePart_default_instance_;
class CMsgApplyStrangeRestriction;
struct CMsgApplyStrangeRestrictionDefaultTypeInternal;
M0PROTO extern CMsgApplyStrangeRestrictionDefaultTypeInternal _CMsgApplyStrangeRestriction_default_instance_;
class CMsgApplyToolToBaseItem;
struct CMsgApplyToolToBaseItemDefaultTypeInternal;
M0PROTO extern CMsgApplyToolToBaseItemDefaultTypeInternal _CMsgApplyToolToBaseItem_default_instance_;
class CMsgApplyToolToItem;
struct CMsgApplyToolToItemDefaultTypeInternal;
M0PROTO extern CMsgApplyToolToItemDefaultTypeInternal _CMsgApplyToolToItem_default_instance_;
class CMsgApplyUpgradeCard;
struct CMsgApplyUpgradeCardDefaultTypeInternal;
M0PROTO extern CMsgApplyUpgradeCardDefaultTypeInternal _CMsgApplyUpgradeCard_default_instance_;
class CMsgClientGoodbye;
struct CMsgClientGoodbyeDefaultTypeInternal;
M0PROTO extern CMsgClientGoodbyeDefaultTypeInternal _CMsgClientGoodbye_default_instance_;
class CMsgClientHello;
struct CMsgClientHelloDefaultTypeInternal;
M0PROTO extern CMsgClientHelloDefaultTypeInternal _CMsgClientHello_default_instance_;
class CMsgClientWelcome;
struct CMsgClientWelcomeDefaultTypeInternal;
M0PROTO extern CMsgClientWelcomeDefaultTypeInternal _CMsgClientWelcome_default_instance_;
class CMsgConVarValue;
struct CMsgConVarValueDefaultTypeInternal;
M0PROTO extern CMsgConVarValueDefaultTypeInternal _CMsgConVarValue_default_instance_;
class CMsgConsumableExhausted;
struct CMsgConsumableExhaustedDefaultTypeInternal;
M0PROTO extern CMsgConsumableExhaustedDefaultTypeInternal _CMsgConsumableExhausted_default_instance_;
class CMsgDeliverGiftResponseGiver;
struct CMsgDeliverGiftResponseGiverDefaultTypeInternal;
M0PROTO extern CMsgDeliverGiftResponseGiverDefaultTypeInternal _CMsgDeliverGiftResponseGiver_default_instance_;
class CMsgDevDebugRollLootRequest;
struct CMsgDevDebugRollLootRequestDefaultTypeInternal;
M0PROTO extern CMsgDevDebugRollLootRequestDefaultTypeInternal _CMsgDevDebugRollLootRequest_default_instance_;
class CMsgDevNewItemRequest;
struct CMsgDevNewItemRequestDefaultTypeInternal;
M0PROTO extern CMsgDevNewItemRequestDefaultTypeInternal _CMsgDevNewItemRequest_default_instance_;
class CMsgFulfillDynamicRecipeComponent;
struct CMsgFulfillDynamicRecipeComponentDefaultTypeInternal;
M0PROTO extern CMsgFulfillDynamicRecipeComponentDefaultTypeInternal _CMsgFulfillDynamicRecipeComponent_default_instance_;
class CMsgGCBannedWordListRequest;
struct CMsgGCBannedWordListRequestDefaultTypeInternal;
M0PROTO extern CMsgGCBannedWordListRequestDefaultTypeInternal _CMsgGCBannedWordListRequest_default_instance_;
class CMsgGCClientDisplayNotification;
struct CMsgGCClientDisplayNotificationDefaultTypeInternal;
M0PROTO extern CMsgGCClientDisplayNotificationDefaultTypeInternal _CMsgGCClientDisplayNotification_default_instance_;
class CMsgGCClientMarketData;
struct CMsgGCClientMarketDataDefaultTypeInternal;
M0PROTO extern CMsgGCClientMarketDataDefaultTypeInternal _CMsgGCClientMarketData_default_instance_;
class CMsgGCClientMarketDataEntry;
struct CMsgGCClientMarketDataEntryDefaultTypeInternal;
M0PROTO extern CMsgGCClientMarketDataEntryDefaultTypeInternal _CMsgGCClientMarketDataEntry_default_instance_;
class CMsgGCClientMarketDataRequest;
struct CMsgGCClientMarketDataRequestDefaultTypeInternal;
M0PROTO extern CMsgGCClientMarketDataRequestDefaultTypeInternal _CMsgGCClientMarketDataRequest_default_instance_;
class CMsgGCCollectItem;
struct CMsgGCCollectItemDefaultTypeInternal;
M0PROTO extern CMsgGCCollectItemDefaultTypeInternal _CMsgGCCollectItem_default_instance_;
class CMsgGCError;
struct CMsgGCErrorDefaultTypeInternal;
M0PROTO extern CMsgGCErrorDefaultTypeInternal _CMsgGCError_default_instance_;
class CMsgGCGiftedItems;
struct CMsgGCGiftedItemsDefaultTypeInternal;
M0PROTO extern CMsgGCGiftedItemsDefaultTypeInternal _CMsgGCGiftedItems_default_instance_;
class CMsgGCIncrementKillCountResponse;
struct CMsgGCIncrementKillCountResponseDefaultTypeInternal;
M0PROTO extern CMsgGCIncrementKillCountResponseDefaultTypeInternal _CMsgGCIncrementKillCountResponse_default_instance_;
class CMsgGCItemPreviewItemBoughtNotification;
struct CMsgGCItemPreviewItemBoughtNotificationDefaultTypeInternal;
M0PROTO extern CMsgGCItemPreviewItemBoughtNotificationDefaultTypeInternal _CMsgGCItemPreviewItemBoughtNotification_default_instance_;
class CMsgGCNameItemNotification;
struct CMsgGCNameItemNotificationDefaultTypeInternal;
M0PROTO extern CMsgGCNameItemNotificationDefaultTypeInternal _CMsgGCNameItemNotification_default_instance_;
class CMsgGCRemoveCustomizationAttributeSimple;
struct CMsgGCRemoveCustomizationAttributeSimpleDefaultTypeInternal;
M0PROTO extern CMsgGCRemoveCustomizationAttributeSimpleDefaultTypeInternal _CMsgGCRemoveCustomizationAttributeSimple_default_instance_;
class CMsgGCRemoveStrangePart;
struct CMsgGCRemoveStrangePartDefaultTypeInternal;
M0PROTO extern CMsgGCRemoveStrangePartDefaultTypeInternal _CMsgGCRemoveStrangePart_default_instance_;
class CMsgGCRemoveUpgradeCard;
struct CMsgGCRemoveUpgradeCardDefaultTypeInternal;
M0PROTO extern CMsgGCRemoveUpgradeCardDefaultTypeInternal _CMsgGCRemoveUpgradeCard_default_instance_;
class CMsgGCReportAbuse;
struct CMsgGCReportAbuseDefaultTypeInternal;
M0PROTO extern CMsgGCReportAbuseDefaultTypeInternal _CMsgGCReportAbuse_default_instance_;
class CMsgGCReportAbuseResponse;
struct CMsgGCReportAbuseResponseDefaultTypeInternal;
M0PROTO extern CMsgGCReportAbuseResponseDefaultTypeInternal _CMsgGCReportAbuseResponse_default_instance_;
class CMsgGCResetStrangeScores;
struct CMsgGCResetStrangeScoresDefaultTypeInternal;
M0PROTO extern CMsgGCResetStrangeScoresDefaultTypeInternal _CMsgGCResetStrangeScores_default_instance_;
class CMsgGCShowItemsPickedUp;
struct CMsgGCShowItemsPickedUpDefaultTypeInternal;
M0PROTO extern CMsgGCShowItemsPickedUpDefaultTypeInternal _CMsgGCShowItemsPickedUp_default_instance_;
class CMsgGCStorePurchaseCancel;
struct CMsgGCStorePurchaseCancelDefaultTypeInternal;
M0PROTO extern CMsgGCStorePurchaseCancelDefaultTypeInternal _CMsgGCStorePurchaseCancel_default_instance_;
class CMsgGCStorePurchaseCancelResponse;
struct CMsgGCStorePurchaseCancelResponseDefaultTypeInternal;
M0PROTO extern CMsgGCStorePurchaseCancelResponseDefaultTypeInternal _CMsgGCStorePurchaseCancelResponse_default_instance_;
class CMsgGCStorePurchaseFinalize;
struct CMsgGCStorePurchaseFinalizeDefaultTypeInternal;
M0PROTO extern CMsgGCStorePurchaseFinalizeDefaultTypeInternal _CMsgGCStorePurchaseFinalize_default_instance_;
class CMsgGCStorePurchaseFinalizeResponse;
struct CMsgGCStorePurchaseFinalizeResponseDefaultTypeInternal;
M0PROTO extern CMsgGCStorePurchaseFinalizeResponseDefaultTypeInternal _CMsgGCStorePurchaseFinalizeResponse_default_instance_;
class CMsgGCStorePurchaseInit;
struct CMsgGCStorePurchaseInitDefaultTypeInternal;
M0PROTO extern CMsgGCStorePurchaseInitDefaultTypeInternal _CMsgGCStorePurchaseInit_default_instance_;
class CMsgGCStorePurchaseInitResponse;
struct CMsgGCStorePurchaseInitResponseDefaultTypeInternal;
M0PROTO extern CMsgGCStorePurchaseInitResponseDefaultTypeInternal _CMsgGCStorePurchaseInitResponse_default_instance_;
class CMsgIncrementKillCountAttribute;
struct CMsgIncrementKillCountAttributeDefaultTypeInternal;
M0PROTO extern CMsgIncrementKillCountAttributeDefaultTypeInternal _CMsgIncrementKillCountAttribute_default_instance_;
class CMsgIncrementKillCountAttribute_Multiple;
struct CMsgIncrementKillCountAttribute_MultipleDefaultTypeInternal;
M0PROTO extern CMsgIncrementKillCountAttribute_MultipleDefaultTypeInternal _CMsgIncrementKillCountAttribute_Multiple_default_instance_;
class CMsgItemAcknowledged;
struct CMsgItemAcknowledgedDefaultTypeInternal;
M0PROTO extern CMsgItemAcknowledgedDefaultTypeInternal _CMsgItemAcknowledged_default_instance_;
class CMsgLANServerAvailable;
struct CMsgLANServerAvailableDefaultTypeInternal;
M0PROTO extern CMsgLANServerAvailableDefaultTypeInternal _CMsgLANServerAvailable_default_instance_;
class CMsgRecipeComponent;
struct CMsgRecipeComponentDefaultTypeInternal;
M0PROTO extern CMsgRecipeComponentDefaultTypeInternal _CMsgRecipeComponent_default_instance_;
class CMsgReplayUploadedToYouTube;
struct CMsgReplayUploadedToYouTubeDefaultTypeInternal;
M0PROTO extern CMsgReplayUploadedToYouTubeDefaultTypeInternal _CMsgReplayUploadedToYouTube_default_instance_;
class CMsgReplicateConVars;
struct CMsgReplicateConVarsDefaultTypeInternal;
M0PROTO extern CMsgReplicateConVarsDefaultTypeInternal _CMsgReplicateConVars_default_instance_;
class CMsgRequestInventoryRefresh;
struct CMsgRequestInventoryRefreshDefaultTypeInternal;
M0PROTO extern CMsgRequestInventoryRefreshDefaultTypeInternal _CMsgRequestInventoryRefresh_default_instance_;
class CMsgSelectPresetForClass;
struct CMsgSelectPresetForClassDefaultTypeInternal;
M0PROTO extern CMsgSelectPresetForClassDefaultTypeInternal _CMsgSelectPresetForClass_default_instance_;
class CMsgServerAvailable;
struct CMsgServerAvailableDefaultTypeInternal;
M0PROTO extern CMsgServerAvailableDefaultTypeInternal _CMsgServerAvailable_default_instance_;
class CMsgServerGoodbye;
struct CMsgServerGoodbyeDefaultTypeInternal;
M0PROTO extern CMsgServerGoodbyeDefaultTypeInternal _CMsgServerGoodbye_default_instance_;
class CMsgServerHello;
struct CMsgServerHelloDefaultTypeInternal;
M0PROTO extern CMsgServerHelloDefaultTypeInternal _CMsgServerHello_default_instance_;
class CMsgServerWelcome;
struct CMsgServerWelcomeDefaultTypeInternal;
M0PROTO extern CMsgServerWelcomeDefaultTypeInternal _CMsgServerWelcome_default_instance_;
class CMsgSetHatEffectUseHeadOrigin;
struct CMsgSetHatEffectUseHeadOriginDefaultTypeInternal;
M0PROTO extern CMsgSetHatEffectUseHeadOriginDefaultTypeInternal _CMsgSetHatEffectUseHeadOrigin_default_instance_;
class CMsgSetItemEffectVerticalOffset;
struct CMsgSetItemEffectVerticalOffsetDefaultTypeInternal;
M0PROTO extern CMsgSetItemEffectVerticalOffsetDefaultTypeInternal _CMsgSetItemEffectVerticalOffset_default_instance_;
class CMsgSetItemPositions;
struct CMsgSetItemPositionsDefaultTypeInternal;
M0PROTO extern CMsgSetItemPositionsDefaultTypeInternal _CMsgSetItemPositions_default_instance_;
class CMsgSetItemPositions_ItemPosition;
struct CMsgSetItemPositions_ItemPositionDefaultTypeInternal;
M0PROTO extern CMsgSetItemPositions_ItemPositionDefaultTypeInternal _CMsgSetItemPositions_ItemPosition_default_instance_;
class CMsgSetPresetItemPosition;
struct CMsgSetPresetItemPositionDefaultTypeInternal;
M0PROTO extern CMsgSetPresetItemPositionDefaultTypeInternal _CMsgSetPresetItemPosition_default_instance_;
class CMsgSortItems;
struct CMsgSortItemsDefaultTypeInternal;
M0PROTO extern CMsgSortItemsDefaultTypeInternal _CMsgSortItems_default_instance_;
class CMsgStoreGetUserData;
struct CMsgStoreGetUserDataDefaultTypeInternal;
M0PROTO extern CMsgStoreGetUserDataDefaultTypeInternal _CMsgStoreGetUserData_default_instance_;
class CMsgStoreGetUserDataResponse;
struct CMsgStoreGetUserDataResponseDefaultTypeInternal;
M0PROTO extern CMsgStoreGetUserDataResponseDefaultTypeInternal _CMsgStoreGetUserDataResponse_default_instance_;
class CMsgSystemBroadcast;
struct CMsgSystemBroadcastDefaultTypeInternal;
M0PROTO extern CMsgSystemBroadcastDefaultTypeInternal _CMsgSystemBroadcast_default_instance_;
class CMsgTrackUniquePlayerPairEvent;
struct CMsgTrackUniquePlayerPairEventDefaultTypeInternal;
M0PROTO extern CMsgTrackUniquePlayerPairEventDefaultTypeInternal _CMsgTrackUniquePlayerPairEvent_default_instance_;
class CMsgUpdateItemSchema;
struct CMsgUpdateItemSchemaDefaultTypeInternal;
M0PROTO extern CMsgUpdateItemSchemaDefaultTypeInternal _CMsgUpdateItemSchema_default_instance_;
class CMsgUpdatePeriodicEvent;
struct CMsgUpdatePeriodicEventDefaultTypeInternal;
M0PROTO extern CMsgUpdatePeriodicEventDefaultTypeInternal _CMsgUpdatePeriodicEvent_default_instance_;
class CMsgUseItem;
struct CMsgUseItemDefaultTypeInternal;
M0PROTO extern CMsgUseItemDefaultTypeInternal _CMsgUseItem_default_instance_;
class CSOClassPresetClientData;
struct CSOClassPresetClientDataDefaultTypeInternal;
M0PROTO extern CSOClassPresetClientDataDefaultTypeInternal _CSOClassPresetClientData_default_instance_;
class CSOEconClaimCode;
struct CSOEconClaimCodeDefaultTypeInternal;
M0PROTO extern CSOEconClaimCodeDefaultTypeInternal _CSOEconClaimCode_default_instance_;
class CSOEconGameAccountClient;
struct CSOEconGameAccountClientDefaultTypeInternal;
M0PROTO extern CSOEconGameAccountClientDefaultTypeInternal _CSOEconGameAccountClient_default_instance_;
class CSOEconGameAccountForGameServers;
struct CSOEconGameAccountForGameServersDefaultTypeInternal;
M0PROTO extern CSOEconGameAccountForGameServersDefaultTypeInternal _CSOEconGameAccountForGameServers_default_instance_;
class CSOEconItem;
struct CSOEconItemDefaultTypeInternal;
M0PROTO extern CSOEconItemDefaultTypeInternal _CSOEconItem_default_instance_;
class CSOEconItemAttribute;
struct CSOEconItemAttributeDefaultTypeInternal;
M0PROTO extern CSOEconItemAttributeDefaultTypeInternal _CSOEconItemAttribute_default_instance_;
class CSOEconItemEquipped;
struct CSOEconItemEquippedDefaultTypeInternal;
M0PROTO extern CSOEconItemEquippedDefaultTypeInternal _CSOEconItemEquipped_default_instance_;
class CSOEconItemPresetInstance;
struct CSOEconItemPresetInstanceDefaultTypeInternal;
M0PROTO extern CSOEconItemPresetInstanceDefaultTypeInternal _CSOEconItemPresetInstance_default_instance_;
class CSOItemCriteria;
struct CSOItemCriteriaDefaultTypeInternal;
M0PROTO extern CSOItemCriteriaDefaultTypeInternal _CSOItemCriteria_default_instance_;
class CSOItemCriteriaCondition;
struct CSOItemCriteriaConditionDefaultTypeInternal;
M0PROTO extern CSOItemCriteriaConditionDefaultTypeInternal _CSOItemCriteriaCondition_default_instance_;
class CSOItemRecipe;
struct CSOItemRecipeDefaultTypeInternal;
M0PROTO extern CSOItemRecipeDefaultTypeInternal _CSOItemRecipe_default_instance_;
class CWorkshop_GetContributors_Request;
struct CWorkshop_GetContributors_RequestDefaultTypeInternal;
M0PROTO extern CWorkshop_GetContributors_RequestDefaultTypeInternal _CWorkshop_GetContributors_Request_default_instance_;
class CWorkshop_GetContributors_Response;
struct CWorkshop_GetContributors_ResponseDefaultTypeInternal;
M0PROTO extern CWorkshop_GetContributors_ResponseDefaultTypeInternal _CWorkshop_GetContributors_Response_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request;
struct CWorkshop_PopulateItemDescriptions_RequestDefaultTypeInternal;
M0PROTO extern CWorkshop_PopulateItemDescriptions_RequestDefaultTypeInternal _CWorkshop_PopulateItemDescriptions_Request_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock;
struct CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockDefaultTypeInternal;
M0PROTO extern CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockDefaultTypeInternal _CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription;
struct CWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionDefaultTypeInternal;
M0PROTO extern CWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionDefaultTypeInternal _CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_;
class CWorkshop_SetItemPaymentRules_Request;
struct CWorkshop_SetItemPaymentRules_RequestDefaultTypeInternal;
M0PROTO extern CWorkshop_SetItemPaymentRules_RequestDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Request_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule;
struct CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleDefaultTypeInternal;
M0PROTO extern CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule;
struct CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleDefaultTypeInternal;
M0PROTO extern CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_Response;
struct CWorkshop_SetItemPaymentRules_ResponseDefaultTypeInternal;
M0PROTO extern CWorkshop_SetItemPaymentRules_ResponseDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Response_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> M0PROTO ::CGCStorePurchaseInit_LineItem* Arena::CreateMaybeMessage<::CGCStorePurchaseInit_LineItem>(Arena*);
template<> M0PROTO ::CMsgAdjustItemEquippedState* Arena::CreateMaybeMessage<::CMsgAdjustItemEquippedState>(Arena*);
template<> M0PROTO ::CMsgApplyStrangeCountTransfer* Arena::CreateMaybeMessage<::CMsgApplyStrangeCountTransfer>(Arena*);
template<> M0PROTO ::CMsgApplyStrangePart* Arena::CreateMaybeMessage<::CMsgApplyStrangePart>(Arena*);
template<> M0PROTO ::CMsgApplyStrangeRestriction* Arena::CreateMaybeMessage<::CMsgApplyStrangeRestriction>(Arena*);
template<> M0PROTO ::CMsgApplyToolToBaseItem* Arena::CreateMaybeMessage<::CMsgApplyToolToBaseItem>(Arena*);
template<> M0PROTO ::CMsgApplyToolToItem* Arena::CreateMaybeMessage<::CMsgApplyToolToItem>(Arena*);
template<> M0PROTO ::CMsgApplyUpgradeCard* Arena::CreateMaybeMessage<::CMsgApplyUpgradeCard>(Arena*);
template<> M0PROTO ::CMsgClientGoodbye* Arena::CreateMaybeMessage<::CMsgClientGoodbye>(Arena*);
template<> M0PROTO ::CMsgClientHello* Arena::CreateMaybeMessage<::CMsgClientHello>(Arena*);
template<> M0PROTO ::CMsgClientWelcome* Arena::CreateMaybeMessage<::CMsgClientWelcome>(Arena*);
template<> M0PROTO ::CMsgConVarValue* Arena::CreateMaybeMessage<::CMsgConVarValue>(Arena*);
template<> M0PROTO ::CMsgConsumableExhausted* Arena::CreateMaybeMessage<::CMsgConsumableExhausted>(Arena*);
template<> M0PROTO ::CMsgDeliverGiftResponseGiver* Arena::CreateMaybeMessage<::CMsgDeliverGiftResponseGiver>(Arena*);
template<> M0PROTO ::CMsgDevDebugRollLootRequest* Arena::CreateMaybeMessage<::CMsgDevDebugRollLootRequest>(Arena*);
template<> M0PROTO ::CMsgDevNewItemRequest* Arena::CreateMaybeMessage<::CMsgDevNewItemRequest>(Arena*);
template<> M0PROTO ::CMsgFulfillDynamicRecipeComponent* Arena::CreateMaybeMessage<::CMsgFulfillDynamicRecipeComponent>(Arena*);
template<> M0PROTO ::CMsgGCBannedWordListRequest* Arena::CreateMaybeMessage<::CMsgGCBannedWordListRequest>(Arena*);
template<> M0PROTO ::CMsgGCClientDisplayNotification* Arena::CreateMaybeMessage<::CMsgGCClientDisplayNotification>(Arena*);
template<> M0PROTO ::CMsgGCClientMarketData* Arena::CreateMaybeMessage<::CMsgGCClientMarketData>(Arena*);
template<> M0PROTO ::CMsgGCClientMarketDataEntry* Arena::CreateMaybeMessage<::CMsgGCClientMarketDataEntry>(Arena*);
template<> M0PROTO ::CMsgGCClientMarketDataRequest* Arena::CreateMaybeMessage<::CMsgGCClientMarketDataRequest>(Arena*);
template<> M0PROTO ::CMsgGCCollectItem* Arena::CreateMaybeMessage<::CMsgGCCollectItem>(Arena*);
template<> M0PROTO ::CMsgGCError* Arena::CreateMaybeMessage<::CMsgGCError>(Arena*);
template<> M0PROTO ::CMsgGCGiftedItems* Arena::CreateMaybeMessage<::CMsgGCGiftedItems>(Arena*);
template<> M0PROTO ::CMsgGCIncrementKillCountResponse* Arena::CreateMaybeMessage<::CMsgGCIncrementKillCountResponse>(Arena*);
template<> M0PROTO ::CMsgGCItemPreviewItemBoughtNotification* Arena::CreateMaybeMessage<::CMsgGCItemPreviewItemBoughtNotification>(Arena*);
template<> M0PROTO ::CMsgGCNameItemNotification* Arena::CreateMaybeMessage<::CMsgGCNameItemNotification>(Arena*);
template<> M0PROTO ::CMsgGCRemoveCustomizationAttributeSimple* Arena::CreateMaybeMessage<::CMsgGCRemoveCustomizationAttributeSimple>(Arena*);
template<> M0PROTO ::CMsgGCRemoveStrangePart* Arena::CreateMaybeMessage<::CMsgGCRemoveStrangePart>(Arena*);
template<> M0PROTO ::CMsgGCRemoveUpgradeCard* Arena::CreateMaybeMessage<::CMsgGCRemoveUpgradeCard>(Arena*);
template<> M0PROTO ::CMsgGCReportAbuse* Arena::CreateMaybeMessage<::CMsgGCReportAbuse>(Arena*);
template<> M0PROTO ::CMsgGCReportAbuseResponse* Arena::CreateMaybeMessage<::CMsgGCReportAbuseResponse>(Arena*);
template<> M0PROTO ::CMsgGCResetStrangeScores* Arena::CreateMaybeMessage<::CMsgGCResetStrangeScores>(Arena*);
template<> M0PROTO ::CMsgGCShowItemsPickedUp* Arena::CreateMaybeMessage<::CMsgGCShowItemsPickedUp>(Arena*);
template<> M0PROTO ::CMsgGCStorePurchaseCancel* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseCancel>(Arena*);
template<> M0PROTO ::CMsgGCStorePurchaseCancelResponse* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseCancelResponse>(Arena*);
template<> M0PROTO ::CMsgGCStorePurchaseFinalize* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseFinalize>(Arena*);
template<> M0PROTO ::CMsgGCStorePurchaseFinalizeResponse* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseFinalizeResponse>(Arena*);
template<> M0PROTO ::CMsgGCStorePurchaseInit* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseInit>(Arena*);
template<> M0PROTO ::CMsgGCStorePurchaseInitResponse* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseInitResponse>(Arena*);
template<> M0PROTO ::CMsgIncrementKillCountAttribute* Arena::CreateMaybeMessage<::CMsgIncrementKillCountAttribute>(Arena*);
template<> M0PROTO ::CMsgIncrementKillCountAttribute_Multiple* Arena::CreateMaybeMessage<::CMsgIncrementKillCountAttribute_Multiple>(Arena*);
template<> M0PROTO ::CMsgItemAcknowledged* Arena::CreateMaybeMessage<::CMsgItemAcknowledged>(Arena*);
template<> M0PROTO ::CMsgLANServerAvailable* Arena::CreateMaybeMessage<::CMsgLANServerAvailable>(Arena*);
template<> M0PROTO ::CMsgRecipeComponent* Arena::CreateMaybeMessage<::CMsgRecipeComponent>(Arena*);
template<> M0PROTO ::CMsgReplayUploadedToYouTube* Arena::CreateMaybeMessage<::CMsgReplayUploadedToYouTube>(Arena*);
template<> M0PROTO ::CMsgReplicateConVars* Arena::CreateMaybeMessage<::CMsgReplicateConVars>(Arena*);
template<> M0PROTO ::CMsgRequestInventoryRefresh* Arena::CreateMaybeMessage<::CMsgRequestInventoryRefresh>(Arena*);
template<> M0PROTO ::CMsgSelectPresetForClass* Arena::CreateMaybeMessage<::CMsgSelectPresetForClass>(Arena*);
template<> M0PROTO ::CMsgServerAvailable* Arena::CreateMaybeMessage<::CMsgServerAvailable>(Arena*);
template<> M0PROTO ::CMsgServerGoodbye* Arena::CreateMaybeMessage<::CMsgServerGoodbye>(Arena*);
template<> M0PROTO ::CMsgServerHello* Arena::CreateMaybeMessage<::CMsgServerHello>(Arena*);
template<> M0PROTO ::CMsgServerWelcome* Arena::CreateMaybeMessage<::CMsgServerWelcome>(Arena*);
template<> M0PROTO ::CMsgSetHatEffectUseHeadOrigin* Arena::CreateMaybeMessage<::CMsgSetHatEffectUseHeadOrigin>(Arena*);
template<> M0PROTO ::CMsgSetItemEffectVerticalOffset* Arena::CreateMaybeMessage<::CMsgSetItemEffectVerticalOffset>(Arena*);
template<> M0PROTO ::CMsgSetItemPositions* Arena::CreateMaybeMessage<::CMsgSetItemPositions>(Arena*);
template<> M0PROTO ::CMsgSetItemPositions_ItemPosition* Arena::CreateMaybeMessage<::CMsgSetItemPositions_ItemPosition>(Arena*);
template<> M0PROTO ::CMsgSetPresetItemPosition* Arena::CreateMaybeMessage<::CMsgSetPresetItemPosition>(Arena*);
template<> M0PROTO ::CMsgSortItems* Arena::CreateMaybeMessage<::CMsgSortItems>(Arena*);
template<> M0PROTO ::CMsgStoreGetUserData* Arena::CreateMaybeMessage<::CMsgStoreGetUserData>(Arena*);
template<> M0PROTO ::CMsgStoreGetUserDataResponse* Arena::CreateMaybeMessage<::CMsgStoreGetUserDataResponse>(Arena*);
template<> M0PROTO ::CMsgSystemBroadcast* Arena::CreateMaybeMessage<::CMsgSystemBroadcast>(Arena*);
template<> M0PROTO ::CMsgTrackUniquePlayerPairEvent* Arena::CreateMaybeMessage<::CMsgTrackUniquePlayerPairEvent>(Arena*);
template<> M0PROTO ::CMsgUpdateItemSchema* Arena::CreateMaybeMessage<::CMsgUpdateItemSchema>(Arena*);
template<> M0PROTO ::CMsgUpdatePeriodicEvent* Arena::CreateMaybeMessage<::CMsgUpdatePeriodicEvent>(Arena*);
template<> M0PROTO ::CMsgUseItem* Arena::CreateMaybeMessage<::CMsgUseItem>(Arena*);
template<> M0PROTO ::CSOClassPresetClientData* Arena::CreateMaybeMessage<::CSOClassPresetClientData>(Arena*);
template<> M0PROTO ::CSOEconClaimCode* Arena::CreateMaybeMessage<::CSOEconClaimCode>(Arena*);
template<> M0PROTO ::CSOEconGameAccountClient* Arena::CreateMaybeMessage<::CSOEconGameAccountClient>(Arena*);
template<> M0PROTO ::CSOEconGameAccountForGameServers* Arena::CreateMaybeMessage<::CSOEconGameAccountForGameServers>(Arena*);
template<> M0PROTO ::CSOEconItem* Arena::CreateMaybeMessage<::CSOEconItem>(Arena*);
template<> M0PROTO ::CSOEconItemAttribute* Arena::CreateMaybeMessage<::CSOEconItemAttribute>(Arena*);
template<> M0PROTO ::CSOEconItemEquipped* Arena::CreateMaybeMessage<::CSOEconItemEquipped>(Arena*);
template<> M0PROTO ::CSOEconItemPresetInstance* Arena::CreateMaybeMessage<::CSOEconItemPresetInstance>(Arena*);
template<> M0PROTO ::CSOItemCriteria* Arena::CreateMaybeMessage<::CSOItemCriteria>(Arena*);
template<> M0PROTO ::CSOItemCriteriaCondition* Arena::CreateMaybeMessage<::CSOItemCriteriaCondition>(Arena*);
template<> M0PROTO ::CSOItemRecipe* Arena::CreateMaybeMessage<::CSOItemRecipe>(Arena*);
template<> M0PROTO ::CWorkshop_GetContributors_Request* Arena::CreateMaybeMessage<::CWorkshop_GetContributors_Request>(Arena*);
template<> M0PROTO ::CWorkshop_GetContributors_Response* Arena::CreateMaybeMessage<::CWorkshop_GetContributors_Response>(Arena*);
template<> M0PROTO ::CWorkshop_PopulateItemDescriptions_Request* Arena::CreateMaybeMessage<::CWorkshop_PopulateItemDescriptions_Request>(Arena*);
template<> M0PROTO ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* Arena::CreateMaybeMessage<::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock>(Arena*);
template<> M0PROTO ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* Arena::CreateMaybeMessage<::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription>(Arena*);
template<> M0PROTO ::CWorkshop_SetItemPaymentRules_Request* Arena::CreateMaybeMessage<::CWorkshop_SetItemPaymentRules_Request>(Arena*);
template<> M0PROTO ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* Arena::CreateMaybeMessage<::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule>(Arena*);
template<> M0PROTO ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* Arena::CreateMaybeMessage<::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule>(Arena*);
template<> M0PROTO ::CWorkshop_SetItemPaymentRules_Response* Arena::CreateMaybeMessage<::CWorkshop_SetItemPaymentRules_Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum EGCBaseMsg : int {
  k_EMsgGCSystemMessage = 4001,
  k_EMsgGCReplicateConVars = 4002,
  k_EMsgGCConVarUpdated = 4003,
  k_EMsgGCServerAvailable = 4506,
  k_EMsgGCClientConnectToServer = 4507,
  k_EMsgGCGameServerInfo = 4508,
  k_EMsgGCError = 4509,
  k_EMsgGCReplay_UploadedToYouTube = 4510,
  k_EMsgGCLANServerAvailable = 4511
};
M0PROTO bool EGCBaseMsg_IsValid(int value);
constexpr EGCBaseMsg EGCBaseMsg_MIN = k_EMsgGCSystemMessage;
constexpr EGCBaseMsg EGCBaseMsg_MAX = k_EMsgGCLANServerAvailable;
constexpr int EGCBaseMsg_ARRAYSIZE = EGCBaseMsg_MAX + 1;

M0PROTO const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCBaseMsg_descriptor();
template<typename T>
inline const std::string& EGCBaseMsg_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGCBaseMsg>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGCBaseMsg_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGCBaseMsg_descriptor(), enum_t_value);
}
inline bool EGCBaseMsg_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGCBaseMsg* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGCBaseMsg>(
    EGCBaseMsg_descriptor(), name, value);
}
enum EGCBaseProtoObjectTypes : int {
  k_EProtoObjectPartyInvite = 1001,
  k_EProtoObjectLobbyInvite = 1002
};
M0PROTO bool EGCBaseProtoObjectTypes_IsValid(int value);
constexpr EGCBaseProtoObjectTypes EGCBaseProtoObjectTypes_MIN = k_EProtoObjectPartyInvite;
constexpr EGCBaseProtoObjectTypes EGCBaseProtoObjectTypes_MAX = k_EProtoObjectLobbyInvite;
constexpr int EGCBaseProtoObjectTypes_ARRAYSIZE = EGCBaseProtoObjectTypes_MAX + 1;

M0PROTO const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCBaseProtoObjectTypes_descriptor();
template<typename T>
inline const std::string& EGCBaseProtoObjectTypes_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGCBaseProtoObjectTypes>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGCBaseProtoObjectTypes_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGCBaseProtoObjectTypes_descriptor(), enum_t_value);
}
inline bool EGCBaseProtoObjectTypes_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGCBaseProtoObjectTypes* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGCBaseProtoObjectTypes>(
    EGCBaseProtoObjectTypes_descriptor(), name, value);
}
enum GCGoodbyeReason : int {
  GCGoodbyeReason_GC_GOING_DOWN = 1,
  GCGoodbyeReason_NO_SESSION = 2
};
M0PROTO bool GCGoodbyeReason_IsValid(int value);
constexpr GCGoodbyeReason GCGoodbyeReason_MIN = GCGoodbyeReason_GC_GOING_DOWN;
constexpr GCGoodbyeReason GCGoodbyeReason_MAX = GCGoodbyeReason_NO_SESSION;
constexpr int GCGoodbyeReason_ARRAYSIZE = GCGoodbyeReason_MAX + 1;

M0PROTO const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GCGoodbyeReason_descriptor();
template<typename T>
inline const std::string& GCGoodbyeReason_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GCGoodbyeReason>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GCGoodbyeReason_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GCGoodbyeReason_descriptor(), enum_t_value);
}
inline bool GCGoodbyeReason_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, GCGoodbyeReason* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GCGoodbyeReason>(
    GCGoodbyeReason_descriptor(), name, value);
}
// ===================================================================

class M0PROTO CGCStorePurchaseInit_LineItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CGCStorePurchaseInit_LineItem) */ {
 public:
  inline CGCStorePurchaseInit_LineItem() : CGCStorePurchaseInit_LineItem(nullptr) {}
  ~CGCStorePurchaseInit_LineItem() override;
  explicit constexpr CGCStorePurchaseInit_LineItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CGCStorePurchaseInit_LineItem(const CGCStorePurchaseInit_LineItem& from);
  CGCStorePurchaseInit_LineItem(CGCStorePurchaseInit_LineItem&& from) noexcept
    : CGCStorePurchaseInit_LineItem() {
    *this = ::std::move(from);
  }

  inline CGCStorePurchaseInit_LineItem& operator=(const CGCStorePurchaseInit_LineItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCStorePurchaseInit_LineItem& operator=(CGCStorePurchaseInit_LineItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CGCStorePurchaseInit_LineItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCStorePurchaseInit_LineItem* internal_default_instance() {
    return reinterpret_cast<const CGCStorePurchaseInit_LineItem*>(
               &_CGCStorePurchaseInit_LineItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CGCStorePurchaseInit_LineItem& a, CGCStorePurchaseInit_LineItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CGCStorePurchaseInit_LineItem* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCStorePurchaseInit_LineItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CGCStorePurchaseInit_LineItem* New() const final {
    return new CGCStorePurchaseInit_LineItem();
  }

  CGCStorePurchaseInit_LineItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CGCStorePurchaseInit_LineItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CGCStorePurchaseInit_LineItem& from);
  void MergeFrom(const CGCStorePurchaseInit_LineItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCStorePurchaseInit_LineItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CGCStorePurchaseInit_LineItem";
  }
  protected:
  explicit CGCStorePurchaseInit_LineItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDefIdFieldNumber = 1,
    kQuantityFieldNumber = 2,
    kCostInLocalCurrencyFieldNumber = 3,
    kPurchaseTypeFieldNumber = 4,
  };
  // optional uint32 item_def_id = 1;
  bool has_item_def_id() const;
  private:
  bool _internal_has_item_def_id() const;
  public:
  void clear_item_def_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def_id() const;
  void set_item_def_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_def_id() const;
  void _internal_set_item_def_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 quantity = 2;
  bool has_quantity() const;
  private:
  bool _internal_has_quantity() const;
  public:
  void clear_quantity();
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity() const;
  void set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quantity() const;
  void _internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cost_in_local_currency = 3;
  bool has_cost_in_local_currency() const;
  private:
  bool _internal_has_cost_in_local_currency() const;
  public:
  void clear_cost_in_local_currency();
  ::PROTOBUF_NAMESPACE_ID::uint32 cost_in_local_currency() const;
  void set_cost_in_local_currency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cost_in_local_currency() const;
  void _internal_set_cost_in_local_currency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 purchase_type = 4;
  bool has_purchase_type() const;
  private:
  bool _internal_has_purchase_type() const;
  public:
  void clear_purchase_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 purchase_type() const;
  void set_purchase_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_purchase_type() const;
  void _internal_set_purchase_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CGCStorePurchaseInit_LineItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cost_in_local_currency_;
  ::PROTOBUF_NAMESPACE_ID::uint32 purchase_type_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCStorePurchaseInit final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseInit) */ {
 public:
  inline CMsgGCStorePurchaseInit() : CMsgGCStorePurchaseInit(nullptr) {}
  ~CMsgGCStorePurchaseInit() override;
  explicit constexpr CMsgGCStorePurchaseInit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseInit(const CMsgGCStorePurchaseInit& from);
  CMsgGCStorePurchaseInit(CMsgGCStorePurchaseInit&& from) noexcept
    : CMsgGCStorePurchaseInit() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseInit& operator=(const CMsgGCStorePurchaseInit& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseInit& operator=(CMsgGCStorePurchaseInit&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseInit& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseInit* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseInit*>(
               &_CMsgGCStorePurchaseInit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgGCStorePurchaseInit& a, CMsgGCStorePurchaseInit& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseInit* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseInit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCStorePurchaseInit* New() const final {
    return new CMsgGCStorePurchaseInit();
  }

  CMsgGCStorePurchaseInit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseInit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCStorePurchaseInit& from);
  void MergeFrom(const CMsgGCStorePurchaseInit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseInit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseInit";
  }
  protected:
  explicit CMsgGCStorePurchaseInit(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLineItemsFieldNumber = 4,
    kCountryFieldNumber = 1,
    kLanguageFieldNumber = 2,
    kCurrencyFieldNumber = 3,
  };
  // repeated .CGCStorePurchaseInit_LineItem line_items = 4;
  int line_items_size() const;
  private:
  int _internal_line_items_size() const;
  public:
  void clear_line_items();
  ::CGCStorePurchaseInit_LineItem* mutable_line_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCStorePurchaseInit_LineItem >*
      mutable_line_items();
  private:
  const ::CGCStorePurchaseInit_LineItem& _internal_line_items(int index) const;
  ::CGCStorePurchaseInit_LineItem* _internal_add_line_items();
  public:
  const ::CGCStorePurchaseInit_LineItem& line_items(int index) const;
  ::CGCStorePurchaseInit_LineItem* add_line_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCStorePurchaseInit_LineItem >&
      line_items() const;

  // optional string country = 1;
  bool has_country() const;
  private:
  bool _internal_has_country() const;
  public:
  void clear_country();
  const std::string& country() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_country(ArgT0&& arg0, ArgT... args);
  std::string* mutable_country();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_country();
  void set_allocated_country(std::string* country);
  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(const std::string& value);
  std::string* _internal_mutable_country();
  public:

  // optional int32 language = 2;
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  ::PROTOBUF_NAMESPACE_ID::int32 language() const;
  void set_language(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_language() const;
  void _internal_set_language(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 currency = 3;
  bool has_currency() const;
  private:
  bool _internal_has_currency() const;
  public:
  void clear_currency();
  ::PROTOBUF_NAMESPACE_ID::int32 currency() const;
  void set_currency(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_currency() const;
  void _internal_set_currency(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseInit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCStorePurchaseInit_LineItem > line_items_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr country_;
  ::PROTOBUF_NAMESPACE_ID::int32 language_;
  ::PROTOBUF_NAMESPACE_ID::int32 currency_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCStorePurchaseInitResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseInitResponse) */ {
 public:
  inline CMsgGCStorePurchaseInitResponse() : CMsgGCStorePurchaseInitResponse(nullptr) {}
  ~CMsgGCStorePurchaseInitResponse() override;
  explicit constexpr CMsgGCStorePurchaseInitResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseInitResponse(const CMsgGCStorePurchaseInitResponse& from);
  CMsgGCStorePurchaseInitResponse(CMsgGCStorePurchaseInitResponse&& from) noexcept
    : CMsgGCStorePurchaseInitResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseInitResponse& operator=(const CMsgGCStorePurchaseInitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseInitResponse& operator=(CMsgGCStorePurchaseInitResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseInitResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseInitResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseInitResponse*>(
               &_CMsgGCStorePurchaseInitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgGCStorePurchaseInitResponse& a, CMsgGCStorePurchaseInitResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseInitResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseInitResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCStorePurchaseInitResponse* New() const final {
    return new CMsgGCStorePurchaseInitResponse();
  }

  CMsgGCStorePurchaseInitResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseInitResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCStorePurchaseInitResponse& from);
  void MergeFrom(const CMsgGCStorePurchaseInitResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseInitResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseInitResponse";
  }
  protected:
  explicit CMsgGCStorePurchaseInitResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTxnIdFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional uint64 txn_id = 2;
  bool has_txn_id() const;
  private:
  bool _internal_has_txn_id() const;
  public:
  void clear_txn_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 txn_id() const;
  void set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_txn_id() const;
  void _internal_set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::int32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseInitResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 txn_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 result_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgSystemBroadcast final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSystemBroadcast) */ {
 public:
  inline CMsgSystemBroadcast() : CMsgSystemBroadcast(nullptr) {}
  ~CMsgSystemBroadcast() override;
  explicit constexpr CMsgSystemBroadcast(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSystemBroadcast(const CMsgSystemBroadcast& from);
  CMsgSystemBroadcast(CMsgSystemBroadcast&& from) noexcept
    : CMsgSystemBroadcast() {
    *this = ::std::move(from);
  }

  inline CMsgSystemBroadcast& operator=(const CMsgSystemBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSystemBroadcast& operator=(CMsgSystemBroadcast&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSystemBroadcast& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSystemBroadcast* internal_default_instance() {
    return reinterpret_cast<const CMsgSystemBroadcast*>(
               &_CMsgSystemBroadcast_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgSystemBroadcast& a, CMsgSystemBroadcast& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSystemBroadcast* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSystemBroadcast* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSystemBroadcast* New() const final {
    return new CMsgSystemBroadcast();
  }

  CMsgSystemBroadcast* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSystemBroadcast>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSystemBroadcast& from);
  void MergeFrom(const CMsgSystemBroadcast& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSystemBroadcast* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSystemBroadcast";
  }
  protected:
  explicit CMsgSystemBroadcast(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // optional string message = 1;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // @@protoc_insertion_point(class_scope:CMsgSystemBroadcast)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgClientHello final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientHello) */ {
 public:
  inline CMsgClientHello() : CMsgClientHello(nullptr) {}
  ~CMsgClientHello() override;
  explicit constexpr CMsgClientHello(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientHello(const CMsgClientHello& from);
  CMsgClientHello(CMsgClientHello&& from) noexcept
    : CMsgClientHello() {
    *this = ::std::move(from);
  }

  inline CMsgClientHello& operator=(const CMsgClientHello& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientHello& operator=(CMsgClientHello&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientHello& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientHello* internal_default_instance() {
    return reinterpret_cast<const CMsgClientHello*>(
               &_CMsgClientHello_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgClientHello& a, CMsgClientHello& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientHello* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientHello* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientHello* New() const final {
    return new CMsgClientHello();
  }

  CMsgClientHello* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientHello>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientHello& from);
  void MergeFrom(const CMsgClientHello& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientHello* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientHello";
  }
  protected:
  explicit CMsgClientHello(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
  };
  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientHello)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgServerHello final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgServerHello) */ {
 public:
  inline CMsgServerHello() : CMsgServerHello(nullptr) {}
  ~CMsgServerHello() override;
  explicit constexpr CMsgServerHello(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgServerHello(const CMsgServerHello& from);
  CMsgServerHello(CMsgServerHello&& from) noexcept
    : CMsgServerHello() {
    *this = ::std::move(from);
  }

  inline CMsgServerHello& operator=(const CMsgServerHello& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgServerHello& operator=(CMsgServerHello&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgServerHello& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgServerHello* internal_default_instance() {
    return reinterpret_cast<const CMsgServerHello*>(
               &_CMsgServerHello_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgServerHello& a, CMsgServerHello& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgServerHello* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgServerHello* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerHello* New() const final {
    return new CMsgServerHello();
  }

  CMsgServerHello* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerHello>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgServerHello& from);
  void MergeFrom(const CMsgServerHello& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerHello* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgServerHello";
  }
  protected:
  explicit CMsgServerHello(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
  };
  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgServerHello)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgClientWelcome final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientWelcome) */ {
 public:
  inline CMsgClientWelcome() : CMsgClientWelcome(nullptr) {}
  ~CMsgClientWelcome() override;
  explicit constexpr CMsgClientWelcome(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientWelcome(const CMsgClientWelcome& from);
  CMsgClientWelcome(CMsgClientWelcome&& from) noexcept
    : CMsgClientWelcome() {
    *this = ::std::move(from);
  }

  inline CMsgClientWelcome& operator=(const CMsgClientWelcome& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientWelcome& operator=(CMsgClientWelcome&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientWelcome& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientWelcome* internal_default_instance() {
    return reinterpret_cast<const CMsgClientWelcome*>(
               &_CMsgClientWelcome_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgClientWelcome& a, CMsgClientWelcome& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientWelcome* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientWelcome* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientWelcome* New() const final {
    return new CMsgClientWelcome();
  }

  CMsgClientWelcome* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientWelcome>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientWelcome& from);
  void MergeFrom(const CMsgClientWelcome& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientWelcome* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientWelcome";
  }
  protected:
  explicit CMsgClientWelcome(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameDataFieldNumber = 2,
    kTxnCountryCodeFieldNumber = 3,
    kVersionFieldNumber = 1,
  };
  // optional bytes game_data = 2;
  bool has_game_data() const;
  private:
  bool _internal_has_game_data() const;
  public:
  void clear_game_data();
  const std::string& game_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_game_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_game_data();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_game_data();
  void set_allocated_game_data(std::string* game_data);
  private:
  const std::string& _internal_game_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_game_data(const std::string& value);
  std::string* _internal_mutable_game_data();
  public:

  // optional string txn_country_code = 3;
  bool has_txn_country_code() const;
  private:
  bool _internal_has_txn_country_code() const;
  public:
  void clear_txn_country_code();
  const std::string& txn_country_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_txn_country_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_txn_country_code();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_txn_country_code();
  void set_allocated_txn_country_code(std::string* txn_country_code);
  private:
  const std::string& _internal_txn_country_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_txn_country_code(const std::string& value);
  std::string* _internal_mutable_txn_country_code();
  public:

  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientWelcome)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr game_data_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr txn_country_code_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgServerWelcome final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgServerWelcome) */ {
 public:
  inline CMsgServerWelcome() : CMsgServerWelcome(nullptr) {}
  ~CMsgServerWelcome() override;
  explicit constexpr CMsgServerWelcome(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgServerWelcome(const CMsgServerWelcome& from);
  CMsgServerWelcome(CMsgServerWelcome&& from) noexcept
    : CMsgServerWelcome() {
    *this = ::std::move(from);
  }

  inline CMsgServerWelcome& operator=(const CMsgServerWelcome& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgServerWelcome& operator=(CMsgServerWelcome&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgServerWelcome& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgServerWelcome* internal_default_instance() {
    return reinterpret_cast<const CMsgServerWelcome*>(
               &_CMsgServerWelcome_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgServerWelcome& a, CMsgServerWelcome& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgServerWelcome* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgServerWelcome* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerWelcome* New() const final {
    return new CMsgServerWelcome();
  }

  CMsgServerWelcome* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerWelcome>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgServerWelcome& from);
  void MergeFrom(const CMsgServerWelcome& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerWelcome* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgServerWelcome";
  }
  protected:
  explicit CMsgServerWelcome(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinAllowedVersionFieldNumber = 1,
    kActiveVersionFieldNumber = 2,
  };
  // optional uint32 min_allowed_version = 1;
  bool has_min_allowed_version() const;
  private:
  bool _internal_has_min_allowed_version() const;
  public:
  void clear_min_allowed_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 min_allowed_version() const;
  void set_min_allowed_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_min_allowed_version() const;
  void _internal_set_min_allowed_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 active_version = 2;
  bool has_active_version() const;
  private:
  bool _internal_has_active_version() const;
  public:
  void clear_active_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 active_version() const;
  void set_active_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_active_version() const;
  void _internal_set_active_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgServerWelcome)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 min_allowed_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 active_version_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgClientGoodbye final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGoodbye) */ {
 public:
  inline CMsgClientGoodbye() : CMsgClientGoodbye(nullptr) {}
  ~CMsgClientGoodbye() override;
  explicit constexpr CMsgClientGoodbye(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGoodbye(const CMsgClientGoodbye& from);
  CMsgClientGoodbye(CMsgClientGoodbye&& from) noexcept
    : CMsgClientGoodbye() {
    *this = ::std::move(from);
  }

  inline CMsgClientGoodbye& operator=(const CMsgClientGoodbye& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGoodbye& operator=(CMsgClientGoodbye&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientGoodbye& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGoodbye* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGoodbye*>(
               &_CMsgClientGoodbye_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgClientGoodbye& a, CMsgClientGoodbye& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGoodbye* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGoodbye* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGoodbye* New() const final {
    return new CMsgClientGoodbye();
  }

  CMsgClientGoodbye* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGoodbye>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGoodbye& from);
  void MergeFrom(const CMsgClientGoodbye& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGoodbye* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGoodbye";
  }
  protected:
  explicit CMsgClientGoodbye(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReasonFieldNumber = 1,
  };
  // optional .GCGoodbyeReason reason = 1 [default = GCGoodbyeReason_GC_GOING_DOWN];
  bool has_reason() const;
  private:
  bool _internal_has_reason() const;
  public:
  void clear_reason();
  ::GCGoodbyeReason reason() const;
  void set_reason(::GCGoodbyeReason value);
  private:
  ::GCGoodbyeReason _internal_reason() const;
  void _internal_set_reason(::GCGoodbyeReason value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGoodbye)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int reason_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgServerGoodbye final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgServerGoodbye) */ {
 public:
  inline CMsgServerGoodbye() : CMsgServerGoodbye(nullptr) {}
  ~CMsgServerGoodbye() override;
  explicit constexpr CMsgServerGoodbye(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgServerGoodbye(const CMsgServerGoodbye& from);
  CMsgServerGoodbye(CMsgServerGoodbye&& from) noexcept
    : CMsgServerGoodbye() {
    *this = ::std::move(from);
  }

  inline CMsgServerGoodbye& operator=(const CMsgServerGoodbye& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgServerGoodbye& operator=(CMsgServerGoodbye&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgServerGoodbye& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgServerGoodbye* internal_default_instance() {
    return reinterpret_cast<const CMsgServerGoodbye*>(
               &_CMsgServerGoodbye_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgServerGoodbye& a, CMsgServerGoodbye& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgServerGoodbye* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgServerGoodbye* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerGoodbye* New() const final {
    return new CMsgServerGoodbye();
  }

  CMsgServerGoodbye* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerGoodbye>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgServerGoodbye& from);
  void MergeFrom(const CMsgServerGoodbye& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerGoodbye* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgServerGoodbye";
  }
  protected:
  explicit CMsgServerGoodbye(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReasonFieldNumber = 1,
  };
  // optional .GCGoodbyeReason reason = 1 [default = GCGoodbyeReason_GC_GOING_DOWN];
  bool has_reason() const;
  private:
  bool _internal_has_reason() const;
  public:
  void clear_reason();
  ::GCGoodbyeReason reason() const;
  void set_reason(::GCGoodbyeReason value);
  private:
  ::GCGoodbyeReason _internal_reason() const;
  void _internal_set_reason(::GCGoodbyeReason value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgServerGoodbye)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int reason_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgServerAvailable final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgServerAvailable) */ {
 public:
  inline CMsgServerAvailable() : CMsgServerAvailable(nullptr) {}
  ~CMsgServerAvailable() override;
  explicit constexpr CMsgServerAvailable(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgServerAvailable(const CMsgServerAvailable& from);
  CMsgServerAvailable(CMsgServerAvailable&& from) noexcept
    : CMsgServerAvailable() {
    *this = ::std::move(from);
  }

  inline CMsgServerAvailable& operator=(const CMsgServerAvailable& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgServerAvailable& operator=(CMsgServerAvailable&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgServerAvailable& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgServerAvailable* internal_default_instance() {
    return reinterpret_cast<const CMsgServerAvailable*>(
               &_CMsgServerAvailable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgServerAvailable& a, CMsgServerAvailable& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgServerAvailable* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgServerAvailable* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerAvailable* New() const final {
    return new CMsgServerAvailable();
  }

  CMsgServerAvailable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerAvailable>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgServerAvailable& from);
  void MergeFrom(const CMsgServerAvailable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerAvailable* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgServerAvailable";
  }
  protected:
  explicit CMsgServerAvailable(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgServerAvailable)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgLANServerAvailable final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgLANServerAvailable) */ {
 public:
  inline CMsgLANServerAvailable() : CMsgLANServerAvailable(nullptr) {}
  ~CMsgLANServerAvailable() override;
  explicit constexpr CMsgLANServerAvailable(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgLANServerAvailable(const CMsgLANServerAvailable& from);
  CMsgLANServerAvailable(CMsgLANServerAvailable&& from) noexcept
    : CMsgLANServerAvailable() {
    *this = ::std::move(from);
  }

  inline CMsgLANServerAvailable& operator=(const CMsgLANServerAvailable& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgLANServerAvailable& operator=(CMsgLANServerAvailable&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgLANServerAvailable& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgLANServerAvailable* internal_default_instance() {
    return reinterpret_cast<const CMsgLANServerAvailable*>(
               &_CMsgLANServerAvailable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgLANServerAvailable& a, CMsgLANServerAvailable& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgLANServerAvailable* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgLANServerAvailable* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgLANServerAvailable* New() const final {
    return new CMsgLANServerAvailable();
  }

  CMsgLANServerAvailable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgLANServerAvailable>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgLANServerAvailable& from);
  void MergeFrom(const CMsgLANServerAvailable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgLANServerAvailable* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgLANServerAvailable";
  }
  protected:
  explicit CMsgLANServerAvailable(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLobbyIdFieldNumber = 1,
  };
  // optional fixed64 lobby_id = 1;
  bool has_lobby_id() const;
  private:
  bool _internal_has_lobby_id() const;
  public:
  void clear_lobby_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 lobby_id() const;
  void set_lobby_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lobby_id() const;
  void _internal_set_lobby_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgLANServerAvailable)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lobby_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CSOEconGameAccountClient final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOEconGameAccountClient) */ {
 public:
  inline CSOEconGameAccountClient() : CSOEconGameAccountClient(nullptr) {}
  ~CSOEconGameAccountClient() override;
  explicit constexpr CSOEconGameAccountClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOEconGameAccountClient(const CSOEconGameAccountClient& from);
  CSOEconGameAccountClient(CSOEconGameAccountClient&& from) noexcept
    : CSOEconGameAccountClient() {
    *this = ::std::move(from);
  }

  inline CSOEconGameAccountClient& operator=(const CSOEconGameAccountClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOEconGameAccountClient& operator=(CSOEconGameAccountClient&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOEconGameAccountClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOEconGameAccountClient* internal_default_instance() {
    return reinterpret_cast<const CSOEconGameAccountClient*>(
               &_CSOEconGameAccountClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CSOEconGameAccountClient& a, CSOEconGameAccountClient& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOEconGameAccountClient* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOEconGameAccountClient* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSOEconGameAccountClient* New() const final {
    return new CSOEconGameAccountClient();
  }

  CSOEconGameAccountClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSOEconGameAccountClient>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSOEconGameAccountClient& from);
  void MergeFrom(const CSOEconGameAccountClient& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOEconGameAccountClient* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOEconGameAccountClient";
  }
  protected:
  explicit CSOEconGameAccountClient(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAdditionalBackpackSlotsFieldNumber = 1,
    kTradeBanExpirationFieldNumber = 6,
    kDuelBanExpirationFieldNumber = 7,
    kTrialAccountFieldNumber = 2,
    kNeedToChooseMostHelpfulFriendFieldNumber = 4,
    kInCoachesListFieldNumber = 5,
    kPhoneVerifiedFieldNumber = 19,
    kPreviewItemDefFieldNumber = 8,
    kMatchmakingRankedBanExpirationFieldNumber = 18,
    kSkillRating6V6FieldNumber = 20,
    kSkillRating9V9FieldNumber = 21,
    kMatchmakingRankedLowPriorityExpirationFieldNumber = 24,
    kMatchmakingRankedBanLastDurationFieldNumber = 25,
    kMatchmakingLastCompExcessiveReportsAutoBanTimeFieldNumber = 35,
    kMatchmakingRankedLowPriorityLastDurationFieldNumber = 26,
    kMatchmakingCasualBanExpirationFieldNumber = 27,
    kMatchmakingCasualLowPriorityExpirationFieldNumber = 28,
    kCompetitiveAccessFieldNumber = 23,
    kPhoneIdentifyingFieldNumber = 31,
    kDisablePartyQuestProgressFieldNumber = 32,
    kMatchmakingCasualBanLastDurationFieldNumber = 29,
    kMatchmakingCasualLowPriorityLastDurationFieldNumber = 30,
    kQuestRewardCreditsFieldNumber = 33,
    kMatchmakingLastCasualExcessiveReportsAutoBanTimeFieldNumber = 34,
  };
  // optional uint32 additional_backpack_slots = 1 [default = 0];
  bool has_additional_backpack_slots() const;
  private:
  bool _internal_has_additional_backpack_slots() const;
  public:
  void clear_additional_backpack_slots();
  ::PROTOBUF_NAMESPACE_ID::uint32 additional_backpack_slots() const;
  void set_additional_backpack_slots(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_additional_backpack_slots() const;
  void _internal_set_additional_backpack_slots(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed32 trade_ban_expiration = 6;
  bool has_trade_ban_expiration() const;
  private:
  bool _internal_has_trade_ban_expiration() const;
  public:
  void clear_trade_ban_expiration();
  ::PROTOBUF_NAMESPACE_ID::uint32 trade_ban_expiration() const;
  void set_trade_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_trade_ban_expiration() const;
  void _internal_set_trade_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed32 duel_ban_expiration = 7;
  bool has_duel_ban_expiration() const;
  private:
  bool _internal_has_duel_ban_expiration() const;
  public:
  void clear_duel_ban_expiration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duel_ban_expiration() const;
  void set_duel_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_duel_ban_expiration() const;
  void _internal_set_duel_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool trial_account = 2 [default = false];
  bool has_trial_account() const;
  private:
  bool _internal_has_trial_account() const;
  public:
  void clear_trial_account();
  bool trial_account() const;
  void set_trial_account(bool value);
  private:
  bool _internal_trial_account() const;
  void _internal_set_trial_account(bool value);
  public:

  // optional bool need_to_choose_most_helpful_friend = 4;
  bool has_need_to_choose_most_helpful_friend() const;
  private:
  bool _internal_has_need_to_choose_most_helpful_friend() const;
  public:
  void clear_need_to_choose_most_helpful_friend();
  bool need_to_choose_most_helpful_friend() const;
  void set_need_to_choose_most_helpful_friend(bool value);
  private:
  bool _internal_need_to_choose_most_helpful_friend() const;
  void _internal_set_need_to_choose_most_helpful_friend(bool value);
  public:

  // optional bool in_coaches_list = 5;
  bool has_in_coaches_list() const;
  private:
  bool _internal_has_in_coaches_list() const;
  public:
  void clear_in_coaches_list();
  bool in_coaches_list() const;
  void set_in_coaches_list(bool value);
  private:
  bool _internal_in_coaches_list() const;
  void _internal_set_in_coaches_list(bool value);
  public:

  // optional bool phone_verified = 19 [default = false];
  bool has_phone_verified() const;
  private:
  bool _internal_has_phone_verified() const;
  public:
  void clear_phone_verified();
  bool phone_verified() const;
  void set_phone_verified(bool value);
  private:
  bool _internal_phone_verified() const;
  void _internal_set_phone_verified(bool value);
  public:

  // optional uint32 preview_item_def = 8 [default = 0];
  bool has_preview_item_def() const;
  private:
  bool _internal_has_preview_item_def() const;
  public:
  void clear_preview_item_def();
  ::PROTOBUF_NAMESPACE_ID::uint32 preview_item_def() const;
  void set_preview_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preview_item_def() const;
  void _internal_set_preview_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 matchmaking_ranked_ban_expiration = 18;
  bool has_matchmaking_ranked_ban_expiration() const;
  private:
  bool _internal_has_matchmaking_ranked_ban_expiration() const;
  public:
  void clear_matchmaking_ranked_ban_expiration();
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_ranked_ban_expiration() const;
  void set_matchmaking_ranked_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matchmaking_ranked_ban_expiration() const;
  void _internal_set_matchmaking_ranked_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skill_rating_6v6 = 20;
  bool has_skill_rating_6v6() const;
  private:
  bool _internal_has_skill_rating_6v6() const;
  public:
  void clear_skill_rating_6v6();
  ::PROTOBUF_NAMESPACE_ID::uint32 skill_rating_6v6() const;
  void set_skill_rating_6v6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skill_rating_6v6() const;
  void _internal_set_skill_rating_6v6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skill_rating_9v9 = 21;
  bool has_skill_rating_9v9() const;
  private:
  bool _internal_has_skill_rating_9v9() const;
  public:
  void clear_skill_rating_9v9();
  ::PROTOBUF_NAMESPACE_ID::uint32 skill_rating_9v9() const;
  void set_skill_rating_9v9(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skill_rating_9v9() const;
  void _internal_set_skill_rating_9v9(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 matchmaking_ranked_low_priority_expiration = 24;
  bool has_matchmaking_ranked_low_priority_expiration() const;
  private:
  bool _internal_has_matchmaking_ranked_low_priority_expiration() const;
  public:
  void clear_matchmaking_ranked_low_priority_expiration();
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_ranked_low_priority_expiration() const;
  void set_matchmaking_ranked_low_priority_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matchmaking_ranked_low_priority_expiration() const;
  void _internal_set_matchmaking_ranked_low_priority_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 matchmaking_ranked_ban_last_duration = 25;
  bool has_matchmaking_ranked_ban_last_duration() const;
  private:
  bool _internal_has_matchmaking_ranked_ban_last_duration() const;
  public:
  void clear_matchmaking_ranked_ban_last_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_ranked_ban_last_duration() const;
  void set_matchmaking_ranked_ban_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matchmaking_ranked_ban_last_duration() const;
  void _internal_set_matchmaking_ranked_ban_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 matchmaking_last_comp_excessive_reports_auto_ban_time = 35;
  bool has_matchmaking_last_comp_excessive_reports_auto_ban_time() const;
  private:
  bool _internal_has_matchmaking_last_comp_excessive_reports_auto_ban_time() const;
  public:
  void clear_matchmaking_last_comp_excessive_reports_auto_ban_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_last_comp_excessive_reports_auto_ban_time() const;
  void set_matchmaking_last_comp_excessive_reports_auto_ban_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matchmaking_last_comp_excessive_reports_auto_ban_time() const;
  void _internal_set_matchmaking_last_comp_excessive_reports_auto_ban_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 matchmaking_ranked_low_priority_last_duration = 26;
  bool has_matchmaking_ranked_low_priority_last_duration() const;
  private:
  bool _internal_has_matchmaking_ranked_low_priority_last_duration() const;
  public:
  void clear_matchmaking_ranked_low_priority_last_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_ranked_low_priority_last_duration() const;
  void set_matchmaking_ranked_low_priority_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matchmaking_ranked_low_priority_last_duration() const;
  void _internal_set_matchmaking_ranked_low_priority_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 matchmaking_casual_ban_expiration = 27;
  bool has_matchmaking_casual_ban_expiration() const;
  private:
  bool _internal_has_matchmaking_casual_ban_expiration() const;
  public:
  void clear_matchmaking_casual_ban_expiration();
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_casual_ban_expiration() const;
  void set_matchmaking_casual_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matchmaking_casual_ban_expiration() const;
  void _internal_set_matchmaking_casual_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 matchmaking_casual_low_priority_expiration = 28;
  bool has_matchmaking_casual_low_priority_expiration() const;
  private:
  bool _internal_has_matchmaking_casual_low_priority_expiration() const;
  public:
  void clear_matchmaking_casual_low_priority_expiration();
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_casual_low_priority_expiration() const;
  void set_matchmaking_casual_low_priority_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matchmaking_casual_low_priority_expiration() const;
  void _internal_set_matchmaking_casual_low_priority_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool competitive_access = 23 [default = false];
  bool has_competitive_access() const;
  private:
  bool _internal_has_competitive_access() const;
  public:
  void clear_competitive_access();
  bool competitive_access() const;
  void set_competitive_access(bool value);
  private:
  bool _internal_competitive_access() const;
  void _internal_set_competitive_access(bool value);
  public:

  // optional bool phone_identifying = 31 [default = false];
  bool has_phone_identifying() const;
  private:
  bool _internal_has_phone_identifying() const;
  public:
  void clear_phone_identifying();
  bool phone_identifying() const;
  void set_phone_identifying(bool value);
  private:
  bool _internal_phone_identifying() const;
  void _internal_set_phone_identifying(bool value);
  public:

  // optional bool disable_party_quest_progress = 32 [default = false];
  bool has_disable_party_quest_progress() const;
  private:
  bool _internal_has_disable_party_quest_progress() const;
  public:
  void clear_disable_party_quest_progress();
  bool disable_party_quest_progress() const;
  void set_disable_party_quest_progress(bool value);
  private:
  bool _internal_disable_party_quest_progress() const;
  void _internal_set_disable_party_quest_progress(bool value);
  public:

  // optional uint32 matchmaking_casual_ban_last_duration = 29;
  bool has_matchmaking_casual_ban_last_duration() const;
  private:
  bool _internal_has_matchmaking_casual_ban_last_duration() const;
  public:
  void clear_matchmaking_casual_ban_last_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_casual_ban_last_duration() const;
  void set_matchmaking_casual_ban_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matchmaking_casual_ban_last_duration() const;
  void _internal_set_matchmaking_casual_ban_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 matchmaking_casual_low_priority_last_duration = 30;
  bool has_matchmaking_casual_low_priority_last_duration() const;
  private:
  bool _internal_has_matchmaking_casual_low_priority_last_duration() const;
  public:
  void clear_matchmaking_casual_low_priority_last_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_casual_low_priority_last_duration() const;
  void set_matchmaking_casual_low_priority_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matchmaking_casual_low_priority_last_duration() const;
  void _internal_set_matchmaking_casual_low_priority_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 quest_reward_credits = 33;
  bool has_quest_reward_credits() const;
  private:
  bool _internal_has_quest_reward_credits() const;
  public:
  void clear_quest_reward_credits();
  ::PROTOBUF_NAMESPACE_ID::uint32 quest_reward_credits() const;
  void set_quest_reward_credits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quest_reward_credits() const;
  void _internal_set_quest_reward_credits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 matchmaking_last_casual_excessive_reports_auto_ban_time = 34;
  bool has_matchmaking_last_casual_excessive_reports_auto_ban_time() const;
  private:
  bool _internal_has_matchmaking_last_casual_excessive_reports_auto_ban_time() const;
  public:
  void clear_matchmaking_last_casual_excessive_reports_auto_ban_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_last_casual_excessive_reports_auto_ban_time() const;
  void set_matchmaking_last_casual_excessive_reports_auto_ban_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matchmaking_last_casual_excessive_reports_auto_ban_time() const;
  void _internal_set_matchmaking_last_casual_excessive_reports_auto_ban_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CSOEconGameAccountClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 additional_backpack_slots_;
  ::PROTOBUF_NAMESPACE_ID::uint32 trade_ban_expiration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duel_ban_expiration_;
  bool trial_account_;
  bool need_to_choose_most_helpful_friend_;
  bool in_coaches_list_;
  bool phone_verified_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preview_item_def_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_ranked_ban_expiration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skill_rating_6v6_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skill_rating_9v9_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_ranked_low_priority_expiration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_ranked_ban_last_duration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_last_comp_excessive_reports_auto_ban_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_ranked_low_priority_last_duration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_casual_ban_expiration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_casual_low_priority_expiration_;
  bool competitive_access_;
  bool phone_identifying_;
  bool disable_party_quest_progress_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_casual_ban_last_duration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_casual_low_priority_last_duration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quest_reward_credits_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matchmaking_last_casual_excessive_reports_auto_ban_time_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CSOItemCriteriaCondition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOItemCriteriaCondition) */ {
 public:
  inline CSOItemCriteriaCondition() : CSOItemCriteriaCondition(nullptr) {}
  ~CSOItemCriteriaCondition() override;
  explicit constexpr CSOItemCriteriaCondition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOItemCriteriaCondition(const CSOItemCriteriaCondition& from);
  CSOItemCriteriaCondition(CSOItemCriteriaCondition&& from) noexcept
    : CSOItemCriteriaCondition() {
    *this = ::std::move(from);
  }

  inline CSOItemCriteriaCondition& operator=(const CSOItemCriteriaCondition& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOItemCriteriaCondition& operator=(CSOItemCriteriaCondition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOItemCriteriaCondition& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOItemCriteriaCondition* internal_default_instance() {
    return reinterpret_cast<const CSOItemCriteriaCondition*>(
               &_CSOItemCriteriaCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CSOItemCriteriaCondition& a, CSOItemCriteriaCondition& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOItemCriteriaCondition* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOItemCriteriaCondition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSOItemCriteriaCondition* New() const final {
    return new CSOItemCriteriaCondition();
  }

  CSOItemCriteriaCondition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSOItemCriteriaCondition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSOItemCriteriaCondition& from);
  void MergeFrom(const CSOItemCriteriaCondition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOItemCriteriaCondition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOItemCriteriaCondition";
  }
  protected:
  explicit CSOItemCriteriaCondition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 2,
    kStringValueFieldNumber = 5,
    kOpFieldNumber = 1,
    kRequiredFieldNumber = 3,
    kFloatValueFieldNumber = 4,
  };
  // optional string field = 2;
  bool has_field() const;
  private:
  bool _internal_has_field() const;
  public:
  void clear_field();
  const std::string& field() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_field(ArgT0&& arg0, ArgT... args);
  std::string* mutable_field();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_field();
  void set_allocated_field(std::string* field);
  private:
  const std::string& _internal_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field(const std::string& value);
  std::string* _internal_mutable_field();
  public:

  // optional string string_value = 5;
  bool has_string_value() const;
  private:
  bool _internal_has_string_value() const;
  public:
  void clear_string_value();
  const std::string& string_value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_string_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_string_value();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_string_value();
  void set_allocated_string_value(std::string* string_value);
  private:
  const std::string& _internal_string_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string_value(const std::string& value);
  std::string* _internal_mutable_string_value();
  public:

  // optional int32 op = 1;
  bool has_op() const;
  private:
  bool _internal_has_op() const;
  public:
  void clear_op();
  ::PROTOBUF_NAMESPACE_ID::int32 op() const;
  void set_op(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_op() const;
  void _internal_set_op(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool required = 3;
  bool has_required() const;
  private:
  bool _internal_has_required() const;
  public:
  void clear_required();
  bool required() const;
  void set_required(bool value);
  private:
  bool _internal_required() const;
  void _internal_set_required(bool value);
  public:

  // optional float float_value = 4;
  bool has_float_value() const;
  private:
  bool _internal_has_float_value() const;
  public:
  void clear_float_value();
  float float_value() const;
  void set_float_value(float value);
  private:
  float _internal_float_value() const;
  void _internal_set_float_value(float value);
  public:

  // @@protoc_insertion_point(class_scope:CSOItemCriteriaCondition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 op_;
  bool required_;
  float float_value_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CSOItemCriteria final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOItemCriteria) */ {
 public:
  inline CSOItemCriteria() : CSOItemCriteria(nullptr) {}
  ~CSOItemCriteria() override;
  explicit constexpr CSOItemCriteria(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOItemCriteria(const CSOItemCriteria& from);
  CSOItemCriteria(CSOItemCriteria&& from) noexcept
    : CSOItemCriteria() {
    *this = ::std::move(from);
  }

  inline CSOItemCriteria& operator=(const CSOItemCriteria& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOItemCriteria& operator=(CSOItemCriteria&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOItemCriteria& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOItemCriteria* internal_default_instance() {
    return reinterpret_cast<const CSOItemCriteria*>(
               &_CSOItemCriteria_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CSOItemCriteria& a, CSOItemCriteria& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOItemCriteria* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOItemCriteria* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSOItemCriteria* New() const final {
    return new CSOItemCriteria();
  }

  CSOItemCriteria* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSOItemCriteria>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSOItemCriteria& from);
  void MergeFrom(const CSOItemCriteria& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOItemCriteria* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOItemCriteria";
  }
  protected:
  explicit CSOItemCriteria(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConditionsFieldNumber = 9,
    kTagsFieldNumber = 11,
    kEquipRegionsFieldNumber = 12,
    kItemLevelFieldNumber = 1,
    kItemQualityFieldNumber = 2,
    kInitialInventoryFieldNumber = 5,
    kInitialQuantityFieldNumber = 6,
    kItemLevelSetFieldNumber = 3,
    kItemQualitySetFieldNumber = 4,
    kIgnoreEnabledFlagFieldNumber = 8,
    kRecentOnlyFieldNumber = 10,
  };
  // repeated .CSOItemCriteriaCondition conditions = 9;
  int conditions_size() const;
  private:
  int _internal_conditions_size() const;
  public:
  void clear_conditions();
  ::CSOItemCriteriaCondition* mutable_conditions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteriaCondition >*
      mutable_conditions();
  private:
  const ::CSOItemCriteriaCondition& _internal_conditions(int index) const;
  ::CSOItemCriteriaCondition* _internal_add_conditions();
  public:
  const ::CSOItemCriteriaCondition& conditions(int index) const;
  ::CSOItemCriteriaCondition* add_conditions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteriaCondition >&
      conditions() const;

  // optional string tags = 11;
  bool has_tags() const;
  private:
  bool _internal_has_tags() const;
  public:
  void clear_tags();
  const std::string& tags() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_tags(ArgT0&& arg0, ArgT... args);
  std::string* mutable_tags();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_tags();
  void set_allocated_tags(std::string* tags);
  private:
  const std::string& _internal_tags() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tags(const std::string& value);
  std::string* _internal_mutable_tags();
  public:

  // optional string equip_regions = 12;
  bool has_equip_regions() const;
  private:
  bool _internal_has_equip_regions() const;
  public:
  void clear_equip_regions();
  const std::string& equip_regions() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_equip_regions(ArgT0&& arg0, ArgT... args);
  std::string* mutable_equip_regions();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_equip_regions();
  void set_allocated_equip_regions(std::string* equip_regions);
  private:
  const std::string& _internal_equip_regions() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_equip_regions(const std::string& value);
  std::string* _internal_mutable_equip_regions();
  public:

  // optional uint32 item_level = 1;
  bool has_item_level() const;
  private:
  bool _internal_has_item_level() const;
  public:
  void clear_item_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_level() const;
  void set_item_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_level() const;
  void _internal_set_item_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 item_quality = 2;
  bool has_item_quality() const;
  private:
  bool _internal_has_item_quality() const;
  public:
  void clear_item_quality();
  ::PROTOBUF_NAMESPACE_ID::int32 item_quality() const;
  void set_item_quality(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_quality() const;
  void _internal_set_item_quality(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 initial_inventory = 5;
  bool has_initial_inventory() const;
  private:
  bool _internal_has_initial_inventory() const;
  public:
  void clear_initial_inventory();
  ::PROTOBUF_NAMESPACE_ID::uint32 initial_inventory() const;
  void set_initial_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_initial_inventory() const;
  void _internal_set_initial_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 initial_quantity = 6;
  bool has_initial_quantity() const;
  private:
  bool _internal_has_initial_quantity() const;
  public:
  void clear_initial_quantity();
  ::PROTOBUF_NAMESPACE_ID::uint32 initial_quantity() const;
  void set_initial_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_initial_quantity() const;
  void _internal_set_initial_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool item_level_set = 3;
  bool has_item_level_set() const;
  private:
  bool _internal_has_item_level_set() const;
  public:
  void clear_item_level_set();
  bool item_level_set() const;
  void set_item_level_set(bool value);
  private:
  bool _internal_item_level_set() const;
  void _internal_set_item_level_set(bool value);
  public:

  // optional bool item_quality_set = 4;
  bool has_item_quality_set() const;
  private:
  bool _internal_has_item_quality_set() const;
  public:
  void clear_item_quality_set();
  bool item_quality_set() const;
  void set_item_quality_set(bool value);
  private:
  bool _internal_item_quality_set() const;
  void _internal_set_item_quality_set(bool value);
  public:

  // optional bool ignore_enabled_flag = 8;
  bool has_ignore_enabled_flag() const;
  private:
  bool _internal_has_ignore_enabled_flag() const;
  public:
  void clear_ignore_enabled_flag();
  bool ignore_enabled_flag() const;
  void set_ignore_enabled_flag(bool value);
  private:
  bool _internal_ignore_enabled_flag() const;
  void _internal_set_ignore_enabled_flag(bool value);
  public:

  // optional bool recent_only = 10;
  bool has_recent_only() const;
  private:
  bool _internal_has_recent_only() const;
  public:
  void clear_recent_only();
  bool recent_only() const;
  void set_recent_only(bool value);
  private:
  bool _internal_recent_only() const;
  void _internal_set_recent_only(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CSOItemCriteria)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteriaCondition > conditions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tags_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr equip_regions_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_quality_;
  ::PROTOBUF_NAMESPACE_ID::uint32 initial_inventory_;
  ::PROTOBUF_NAMESPACE_ID::uint32 initial_quantity_;
  bool item_level_set_;
  bool item_quality_set_;
  bool ignore_enabled_flag_;
  bool recent_only_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CSOItemRecipe final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOItemRecipe) */ {
 public:
  inline CSOItemRecipe() : CSOItemRecipe(nullptr) {}
  ~CSOItemRecipe() override;
  explicit constexpr CSOItemRecipe(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOItemRecipe(const CSOItemRecipe& from);
  CSOItemRecipe(CSOItemRecipe&& from) noexcept
    : CSOItemRecipe() {
    *this = ::std::move(from);
  }

  inline CSOItemRecipe& operator=(const CSOItemRecipe& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOItemRecipe& operator=(CSOItemRecipe&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOItemRecipe& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOItemRecipe* internal_default_instance() {
    return reinterpret_cast<const CSOItemRecipe*>(
               &_CSOItemRecipe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CSOItemRecipe& a, CSOItemRecipe& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOItemRecipe* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOItemRecipe* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSOItemRecipe* New() const final {
    return new CSOItemRecipe();
  }

  CSOItemRecipe* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSOItemRecipe>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSOItemRecipe& from);
  void MergeFrom(const CSOItemRecipe& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOItemRecipe* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOItemRecipe";
  }
  protected:
  explicit CSOItemRecipe(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputItemsCriteriaFieldNumber = 20,
    kOutputItemsCriteriaFieldNumber = 21,
    kInputItemDupeCountsFieldNumber = 22,
    kNameFieldNumber = 2,
    kNAFieldNumber = 3,
    kDescInputsFieldNumber = 4,
    kDescOutputsFieldNumber = 5,
    kDiAFieldNumber = 6,
    kDiBFieldNumber = 7,
    kDiCFieldNumber = 8,
    kDoAFieldNumber = 9,
    kDoBFieldNumber = 10,
    kDoCFieldNumber = 11,
    kDefIndexFieldNumber = 1,
    kRequiresAllSameClassFieldNumber = 12,
    kRequiresAllSameSlotFieldNumber = 13,
    kClassUsageForOutputFieldNumber = 14,
    kSlotUsageForOutputFieldNumber = 15,
    kSetForOutputFieldNumber = 16,
  };
  // repeated .CSOItemCriteria input_items_criteria = 20;
  int input_items_criteria_size() const;
  private:
  int _internal_input_items_criteria_size() const;
  public:
  void clear_input_items_criteria();
  ::CSOItemCriteria* mutable_input_items_criteria(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteria >*
      mutable_input_items_criteria();
  private:
  const ::CSOItemCriteria& _internal_input_items_criteria(int index) const;
  ::CSOItemCriteria* _internal_add_input_items_criteria();
  public:
  const ::CSOItemCriteria& input_items_criteria(int index) const;
  ::CSOItemCriteria* add_input_items_criteria();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteria >&
      input_items_criteria() const;

  // repeated .CSOItemCriteria output_items_criteria = 21;
  int output_items_criteria_size() const;
  private:
  int _internal_output_items_criteria_size() const;
  public:
  void clear_output_items_criteria();
  ::CSOItemCriteria* mutable_output_items_criteria(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteria >*
      mutable_output_items_criteria();
  private:
  const ::CSOItemCriteria& _internal_output_items_criteria(int index) const;
  ::CSOItemCriteria* _internal_add_output_items_criteria();
  public:
  const ::CSOItemCriteria& output_items_criteria(int index) const;
  ::CSOItemCriteria* add_output_items_criteria();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteria >&
      output_items_criteria() const;

  // repeated uint32 input_item_dupe_counts = 22;
  int input_item_dupe_counts_size() const;
  private:
  int _internal_input_item_dupe_counts_size() const;
  public:
  void clear_input_item_dupe_counts();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input_item_dupe_counts(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_input_item_dupe_counts() const;
  void _internal_add_input_item_dupe_counts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_input_item_dupe_counts();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 input_item_dupe_counts(int index) const;
  void set_input_item_dupe_counts(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_input_item_dupe_counts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      input_item_dupe_counts() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_input_item_dupe_counts();

  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string n_a = 3;
  bool has_n_a() const;
  private:
  bool _internal_has_n_a() const;
  public:
  void clear_n_a();
  const std::string& n_a() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_n_a(ArgT0&& arg0, ArgT... args);
  std::string* mutable_n_a();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_n_a();
  void set_allocated_n_a(std::string* n_a);
  private:
  const std::string& _internal_n_a() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_n_a(const std::string& value);
  std::string* _internal_mutable_n_a();
  public:

  // optional string desc_inputs = 4;
  bool has_desc_inputs() const;
  private:
  bool _internal_has_desc_inputs() const;
  public:
  void clear_desc_inputs();
  const std::string& desc_inputs() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_desc_inputs(ArgT0&& arg0, ArgT... args);
  std::string* mutable_desc_inputs();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_desc_inputs();
  void set_allocated_desc_inputs(std::string* desc_inputs);
  private:
  const std::string& _internal_desc_inputs() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_desc_inputs(const std::string& value);
  std::string* _internal_mutable_desc_inputs();
  public:

  // optional string desc_outputs = 5;
  bool has_desc_outputs() const;
  private:
  bool _internal_has_desc_outputs() const;
  public:
  void clear_desc_outputs();
  const std::string& desc_outputs() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_desc_outputs(ArgT0&& arg0, ArgT... args);
  std::string* mutable_desc_outputs();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_desc_outputs();
  void set_allocated_desc_outputs(std::string* desc_outputs);
  private:
  const std::string& _internal_desc_outputs() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_desc_outputs(const std::string& value);
  std::string* _internal_mutable_desc_outputs();
  public:

  // optional string di_a = 6;
  bool has_di_a() const;
  private:
  bool _internal_has_di_a() const;
  public:
  void clear_di_a();
  const std::string& di_a() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_di_a(ArgT0&& arg0, ArgT... args);
  std::string* mutable_di_a();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_di_a();
  void set_allocated_di_a(std::string* di_a);
  private:
  const std::string& _internal_di_a() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_di_a(const std::string& value);
  std::string* _internal_mutable_di_a();
  public:

  // optional string di_b = 7;
  bool has_di_b() const;
  private:
  bool _internal_has_di_b() const;
  public:
  void clear_di_b();
  const std::string& di_b() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_di_b(ArgT0&& arg0, ArgT... args);
  std::string* mutable_di_b();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_di_b();
  void set_allocated_di_b(std::string* di_b);
  private:
  const std::string& _internal_di_b() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_di_b(const std::string& value);
  std::string* _internal_mutable_di_b();
  public:

  // optional string di_c = 8;
  bool has_di_c() const;
  private:
  bool _internal_has_di_c() const;
  public:
  void clear_di_c();
  const std::string& di_c() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_di_c(ArgT0&& arg0, ArgT... args);
  std::string* mutable_di_c();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_di_c();
  void set_allocated_di_c(std::string* di_c);
  private:
  const std::string& _internal_di_c() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_di_c(const std::string& value);
  std::string* _internal_mutable_di_c();
  public:

  // optional string do_a = 9;
  bool has_do_a() const;
  private:
  bool _internal_has_do_a() const;
  public:
  void clear_do_a();
  const std::string& do_a() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_do_a(ArgT0&& arg0, ArgT... args);
  std::string* mutable_do_a();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_do_a();
  void set_allocated_do_a(std::string* do_a);
  private:
  const std::string& _internal_do_a() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_do_a(const std::string& value);
  std::string* _internal_mutable_do_a();
  public:

  // optional string do_b = 10;
  bool has_do_b() const;
  private:
  bool _internal_has_do_b() const;
  public:
  void clear_do_b();
  const std::string& do_b() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_do_b(ArgT0&& arg0, ArgT... args);
  std::string* mutable_do_b();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_do_b();
  void set_allocated_do_b(std::string* do_b);
  private:
  const std::string& _internal_do_b() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_do_b(const std::string& value);
  std::string* _internal_mutable_do_b();
  public:

  // optional string do_c = 11;
  bool has_do_c() const;
  private:
  bool _internal_has_do_c() const;
  public:
  void clear_do_c();
  const std::string& do_c() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_do_c(ArgT0&& arg0, ArgT... args);
  std::string* mutable_do_c();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_do_c();
  void set_allocated_do_c(std::string* do_c);
  private:
  const std::string& _internal_do_c() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_do_c(const std::string& value);
  std::string* _internal_mutable_do_c();
  public:

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  private:
  bool _internal_has_def_index() const;
  public:
  void clear_def_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 def_index() const;
  void set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_def_index() const;
  void _internal_set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool requires_all_same_class = 12;
  bool has_requires_all_same_class() const;
  private:
  bool _internal_has_requires_all_same_class() const;
  public:
  void clear_requires_all_same_class();
  bool requires_all_same_class() const;
  void set_requires_all_same_class(bool value);
  private:
  bool _internal_requires_all_same_class() const;
  void _internal_set_requires_all_same_class(bool value);
  public:

  // optional bool requires_all_same_slot = 13;
  bool has_requires_all_same_slot() const;
  private:
  bool _internal_has_requires_all_same_slot() const;
  public:
  void clear_requires_all_same_slot();
  bool requires_all_same_slot() const;
  void set_requires_all_same_slot(bool value);
  private:
  bool _internal_requires_all_same_slot() const;
  void _internal_set_requires_all_same_slot(bool value);
  public:

  // optional int32 class_usage_for_output = 14;
  bool has_class_usage_for_output() const;
  private:
  bool _internal_has_class_usage_for_output() const;
  public:
  void clear_class_usage_for_output();
  ::PROTOBUF_NAMESPACE_ID::int32 class_usage_for_output() const;
  void set_class_usage_for_output(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_class_usage_for_output() const;
  void _internal_set_class_usage_for_output(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 slot_usage_for_output = 15;
  bool has_slot_usage_for_output() const;
  private:
  bool _internal_has_slot_usage_for_output() const;
  public:
  void clear_slot_usage_for_output();
  ::PROTOBUF_NAMESPACE_ID::int32 slot_usage_for_output() const;
  void set_slot_usage_for_output(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_slot_usage_for_output() const;
  void _internal_set_slot_usage_for_output(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 set_for_output = 16;
  bool has_set_for_output() const;
  private:
  bool _internal_has_set_for_output() const;
  public:
  void clear_set_for_output();
  ::PROTOBUF_NAMESPACE_ID::int32 set_for_output() const;
  void set_set_for_output(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_set_for_output() const;
  void _internal_set_set_for_output(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CSOItemRecipe)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteria > input_items_criteria_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteria > output_items_criteria_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > input_item_dupe_counts_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr n_a_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr desc_inputs_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr desc_outputs_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr di_a_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr di_b_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr di_c_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr do_a_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr do_b_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr do_c_;
  ::PROTOBUF_NAMESPACE_ID::uint32 def_index_;
  bool requires_all_same_class_;
  bool requires_all_same_slot_;
  ::PROTOBUF_NAMESPACE_ID::int32 class_usage_for_output_;
  ::PROTOBUF_NAMESPACE_ID::int32 slot_usage_for_output_;
  ::PROTOBUF_NAMESPACE_ID::int32 set_for_output_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgDevNewItemRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDevNewItemRequest) */ {
 public:
  inline CMsgDevNewItemRequest() : CMsgDevNewItemRequest(nullptr) {}
  ~CMsgDevNewItemRequest() override;
  explicit constexpr CMsgDevNewItemRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDevNewItemRequest(const CMsgDevNewItemRequest& from);
  CMsgDevNewItemRequest(CMsgDevNewItemRequest&& from) noexcept
    : CMsgDevNewItemRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDevNewItemRequest& operator=(const CMsgDevNewItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDevNewItemRequest& operator=(CMsgDevNewItemRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgDevNewItemRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDevNewItemRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDevNewItemRequest*>(
               &_CMsgDevNewItemRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgDevNewItemRequest& a, CMsgDevNewItemRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDevNewItemRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDevNewItemRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgDevNewItemRequest* New() const final {
    return new CMsgDevNewItemRequest();
  }

  CMsgDevNewItemRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDevNewItemRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgDevNewItemRequest& from);
  void MergeFrom(const CMsgDevNewItemRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDevNewItemRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDevNewItemRequest";
  }
  protected:
  explicit CMsgDevNewItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCriteriaFieldNumber = 2,
    kReceiverFieldNumber = 1,
  };
  // optional .CSOItemCriteria criteria = 2;
  bool has_criteria() const;
  private:
  bool _internal_has_criteria() const;
  public:
  void clear_criteria();
  const ::CSOItemCriteria& criteria() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::CSOItemCriteria* release_criteria();
  ::CSOItemCriteria* mutable_criteria();
  void set_allocated_criteria(::CSOItemCriteria* criteria);
  private:
  const ::CSOItemCriteria& _internal_criteria() const;
  ::CSOItemCriteria* _internal_mutable_criteria();
  public:
  void unsafe_arena_set_allocated_criteria(
      ::CSOItemCriteria* criteria);
  ::CSOItemCriteria* unsafe_arena_release_criteria();

  // optional fixed64 receiver = 1;
  bool has_receiver() const;
  private:
  bool _internal_has_receiver() const;
  public:
  void clear_receiver();
  ::PROTOBUF_NAMESPACE_ID::uint64 receiver() const;
  void set_receiver(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_receiver() const;
  void _internal_set_receiver(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDevNewItemRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CSOItemCriteria* criteria_;
  ::PROTOBUF_NAMESPACE_ID::uint64 receiver_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgDevDebugRollLootRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDevDebugRollLootRequest) */ {
 public:
  inline CMsgDevDebugRollLootRequest() : CMsgDevDebugRollLootRequest(nullptr) {}
  ~CMsgDevDebugRollLootRequest() override;
  explicit constexpr CMsgDevDebugRollLootRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDevDebugRollLootRequest(const CMsgDevDebugRollLootRequest& from);
  CMsgDevDebugRollLootRequest(CMsgDevDebugRollLootRequest&& from) noexcept
    : CMsgDevDebugRollLootRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDevDebugRollLootRequest& operator=(const CMsgDevDebugRollLootRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDevDebugRollLootRequest& operator=(CMsgDevDebugRollLootRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgDevDebugRollLootRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDevDebugRollLootRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDevDebugRollLootRequest*>(
               &_CMsgDevDebugRollLootRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgDevDebugRollLootRequest& a, CMsgDevDebugRollLootRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDevDebugRollLootRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDevDebugRollLootRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgDevDebugRollLootRequest* New() const final {
    return new CMsgDevDebugRollLootRequest();
  }

  CMsgDevDebugRollLootRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDevDebugRollLootRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgDevDebugRollLootRequest& from);
  void MergeFrom(const CMsgDevDebugRollLootRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDevDebugRollLootRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDevDebugRollLootRequest";
  }
  protected:
  explicit CMsgDevDebugRollLootRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLootListNameFieldNumber = 2,
    kReceiverFieldNumber = 1,
  };
  // optional string loot_list_name = 2;
  bool has_loot_list_name() const;
  private:
  bool _internal_has_loot_list_name() const;
  public:
  void clear_loot_list_name();
  const std::string& loot_list_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_loot_list_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_loot_list_name();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_loot_list_name();
  void set_allocated_loot_list_name(std::string* loot_list_name);
  private:
  const std::string& _internal_loot_list_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_loot_list_name(const std::string& value);
  std::string* _internal_mutable_loot_list_name();
  public:

  // optional fixed64 receiver = 1;
  bool has_receiver() const;
  private:
  bool _internal_has_receiver() const;
  public:
  void clear_receiver();
  ::PROTOBUF_NAMESPACE_ID::uint64 receiver() const;
  void set_receiver(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_receiver() const;
  void _internal_set_receiver(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDevDebugRollLootRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr loot_list_name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 receiver_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgIncrementKillCountAttribute final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgIncrementKillCountAttribute) */ {
 public:
  inline CMsgIncrementKillCountAttribute() : CMsgIncrementKillCountAttribute(nullptr) {}
  ~CMsgIncrementKillCountAttribute() override;
  explicit constexpr CMsgIncrementKillCountAttribute(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgIncrementKillCountAttribute(const CMsgIncrementKillCountAttribute& from);
  CMsgIncrementKillCountAttribute(CMsgIncrementKillCountAttribute&& from) noexcept
    : CMsgIncrementKillCountAttribute() {
    *this = ::std::move(from);
  }

  inline CMsgIncrementKillCountAttribute& operator=(const CMsgIncrementKillCountAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgIncrementKillCountAttribute& operator=(CMsgIncrementKillCountAttribute&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgIncrementKillCountAttribute& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgIncrementKillCountAttribute* internal_default_instance() {
    return reinterpret_cast<const CMsgIncrementKillCountAttribute*>(
               &_CMsgIncrementKillCountAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgIncrementKillCountAttribute& a, CMsgIncrementKillCountAttribute& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgIncrementKillCountAttribute* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgIncrementKillCountAttribute* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgIncrementKillCountAttribute* New() const final {
    return new CMsgIncrementKillCountAttribute();
  }

  CMsgIncrementKillCountAttribute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgIncrementKillCountAttribute>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgIncrementKillCountAttribute& from);
  void MergeFrom(const CMsgIncrementKillCountAttribute& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgIncrementKillCountAttribute* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgIncrementKillCountAttribute";
  }
  protected:
  explicit CMsgIncrementKillCountAttribute(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKillerSteamIdFieldNumber = 1,
    kVictimSteamIdFieldNumber = 2,
    kItemIdFieldNumber = 3,
    kEventTypeFieldNumber = 4,
    kIncrementValueFieldNumber = 5,
  };
  // optional uint64 killer_steam_id = 1;
  bool has_killer_steam_id() const;
  private:
  bool _internal_has_killer_steam_id() const;
  public:
  void clear_killer_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 killer_steam_id() const;
  void set_killer_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_killer_steam_id() const;
  void _internal_set_killer_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 victim_steam_id = 2;
  bool has_victim_steam_id() const;
  private:
  bool _internal_has_victim_steam_id() const;
  public:
  void clear_victim_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 victim_steam_id() const;
  void set_victim_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_victim_steam_id() const;
  void _internal_set_victim_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 item_id = 3;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 event_type = 4;
  bool has_event_type() const;
  private:
  bool _internal_has_event_type() const;
  public:
  void clear_event_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_type() const;
  void set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_type() const;
  void _internal_set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 increment_value = 5;
  bool has_increment_value() const;
  private:
  bool _internal_has_increment_value() const;
  public:
  void clear_increment_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 increment_value() const;
  void set_increment_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_increment_value() const;
  void _internal_set_increment_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgIncrementKillCountAttribute)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 killer_steam_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 victim_steam_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 increment_value_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgIncrementKillCountAttribute_Multiple final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgIncrementKillCountAttribute_Multiple) */ {
 public:
  inline CMsgIncrementKillCountAttribute_Multiple() : CMsgIncrementKillCountAttribute_Multiple(nullptr) {}
  ~CMsgIncrementKillCountAttribute_Multiple() override;
  explicit constexpr CMsgIncrementKillCountAttribute_Multiple(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgIncrementKillCountAttribute_Multiple(const CMsgIncrementKillCountAttribute_Multiple& from);
  CMsgIncrementKillCountAttribute_Multiple(CMsgIncrementKillCountAttribute_Multiple&& from) noexcept
    : CMsgIncrementKillCountAttribute_Multiple() {
    *this = ::std::move(from);
  }

  inline CMsgIncrementKillCountAttribute_Multiple& operator=(const CMsgIncrementKillCountAttribute_Multiple& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgIncrementKillCountAttribute_Multiple& operator=(CMsgIncrementKillCountAttribute_Multiple&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgIncrementKillCountAttribute_Multiple& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgIncrementKillCountAttribute_Multiple* internal_default_instance() {
    return reinterpret_cast<const CMsgIncrementKillCountAttribute_Multiple*>(
               &_CMsgIncrementKillCountAttribute_Multiple_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CMsgIncrementKillCountAttribute_Multiple& a, CMsgIncrementKillCountAttribute_Multiple& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgIncrementKillCountAttribute_Multiple* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgIncrementKillCountAttribute_Multiple* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgIncrementKillCountAttribute_Multiple* New() const final {
    return new CMsgIncrementKillCountAttribute_Multiple();
  }

  CMsgIncrementKillCountAttribute_Multiple* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgIncrementKillCountAttribute_Multiple>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgIncrementKillCountAttribute_Multiple& from);
  void MergeFrom(const CMsgIncrementKillCountAttribute_Multiple& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgIncrementKillCountAttribute_Multiple* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgIncrementKillCountAttribute_Multiple";
  }
  protected:
  explicit CMsgIncrementKillCountAttribute_Multiple(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgsFieldNumber = 1,
  };
  // repeated .CMsgIncrementKillCountAttribute msgs = 1;
  int msgs_size() const;
  private:
  int _internal_msgs_size() const;
  public:
  void clear_msgs();
  ::CMsgIncrementKillCountAttribute* mutable_msgs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgIncrementKillCountAttribute >*
      mutable_msgs();
  private:
  const ::CMsgIncrementKillCountAttribute& _internal_msgs(int index) const;
  ::CMsgIncrementKillCountAttribute* _internal_add_msgs();
  public:
  const ::CMsgIncrementKillCountAttribute& msgs(int index) const;
  ::CMsgIncrementKillCountAttribute* add_msgs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgIncrementKillCountAttribute >&
      msgs() const;

  // @@protoc_insertion_point(class_scope:CMsgIncrementKillCountAttribute_Multiple)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgIncrementKillCountAttribute > msgs_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgTrackUniquePlayerPairEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgTrackUniquePlayerPairEvent) */ {
 public:
  inline CMsgTrackUniquePlayerPairEvent() : CMsgTrackUniquePlayerPairEvent(nullptr) {}
  ~CMsgTrackUniquePlayerPairEvent() override;
  explicit constexpr CMsgTrackUniquePlayerPairEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgTrackUniquePlayerPairEvent(const CMsgTrackUniquePlayerPairEvent& from);
  CMsgTrackUniquePlayerPairEvent(CMsgTrackUniquePlayerPairEvent&& from) noexcept
    : CMsgTrackUniquePlayerPairEvent() {
    *this = ::std::move(from);
  }

  inline CMsgTrackUniquePlayerPairEvent& operator=(const CMsgTrackUniquePlayerPairEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgTrackUniquePlayerPairEvent& operator=(CMsgTrackUniquePlayerPairEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgTrackUniquePlayerPairEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgTrackUniquePlayerPairEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgTrackUniquePlayerPairEvent*>(
               &_CMsgTrackUniquePlayerPairEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMsgTrackUniquePlayerPairEvent& a, CMsgTrackUniquePlayerPairEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgTrackUniquePlayerPairEvent* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgTrackUniquePlayerPairEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgTrackUniquePlayerPairEvent* New() const final {
    return new CMsgTrackUniquePlayerPairEvent();
  }

  CMsgTrackUniquePlayerPairEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTrackUniquePlayerPairEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgTrackUniquePlayerPairEvent& from);
  void MergeFrom(const CMsgTrackUniquePlayerPairEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTrackUniquePlayerPairEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgTrackUniquePlayerPairEvent";
  }
  protected:
  explicit CMsgTrackUniquePlayerPairEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKillerSteamIdFieldNumber = 1,
    kVictimSteamIdFieldNumber = 2,
    kItemIdFieldNumber = 3,
    kEventTypeFieldNumber = 4,
  };
  // optional uint64 killer_steam_id = 1;
  bool has_killer_steam_id() const;
  private:
  bool _internal_has_killer_steam_id() const;
  public:
  void clear_killer_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 killer_steam_id() const;
  void set_killer_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_killer_steam_id() const;
  void _internal_set_killer_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 victim_steam_id = 2;
  bool has_victim_steam_id() const;
  private:
  bool _internal_has_victim_steam_id() const;
  public:
  void clear_victim_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 victim_steam_id() const;
  void set_victim_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_victim_steam_id() const;
  void _internal_set_victim_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 item_id = 3;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 event_type = 4;
  bool has_event_type() const;
  private:
  bool _internal_has_event_type() const;
  public:
  void clear_event_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_type() const;
  void set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_type() const;
  void _internal_set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgTrackUniquePlayerPairEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 killer_steam_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 victim_steam_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_type_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgApplyStrangeCountTransfer final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyStrangeCountTransfer) */ {
 public:
  inline CMsgApplyStrangeCountTransfer() : CMsgApplyStrangeCountTransfer(nullptr) {}
  ~CMsgApplyStrangeCountTransfer() override;
  explicit constexpr CMsgApplyStrangeCountTransfer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyStrangeCountTransfer(const CMsgApplyStrangeCountTransfer& from);
  CMsgApplyStrangeCountTransfer(CMsgApplyStrangeCountTransfer&& from) noexcept
    : CMsgApplyStrangeCountTransfer() {
    *this = ::std::move(from);
  }

  inline CMsgApplyStrangeCountTransfer& operator=(const CMsgApplyStrangeCountTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyStrangeCountTransfer& operator=(CMsgApplyStrangeCountTransfer&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyStrangeCountTransfer& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyStrangeCountTransfer* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyStrangeCountTransfer*>(
               &_CMsgApplyStrangeCountTransfer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgApplyStrangeCountTransfer& a, CMsgApplyStrangeCountTransfer& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyStrangeCountTransfer* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyStrangeCountTransfer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgApplyStrangeCountTransfer* New() const final {
    return new CMsgApplyStrangeCountTransfer();
  }

  CMsgApplyStrangeCountTransfer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgApplyStrangeCountTransfer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgApplyStrangeCountTransfer& from);
  void MergeFrom(const CMsgApplyStrangeCountTransfer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyStrangeCountTransfer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyStrangeCountTransfer";
  }
  protected:
  explicit CMsgApplyStrangeCountTransfer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToolItemIdFieldNumber = 1,
    kItemSrcItemIdFieldNumber = 2,
    kItemDestItemIdFieldNumber = 3,
  };
  // optional uint64 tool_item_id = 1;
  bool has_tool_item_id() const;
  private:
  bool _internal_has_tool_item_id() const;
  public:
  void clear_tool_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 tool_item_id() const;
  void set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tool_item_id() const;
  void _internal_set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 item_src_item_id = 2;
  bool has_item_src_item_id() const;
  private:
  bool _internal_has_item_src_item_id() const;
  public:
  void clear_item_src_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_src_item_id() const;
  void set_item_src_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_src_item_id() const;
  void _internal_set_item_src_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 item_dest_item_id = 3;
  bool has_item_dest_item_id() const;
  private:
  bool _internal_has_item_dest_item_id() const;
  public:
  void clear_item_dest_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_dest_item_id() const;
  void set_item_dest_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_dest_item_id() const;
  void _internal_set_item_dest_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgApplyStrangeCountTransfer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tool_item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_src_item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_dest_item_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgApplyStrangePart final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyStrangePart) */ {
 public:
  inline CMsgApplyStrangePart() : CMsgApplyStrangePart(nullptr) {}
  ~CMsgApplyStrangePart() override;
  explicit constexpr CMsgApplyStrangePart(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyStrangePart(const CMsgApplyStrangePart& from);
  CMsgApplyStrangePart(CMsgApplyStrangePart&& from) noexcept
    : CMsgApplyStrangePart() {
    *this = ::std::move(from);
  }

  inline CMsgApplyStrangePart& operator=(const CMsgApplyStrangePart& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyStrangePart& operator=(CMsgApplyStrangePart&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyStrangePart& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyStrangePart* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyStrangePart*>(
               &_CMsgApplyStrangePart_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgApplyStrangePart& a, CMsgApplyStrangePart& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyStrangePart* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyStrangePart* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgApplyStrangePart* New() const final {
    return new CMsgApplyStrangePart();
  }

  CMsgApplyStrangePart* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgApplyStrangePart>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgApplyStrangePart& from);
  void MergeFrom(const CMsgApplyStrangePart& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyStrangePart* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyStrangePart";
  }
  protected:
  explicit CMsgApplyStrangePart(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrangePartItemIdFieldNumber = 1,
    kItemItemIdFieldNumber = 2,
  };
  // optional uint64 strange_part_item_id = 1;
  bool has_strange_part_item_id() const;
  private:
  bool _internal_has_strange_part_item_id() const;
  public:
  void clear_strange_part_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 strange_part_item_id() const;
  void set_strange_part_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_strange_part_item_id() const;
  void _internal_set_strange_part_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 item_item_id = 2;
  bool has_item_item_id() const;
  private:
  bool _internal_has_item_item_id() const;
  public:
  void clear_item_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_item_id() const;
  void set_item_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_item_id() const;
  void _internal_set_item_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgApplyStrangePart)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 strange_part_item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_item_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgApplyStrangeRestriction final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyStrangeRestriction) */ {
 public:
  inline CMsgApplyStrangeRestriction() : CMsgApplyStrangeRestriction(nullptr) {}
  ~CMsgApplyStrangeRestriction() override;
  explicit constexpr CMsgApplyStrangeRestriction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyStrangeRestriction(const CMsgApplyStrangeRestriction& from);
  CMsgApplyStrangeRestriction(CMsgApplyStrangeRestriction&& from) noexcept
    : CMsgApplyStrangeRestriction() {
    *this = ::std::move(from);
  }

  inline CMsgApplyStrangeRestriction& operator=(const CMsgApplyStrangeRestriction& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyStrangeRestriction& operator=(CMsgApplyStrangeRestriction&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyStrangeRestriction& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyStrangeRestriction* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyStrangeRestriction*>(
               &_CMsgApplyStrangeRestriction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgApplyStrangeRestriction& a, CMsgApplyStrangeRestriction& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyStrangeRestriction* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyStrangeRestriction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgApplyStrangeRestriction* New() const final {
    return new CMsgApplyStrangeRestriction();
  }

  CMsgApplyStrangeRestriction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgApplyStrangeRestriction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgApplyStrangeRestriction& from);
  void MergeFrom(const CMsgApplyStrangeRestriction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyStrangeRestriction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyStrangeRestriction";
  }
  protected:
  explicit CMsgApplyStrangeRestriction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrangePartItemIdFieldNumber = 1,
    kItemItemIdFieldNumber = 2,
    kStrangeAttrIndexFieldNumber = 3,
  };
  // optional uint64 strange_part_item_id = 1;
  bool has_strange_part_item_id() const;
  private:
  bool _internal_has_strange_part_item_id() const;
  public:
  void clear_strange_part_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 strange_part_item_id() const;
  void set_strange_part_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_strange_part_item_id() const;
  void _internal_set_strange_part_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 item_item_id = 2;
  bool has_item_item_id() const;
  private:
  bool _internal_has_item_item_id() const;
  public:
  void clear_item_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_item_id() const;
  void set_item_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_item_id() const;
  void _internal_set_item_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 strange_attr_index = 3;
  bool has_strange_attr_index() const;
  private:
  bool _internal_has_strange_attr_index() const;
  public:
  void clear_strange_attr_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 strange_attr_index() const;
  void set_strange_attr_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_strange_attr_index() const;
  void _internal_set_strange_attr_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgApplyStrangeRestriction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 strange_part_item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 strange_attr_index_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgApplyUpgradeCard final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyUpgradeCard) */ {
 public:
  inline CMsgApplyUpgradeCard() : CMsgApplyUpgradeCard(nullptr) {}
  ~CMsgApplyUpgradeCard() override;
  explicit constexpr CMsgApplyUpgradeCard(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyUpgradeCard(const CMsgApplyUpgradeCard& from);
  CMsgApplyUpgradeCard(CMsgApplyUpgradeCard&& from) noexcept
    : CMsgApplyUpgradeCard() {
    *this = ::std::move(from);
  }

  inline CMsgApplyUpgradeCard& operator=(const CMsgApplyUpgradeCard& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyUpgradeCard& operator=(CMsgApplyUpgradeCard&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyUpgradeCard& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyUpgradeCard* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyUpgradeCard*>(
               &_CMsgApplyUpgradeCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMsgApplyUpgradeCard& a, CMsgApplyUpgradeCard& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyUpgradeCard* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyUpgradeCard* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgApplyUpgradeCard* New() const final {
    return new CMsgApplyUpgradeCard();
  }

  CMsgApplyUpgradeCard* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgApplyUpgradeCard>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgApplyUpgradeCard& from);
  void MergeFrom(const CMsgApplyUpgradeCard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyUpgradeCard* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyUpgradeCard";
  }
  protected:
  explicit CMsgApplyUpgradeCard(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUpgradeCardItemIdFieldNumber = 1,
    kSubjectItemIdFieldNumber = 2,
  };
  // optional uint64 upgrade_card_item_id = 1;
  bool has_upgrade_card_item_id() const;
  private:
  bool _internal_has_upgrade_card_item_id() const;
  public:
  void clear_upgrade_card_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 upgrade_card_item_id() const;
  void set_upgrade_card_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_upgrade_card_item_id() const;
  void _internal_set_upgrade_card_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 subject_item_id = 2;
  bool has_subject_item_id() const;
  private:
  bool _internal_has_subject_item_id() const;
  public:
  void clear_subject_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 subject_item_id() const;
  void set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_subject_item_id() const;
  void _internal_set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgApplyUpgradeCard)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 upgrade_card_item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 subject_item_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CSOEconItemAttribute final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOEconItemAttribute) */ {
 public:
  inline CSOEconItemAttribute() : CSOEconItemAttribute(nullptr) {}
  ~CSOEconItemAttribute() override;
  explicit constexpr CSOEconItemAttribute(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOEconItemAttribute(const CSOEconItemAttribute& from);
  CSOEconItemAttribute(CSOEconItemAttribute&& from) noexcept
    : CSOEconItemAttribute() {
    *this = ::std::move(from);
  }

  inline CSOEconItemAttribute& operator=(const CSOEconItemAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOEconItemAttribute& operator=(CSOEconItemAttribute&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOEconItemAttribute& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOEconItemAttribute* internal_default_instance() {
    return reinterpret_cast<const CSOEconItemAttribute*>(
               &_CSOEconItemAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CSOEconItemAttribute& a, CSOEconItemAttribute& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOEconItemAttribute* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOEconItemAttribute* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSOEconItemAttribute* New() const final {
    return new CSOEconItemAttribute();
  }

  CSOEconItemAttribute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSOEconItemAttribute>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSOEconItemAttribute& from);
  void MergeFrom(const CSOEconItemAttribute& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOEconItemAttribute* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOEconItemAttribute";
  }
  protected:
  explicit CSOEconItemAttribute(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueBytesFieldNumber = 3,
    kDefIndexFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional bytes value_bytes = 3;
  bool has_value_bytes() const;
  private:
  bool _internal_has_value_bytes() const;
  public:
  void clear_value_bytes();
  const std::string& value_bytes() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_bytes(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_bytes();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_value_bytes();
  void set_allocated_value_bytes(std::string* value_bytes);
  private:
  const std::string& _internal_value_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_bytes(const std::string& value);
  std::string* _internal_mutable_value_bytes();
  public:

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  private:
  bool _internal_has_def_index() const;
  public:
  void clear_def_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 def_index() const;
  void set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_def_index() const;
  void _internal_set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CSOEconItemAttribute)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_bytes_;
  ::PROTOBUF_NAMESPACE_ID::uint32 def_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CSOEconItemEquipped final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOEconItemEquipped) */ {
 public:
  inline CSOEconItemEquipped() : CSOEconItemEquipped(nullptr) {}
  ~CSOEconItemEquipped() override;
  explicit constexpr CSOEconItemEquipped(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOEconItemEquipped(const CSOEconItemEquipped& from);
  CSOEconItemEquipped(CSOEconItemEquipped&& from) noexcept
    : CSOEconItemEquipped() {
    *this = ::std::move(from);
  }

  inline CSOEconItemEquipped& operator=(const CSOEconItemEquipped& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOEconItemEquipped& operator=(CSOEconItemEquipped&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOEconItemEquipped& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOEconItemEquipped* internal_default_instance() {
    return reinterpret_cast<const CSOEconItemEquipped*>(
               &_CSOEconItemEquipped_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CSOEconItemEquipped& a, CSOEconItemEquipped& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOEconItemEquipped* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOEconItemEquipped* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSOEconItemEquipped* New() const final {
    return new CSOEconItemEquipped();
  }

  CSOEconItemEquipped* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSOEconItemEquipped>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSOEconItemEquipped& from);
  void MergeFrom(const CSOEconItemEquipped& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOEconItemEquipped* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOEconItemEquipped";
  }
  protected:
  explicit CSOEconItemEquipped(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNewClassFieldNumber = 1,
    kNewSlotFieldNumber = 2,
  };
  // optional uint32 new_class = 1;
  bool has_new_class() const;
  private:
  bool _internal_has_new_class() const;
  public:
  void clear_new_class();
  ::PROTOBUF_NAMESPACE_ID::uint32 new_class() const;
  void set_new_class(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_new_class() const;
  void _internal_set_new_class(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 new_slot = 2;
  bool has_new_slot() const;
  private:
  bool _internal_has_new_slot() const;
  public:
  void clear_new_slot();
  ::PROTOBUF_NAMESPACE_ID::uint32 new_slot() const;
  void set_new_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_new_slot() const;
  void _internal_set_new_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CSOEconItemEquipped)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 new_class_;
  ::PROTOBUF_NAMESPACE_ID::uint32 new_slot_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CSOEconItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOEconItem) */ {
 public:
  inline CSOEconItem() : CSOEconItem(nullptr) {}
  ~CSOEconItem() override;
  explicit constexpr CSOEconItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOEconItem(const CSOEconItem& from);
  CSOEconItem(CSOEconItem&& from) noexcept
    : CSOEconItem() {
    *this = ::std::move(from);
  }

  inline CSOEconItem& operator=(const CSOEconItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOEconItem& operator=(CSOEconItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOEconItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOEconItem* internal_default_instance() {
    return reinterpret_cast<const CSOEconItem*>(
               &_CSOEconItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CSOEconItem& a, CSOEconItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOEconItem* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOEconItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSOEconItem* New() const final {
    return new CSOEconItem();
  }

  CSOEconItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSOEconItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSOEconItem& from);
  void MergeFrom(const CSOEconItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOEconItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOEconItem";
  }
  protected:
  explicit CSOEconItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributeFieldNumber = 12,
    kEquippedStateFieldNumber = 18,
    kCustomNameFieldNumber = 10,
    kCustomDescFieldNumber = 11,
    kInteriorItemFieldNumber = 13,
    kIdFieldNumber = 1,
    kAccountIdFieldNumber = 2,
    kInventoryFieldNumber = 3,
    kDefIndexFieldNumber = 4,
    kQuantityFieldNumber = 5,
    kLevelFieldNumber = 6,
    kQualityFieldNumber = 7,
    kFlagsFieldNumber = 8,
    kOriginFieldNumber = 9,
    kOriginalIdFieldNumber = 16,
    kStyleFieldNumber = 15,
    kInUseFieldNumber = 14,
    kContainsEquippedStateFieldNumber = 17,
    kContainsEquippedStateV2FieldNumber = 19,
  };
  // repeated .CSOEconItemAttribute attribute = 12;
  int attribute_size() const;
  private:
  int _internal_attribute_size() const;
  public:
  void clear_attribute();
  ::CSOEconItemAttribute* mutable_attribute(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemAttribute >*
      mutable_attribute();
  private:
  const ::CSOEconItemAttribute& _internal_attribute(int index) const;
  ::CSOEconItemAttribute* _internal_add_attribute();
  public:
  const ::CSOEconItemAttribute& attribute(int index) const;
  ::CSOEconItemAttribute* add_attribute();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemAttribute >&
      attribute() const;

  // repeated .CSOEconItemEquipped equipped_state = 18;
  int equipped_state_size() const;
  private:
  int _internal_equipped_state_size() const;
  public:
  void clear_equipped_state();
  ::CSOEconItemEquipped* mutable_equipped_state(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemEquipped >*
      mutable_equipped_state();
  private:
  const ::CSOEconItemEquipped& _internal_equipped_state(int index) const;
  ::CSOEconItemEquipped* _internal_add_equipped_state();
  public:
  const ::CSOEconItemEquipped& equipped_state(int index) const;
  ::CSOEconItemEquipped* add_equipped_state();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemEquipped >&
      equipped_state() const;

  // optional string custom_name = 10;
  bool has_custom_name() const;
  private:
  bool _internal_has_custom_name() const;
  public:
  void clear_custom_name();
  const std::string& custom_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_custom_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_custom_name();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_custom_name();
  void set_allocated_custom_name(std::string* custom_name);
  private:
  const std::string& _internal_custom_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_name(const std::string& value);
  std::string* _internal_mutable_custom_name();
  public:

  // optional string custom_desc = 11;
  bool has_custom_desc() const;
  private:
  bool _internal_has_custom_desc() const;
  public:
  void clear_custom_desc();
  const std::string& custom_desc() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_custom_desc(ArgT0&& arg0, ArgT... args);
  std::string* mutable_custom_desc();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_custom_desc();
  void set_allocated_custom_desc(std::string* custom_desc);
  private:
  const std::string& _internal_custom_desc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_desc(const std::string& value);
  std::string* _internal_mutable_custom_desc();
  public:

  // optional .CSOEconItem interior_item = 13;
  bool has_interior_item() const;
  private:
  bool _internal_has_interior_item() const;
  public:
  void clear_interior_item();
  const ::CSOEconItem& interior_item() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::CSOEconItem* release_interior_item();
  ::CSOEconItem* mutable_interior_item();
  void set_allocated_interior_item(::CSOEconItem* interior_item);
  private:
  const ::CSOEconItem& _internal_interior_item() const;
  ::CSOEconItem* _internal_mutable_interior_item();
  public:
  void unsafe_arena_set_allocated_interior_item(
      ::CSOEconItem* interior_item);
  ::CSOEconItem* unsafe_arena_release_interior_item();

  // optional uint64 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 inventory = 3;
  bool has_inventory() const;
  private:
  bool _internal_has_inventory() const;
  public:
  void clear_inventory();
  ::PROTOBUF_NAMESPACE_ID::uint32 inventory() const;
  void set_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_inventory() const;
  void _internal_set_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 def_index = 4;
  bool has_def_index() const;
  private:
  bool _internal_has_def_index() const;
  public:
  void clear_def_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 def_index() const;
  void set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_def_index() const;
  void _internal_set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 quantity = 5;
  bool has_quantity() const;
  private:
  bool _internal_has_quantity() const;
  public:
  void clear_quantity();
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity() const;
  void set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quantity() const;
  void _internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 6;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 quality = 7;
  bool has_quality() const;
  private:
  bool _internal_has_quality() const;
  public:
  void clear_quality();
  ::PROTOBUF_NAMESPACE_ID::uint32 quality() const;
  void set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quality() const;
  void _internal_set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 flags = 8 [default = 0];
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flags() const;
  void _internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 origin = 9;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  ::PROTOBUF_NAMESPACE_ID::uint32 origin() const;
  void set_origin(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_origin() const;
  void _internal_set_origin(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 original_id = 16 [default = 0];
  bool has_original_id() const;
  private:
  bool _internal_has_original_id() const;
  public:
  void clear_original_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 original_id() const;
  void set_original_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_original_id() const;
  void _internal_set_original_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 style = 15 [default = 0];
  bool has_style() const;
  private:
  bool _internal_has_style() const;
  public:
  void clear_style();
  ::PROTOBUF_NAMESPACE_ID::uint32 style() const;
  void set_style(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_style() const;
  void _internal_set_style(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool in_use = 14 [default = false];
  bool has_in_use() const;
  private:
  bool _internal_has_in_use() const;
  public:
  void clear_in_use();
  bool in_use() const;
  void set_in_use(bool value);
  private:
  bool _internal_in_use() const;
  void _internal_set_in_use(bool value);
  public:

  // optional bool contains_equipped_state = 17;
  bool has_contains_equipped_state() const;
  private:
  bool _internal_has_contains_equipped_state() const;
  public:
  void clear_contains_equipped_state();
  bool contains_equipped_state() const;
  void set_contains_equipped_state(bool value);
  private:
  bool _internal_contains_equipped_state() const;
  void _internal_set_contains_equipped_state(bool value);
  public:

  // optional bool contains_equipped_state_v2 = 19;
  bool has_contains_equipped_state_v2() const;
  private:
  bool _internal_has_contains_equipped_state_v2() const;
  public:
  void clear_contains_equipped_state_v2();
  bool contains_equipped_state_v2() const;
  void set_contains_equipped_state_v2(bool value);
  private:
  bool _internal_contains_equipped_state_v2() const;
  void _internal_set_contains_equipped_state_v2(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CSOEconItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemAttribute > attribute_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemEquipped > equipped_state_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr custom_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr custom_desc_;
  ::CSOEconItem* interior_item_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 inventory_;
  ::PROTOBUF_NAMESPACE_ID::uint32 def_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quality_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flags_;
  ::PROTOBUF_NAMESPACE_ID::uint32 origin_;
  ::PROTOBUF_NAMESPACE_ID::uint64 original_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 style_;
  bool in_use_;
  bool contains_equipped_state_;
  bool contains_equipped_state_v2_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgAdjustItemEquippedState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAdjustItemEquippedState) */ {
 public:
  inline CMsgAdjustItemEquippedState() : CMsgAdjustItemEquippedState(nullptr) {}
  ~CMsgAdjustItemEquippedState() override;
  explicit constexpr CMsgAdjustItemEquippedState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAdjustItemEquippedState(const CMsgAdjustItemEquippedState& from);
  CMsgAdjustItemEquippedState(CMsgAdjustItemEquippedState&& from) noexcept
    : CMsgAdjustItemEquippedState() {
    *this = ::std::move(from);
  }

  inline CMsgAdjustItemEquippedState& operator=(const CMsgAdjustItemEquippedState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAdjustItemEquippedState& operator=(CMsgAdjustItemEquippedState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAdjustItemEquippedState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAdjustItemEquippedState* internal_default_instance() {
    return reinterpret_cast<const CMsgAdjustItemEquippedState*>(
               &_CMsgAdjustItemEquippedState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CMsgAdjustItemEquippedState& a, CMsgAdjustItemEquippedState& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAdjustItemEquippedState* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAdjustItemEquippedState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgAdjustItemEquippedState* New() const final {
    return new CMsgAdjustItemEquippedState();
  }

  CMsgAdjustItemEquippedState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAdjustItemEquippedState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgAdjustItemEquippedState& from);
  void MergeFrom(const CMsgAdjustItemEquippedState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAdjustItemEquippedState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAdjustItemEquippedState";
  }
  protected:
  explicit CMsgAdjustItemEquippedState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kNewClassFieldNumber = 2,
    kNewSlotFieldNumber = 3,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 new_class = 2;
  bool has_new_class() const;
  private:
  bool _internal_has_new_class() const;
  public:
  void clear_new_class();
  ::PROTOBUF_NAMESPACE_ID::uint32 new_class() const;
  void set_new_class(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_new_class() const;
  void _internal_set_new_class(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 new_slot = 3;
  bool has_new_slot() const;
  private:
  bool _internal_has_new_slot() const;
  public:
  void clear_new_slot();
  ::PROTOBUF_NAMESPACE_ID::uint32 new_slot() const;
  void set_new_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_new_slot() const;
  void _internal_set_new_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAdjustItemEquippedState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 new_class_;
  ::PROTOBUF_NAMESPACE_ID::uint32 new_slot_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgSortItems final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSortItems) */ {
 public:
  inline CMsgSortItems() : CMsgSortItems(nullptr) {}
  ~CMsgSortItems() override;
  explicit constexpr CMsgSortItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSortItems(const CMsgSortItems& from);
  CMsgSortItems(CMsgSortItems&& from) noexcept
    : CMsgSortItems() {
    *this = ::std::move(from);
  }

  inline CMsgSortItems& operator=(const CMsgSortItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSortItems& operator=(CMsgSortItems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSortItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSortItems* internal_default_instance() {
    return reinterpret_cast<const CMsgSortItems*>(
               &_CMsgSortItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMsgSortItems& a, CMsgSortItems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSortItems* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSortItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSortItems* New() const final {
    return new CMsgSortItems();
  }

  CMsgSortItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSortItems>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSortItems& from);
  void MergeFrom(const CMsgSortItems& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSortItems* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSortItems";
  }
  protected:
  explicit CMsgSortItems(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSortTypeFieldNumber = 1,
  };
  // optional uint32 sort_type = 1;
  bool has_sort_type() const;
  private:
  bool _internal_has_sort_type() const;
  public:
  void clear_sort_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 sort_type() const;
  void set_sort_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sort_type() const;
  void _internal_set_sort_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSortItems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sort_type_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CSOEconClaimCode final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOEconClaimCode) */ {
 public:
  inline CSOEconClaimCode() : CSOEconClaimCode(nullptr) {}
  ~CSOEconClaimCode() override;
  explicit constexpr CSOEconClaimCode(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOEconClaimCode(const CSOEconClaimCode& from);
  CSOEconClaimCode(CSOEconClaimCode&& from) noexcept
    : CSOEconClaimCode() {
    *this = ::std::move(from);
  }

  inline CSOEconClaimCode& operator=(const CSOEconClaimCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOEconClaimCode& operator=(CSOEconClaimCode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOEconClaimCode& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOEconClaimCode* internal_default_instance() {
    return reinterpret_cast<const CSOEconClaimCode*>(
               &_CSOEconClaimCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CSOEconClaimCode& a, CSOEconClaimCode& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOEconClaimCode* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOEconClaimCode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSOEconClaimCode* New() const final {
    return new CSOEconClaimCode();
  }

  CSOEconClaimCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSOEconClaimCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSOEconClaimCode& from);
  void MergeFrom(const CSOEconClaimCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOEconClaimCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOEconClaimCode";
  }
  protected:
  explicit CSOEconClaimCode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 4,
    kAccountIdFieldNumber = 1,
    kCodeTypeFieldNumber = 2,
    kTimeAcquiredFieldNumber = 3,
  };
  // optional string code = 4;
  bool has_code() const;
  private:
  bool _internal_has_code() const;
  public:
  void clear_code();
  const std::string& code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_code();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_code();
  void set_allocated_code(std::string* code);
  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(const std::string& value);
  std::string* _internal_mutable_code();
  public:

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 code_type = 2;
  bool has_code_type() const;
  private:
  bool _internal_has_code_type() const;
  public:
  void clear_code_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 code_type() const;
  void set_code_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_code_type() const;
  void _internal_set_code_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 time_acquired = 3;
  bool has_time_acquired() const;
  private:
  bool _internal_has_time_acquired() const;
  public:
  void clear_time_acquired();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_acquired() const;
  void set_time_acquired(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_acquired() const;
  void _internal_set_time_acquired(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CSOEconClaimCode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr code_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 code_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_acquired_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgStoreGetUserData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgStoreGetUserData) */ {
 public:
  inline CMsgStoreGetUserData() : CMsgStoreGetUserData(nullptr) {}
  ~CMsgStoreGetUserData() override;
  explicit constexpr CMsgStoreGetUserData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgStoreGetUserData(const CMsgStoreGetUserData& from);
  CMsgStoreGetUserData(CMsgStoreGetUserData&& from) noexcept
    : CMsgStoreGetUserData() {
    *this = ::std::move(from);
  }

  inline CMsgStoreGetUserData& operator=(const CMsgStoreGetUserData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgStoreGetUserData& operator=(CMsgStoreGetUserData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgStoreGetUserData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgStoreGetUserData* internal_default_instance() {
    return reinterpret_cast<const CMsgStoreGetUserData*>(
               &_CMsgStoreGetUserData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CMsgStoreGetUserData& a, CMsgStoreGetUserData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgStoreGetUserData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgStoreGetUserData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgStoreGetUserData* New() const final {
    return new CMsgStoreGetUserData();
  }

  CMsgStoreGetUserData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgStoreGetUserData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgStoreGetUserData& from);
  void MergeFrom(const CMsgStoreGetUserData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgStoreGetUserData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgStoreGetUserData";
  }
  protected:
  explicit CMsgStoreGetUserData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPriceSheetVersionFieldNumber = 1,
  };
  // optional fixed32 price_sheet_version = 1;
  bool has_price_sheet_version() const;
  private:
  bool _internal_has_price_sheet_version() const;
  public:
  void clear_price_sheet_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 price_sheet_version() const;
  void set_price_sheet_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_price_sheet_version() const;
  void _internal_set_price_sheet_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgStoreGetUserData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 price_sheet_version_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgStoreGetUserDataResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgStoreGetUserDataResponse) */ {
 public:
  inline CMsgStoreGetUserDataResponse() : CMsgStoreGetUserDataResponse(nullptr) {}
  ~CMsgStoreGetUserDataResponse() override;
  explicit constexpr CMsgStoreGetUserDataResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgStoreGetUserDataResponse(const CMsgStoreGetUserDataResponse& from);
  CMsgStoreGetUserDataResponse(CMsgStoreGetUserDataResponse&& from) noexcept
    : CMsgStoreGetUserDataResponse() {
    *this = ::std::move(from);
  }

  inline CMsgStoreGetUserDataResponse& operator=(const CMsgStoreGetUserDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgStoreGetUserDataResponse& operator=(CMsgStoreGetUserDataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgStoreGetUserDataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgStoreGetUserDataResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgStoreGetUserDataResponse*>(
               &_CMsgStoreGetUserDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CMsgStoreGetUserDataResponse& a, CMsgStoreGetUserDataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgStoreGetUserDataResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgStoreGetUserDataResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgStoreGetUserDataResponse* New() const final {
    return new CMsgStoreGetUserDataResponse();
  }

  CMsgStoreGetUserDataResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgStoreGetUserDataResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgStoreGetUserDataResponse& from);
  void MergeFrom(const CMsgStoreGetUserDataResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgStoreGetUserDataResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgStoreGetUserDataResponse";
  }
  protected:
  explicit CMsgStoreGetUserDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPopularItemsFieldNumber = 10,
    kCountryFieldNumber = 3,
    kPriceSheetFieldNumber = 8,
    kResultFieldNumber = 1,
    kCurrencyFieldNumber = 2,
    kExperimentDataFieldNumber = 5,
    kPriceSheetVersionFieldNumber = 4,
    kFeaturedItemIdxFieldNumber = 6,
    kDefaultItemSortFieldNumber = 9,
    kShowHatDescriptionsFieldNumber = 7,
  };
  // repeated uint32 popular_items = 10;
  int popular_items_size() const;
  private:
  int _internal_popular_items_size() const;
  public:
  void clear_popular_items();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_popular_items(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_popular_items() const;
  void _internal_add_popular_items(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_popular_items();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 popular_items(int index) const;
  void set_popular_items(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_popular_items(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      popular_items() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_popular_items();

  // optional string country = 3;
  bool has_country() const;
  private:
  bool _internal_has_country() const;
  public:
  void clear_country();
  const std::string& country() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_country(ArgT0&& arg0, ArgT... args);
  std::string* mutable_country();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_country();
  void set_allocated_country(std::string* country);
  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(const std::string& value);
  std::string* _internal_mutable_country();
  public:

  // optional bytes price_sheet = 8;
  bool has_price_sheet() const;
  private:
  bool _internal_has_price_sheet() const;
  public:
  void clear_price_sheet();
  const std::string& price_sheet() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_price_sheet(ArgT0&& arg0, ArgT... args);
  std::string* mutable_price_sheet();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_price_sheet();
  void set_allocated_price_sheet(std::string* price_sheet);
  private:
  const std::string& _internal_price_sheet() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_price_sheet(const std::string& value);
  std::string* _internal_mutable_price_sheet();
  public:

  // optional int32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::int32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 currency = 2;
  bool has_currency() const;
  private:
  bool _internal_has_currency() const;
  public:
  void clear_currency();
  ::PROTOBUF_NAMESPACE_ID::int32 currency() const;
  void set_currency(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_currency() const;
  void _internal_set_currency(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint64 experiment_data = 5 [default = 0];
  bool has_experiment_data() const;
  private:
  bool _internal_has_experiment_data() const;
  public:
  void clear_experiment_data();
  ::PROTOBUF_NAMESPACE_ID::uint64 experiment_data() const;
  void set_experiment_data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_experiment_data() const;
  void _internal_set_experiment_data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed32 price_sheet_version = 4;
  bool has_price_sheet_version() const;
  private:
  bool _internal_has_price_sheet_version() const;
  public:
  void clear_price_sheet_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 price_sheet_version() const;
  void set_price_sheet_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_price_sheet_version() const;
  void _internal_set_price_sheet_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 featured_item_idx = 6;
  bool has_featured_item_idx() const;
  private:
  bool _internal_has_featured_item_idx() const;
  public:
  void clear_featured_item_idx();
  ::PROTOBUF_NAMESPACE_ID::int32 featured_item_idx() const;
  void set_featured_item_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_featured_item_idx() const;
  void _internal_set_featured_item_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 default_item_sort = 9 [default = 0];
  bool has_default_item_sort() const;
  private:
  bool _internal_has_default_item_sort() const;
  public:
  void clear_default_item_sort();
  ::PROTOBUF_NAMESPACE_ID::int32 default_item_sort() const;
  void set_default_item_sort(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_default_item_sort() const;
  void _internal_set_default_item_sort(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool show_hat_descriptions = 7 [default = true];
  bool has_show_hat_descriptions() const;
  private:
  bool _internal_has_show_hat_descriptions() const;
  public:
  void clear_show_hat_descriptions();
  bool show_hat_descriptions() const;
  void set_show_hat_descriptions(bool value);
  private:
  bool _internal_show_hat_descriptions() const;
  void _internal_set_show_hat_descriptions(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgStoreGetUserDataResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > popular_items_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr country_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr price_sheet_;
  ::PROTOBUF_NAMESPACE_ID::int32 result_;
  ::PROTOBUF_NAMESPACE_ID::int32 currency_;
  ::PROTOBUF_NAMESPACE_ID::uint64 experiment_data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 price_sheet_version_;
  ::PROTOBUF_NAMESPACE_ID::int32 featured_item_idx_;
  ::PROTOBUF_NAMESPACE_ID::int32 default_item_sort_;
  bool show_hat_descriptions_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgUpdateItemSchema final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgUpdateItemSchema) */ {
 public:
  inline CMsgUpdateItemSchema() : CMsgUpdateItemSchema(nullptr) {}
  ~CMsgUpdateItemSchema() override;
  explicit constexpr CMsgUpdateItemSchema(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgUpdateItemSchema(const CMsgUpdateItemSchema& from);
  CMsgUpdateItemSchema(CMsgUpdateItemSchema&& from) noexcept
    : CMsgUpdateItemSchema() {
    *this = ::std::move(from);
  }

  inline CMsgUpdateItemSchema& operator=(const CMsgUpdateItemSchema& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgUpdateItemSchema& operator=(CMsgUpdateItemSchema&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgUpdateItemSchema& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgUpdateItemSchema* internal_default_instance() {
    return reinterpret_cast<const CMsgUpdateItemSchema*>(
               &_CMsgUpdateItemSchema_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CMsgUpdateItemSchema& a, CMsgUpdateItemSchema& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgUpdateItemSchema* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgUpdateItemSchema* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgUpdateItemSchema* New() const final {
    return new CMsgUpdateItemSchema();
  }

  CMsgUpdateItemSchema* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgUpdateItemSchema>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgUpdateItemSchema& from);
  void MergeFrom(const CMsgUpdateItemSchema& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgUpdateItemSchema* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgUpdateItemSchema";
  }
  protected:
  explicit CMsgUpdateItemSchema(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsGameFieldNumber = 1,
    kItemsGameUrlFieldNumber = 3,
    kSignatureFieldNumber = 4,
    kItemSchemaVersionFieldNumber = 2,
  };
  // optional bytes items_game = 1;
  bool has_items_game() const;
  private:
  bool _internal_has_items_game() const;
  public:
  void clear_items_game();
  const std::string& items_game() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_items_game(ArgT0&& arg0, ArgT... args);
  std::string* mutable_items_game();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_items_game();
  void set_allocated_items_game(std::string* items_game);
  private:
  const std::string& _internal_items_game() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_items_game(const std::string& value);
  std::string* _internal_mutable_items_game();
  public:

  // optional string items_game_url = 3;
  bool has_items_game_url() const;
  private:
  bool _internal_has_items_game_url() const;
  public:
  void clear_items_game_url();
  const std::string& items_game_url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_items_game_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_items_game_url();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_items_game_url();
  void set_allocated_items_game_url(std::string* items_game_url);
  private:
  const std::string& _internal_items_game_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_items_game_url(const std::string& value);
  std::string* _internal_mutable_items_game_url();
  public:

  // optional bytes signature = 4;
  bool has_signature() const;
  private:
  bool _internal_has_signature() const;
  public:
  void clear_signature();
  const std::string& signature() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_signature(ArgT0&& arg0, ArgT... args);
  std::string* mutable_signature();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // optional fixed32 item_schema_version = 2;
  bool has_item_schema_version() const;
  private:
  bool _internal_has_item_schema_version() const;
  public:
  void clear_item_schema_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_schema_version() const;
  void set_item_schema_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_schema_version() const;
  void _internal_set_item_schema_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgUpdateItemSchema)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr items_game_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr items_game_url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_schema_version_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCError final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCError) */ {
 public:
  inline CMsgGCError() : CMsgGCError(nullptr) {}
  ~CMsgGCError() override;
  explicit constexpr CMsgGCError(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCError(const CMsgGCError& from);
  CMsgGCError(CMsgGCError&& from) noexcept
    : CMsgGCError() {
    *this = ::std::move(from);
  }

  inline CMsgGCError& operator=(const CMsgGCError& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCError& operator=(CMsgGCError&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCError& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCError* internal_default_instance() {
    return reinterpret_cast<const CMsgGCError*>(
               &_CMsgGCError_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CMsgGCError& a, CMsgGCError& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCError* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCError* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCError* New() const final {
    return new CMsgGCError();
  }

  CMsgGCError* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCError>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCError& from);
  void MergeFrom(const CMsgGCError& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCError* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCError";
  }
  protected:
  explicit CMsgGCError(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorTextFieldNumber = 1,
  };
  // optional string error_text = 1;
  bool has_error_text() const;
  private:
  bool _internal_has_error_text() const;
  public:
  void clear_error_text();
  const std::string& error_text() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_error_text(ArgT0&& arg0, ArgT... args);
  std::string* mutable_error_text();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_error_text();
  void set_allocated_error_text(std::string* error_text);
  private:
  const std::string& _internal_error_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_text(const std::string& value);
  std::string* _internal_mutable_error_text();
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCError)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_text_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgRequestInventoryRefresh final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgRequestInventoryRefresh) */ {
 public:
  inline CMsgRequestInventoryRefresh() : CMsgRequestInventoryRefresh(nullptr) {}
  ~CMsgRequestInventoryRefresh() override;
  explicit constexpr CMsgRequestInventoryRefresh(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgRequestInventoryRefresh(const CMsgRequestInventoryRefresh& from);
  CMsgRequestInventoryRefresh(CMsgRequestInventoryRefresh&& from) noexcept
    : CMsgRequestInventoryRefresh() {
    *this = ::std::move(from);
  }

  inline CMsgRequestInventoryRefresh& operator=(const CMsgRequestInventoryRefresh& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgRequestInventoryRefresh& operator=(CMsgRequestInventoryRefresh&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgRequestInventoryRefresh& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgRequestInventoryRefresh* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestInventoryRefresh*>(
               &_CMsgRequestInventoryRefresh_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CMsgRequestInventoryRefresh& a, CMsgRequestInventoryRefresh& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgRequestInventoryRefresh* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgRequestInventoryRefresh* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgRequestInventoryRefresh* New() const final {
    return new CMsgRequestInventoryRefresh();
  }

  CMsgRequestInventoryRefresh* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgRequestInventoryRefresh>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgRequestInventoryRefresh& from);
  void MergeFrom(const CMsgRequestInventoryRefresh& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRequestInventoryRefresh* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgRequestInventoryRefresh";
  }
  protected:
  explicit CMsgRequestInventoryRefresh(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgRequestInventoryRefresh)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgConVarValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgConVarValue) */ {
 public:
  inline CMsgConVarValue() : CMsgConVarValue(nullptr) {}
  ~CMsgConVarValue() override;
  explicit constexpr CMsgConVarValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgConVarValue(const CMsgConVarValue& from);
  CMsgConVarValue(CMsgConVarValue&& from) noexcept
    : CMsgConVarValue() {
    *this = ::std::move(from);
  }

  inline CMsgConVarValue& operator=(const CMsgConVarValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgConVarValue& operator=(CMsgConVarValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgConVarValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgConVarValue* internal_default_instance() {
    return reinterpret_cast<const CMsgConVarValue*>(
               &_CMsgConVarValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CMsgConVarValue& a, CMsgConVarValue& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgConVarValue* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgConVarValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgConVarValue* New() const final {
    return new CMsgConVarValue();
  }

  CMsgConVarValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgConVarValue>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgConVarValue& from);
  void MergeFrom(const CMsgConVarValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgConVarValue* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgConVarValue";
  }
  protected:
  explicit CMsgConVarValue(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const std::string& value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:CMsgConVarValue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgReplicateConVars final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgReplicateConVars) */ {
 public:
  inline CMsgReplicateConVars() : CMsgReplicateConVars(nullptr) {}
  ~CMsgReplicateConVars() override;
  explicit constexpr CMsgReplicateConVars(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgReplicateConVars(const CMsgReplicateConVars& from);
  CMsgReplicateConVars(CMsgReplicateConVars&& from) noexcept
    : CMsgReplicateConVars() {
    *this = ::std::move(from);
  }

  inline CMsgReplicateConVars& operator=(const CMsgReplicateConVars& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgReplicateConVars& operator=(CMsgReplicateConVars&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgReplicateConVars& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgReplicateConVars* internal_default_instance() {
    return reinterpret_cast<const CMsgReplicateConVars*>(
               &_CMsgReplicateConVars_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CMsgReplicateConVars& a, CMsgReplicateConVars& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgReplicateConVars* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgReplicateConVars* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgReplicateConVars* New() const final {
    return new CMsgReplicateConVars();
  }

  CMsgReplicateConVars* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgReplicateConVars>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgReplicateConVars& from);
  void MergeFrom(const CMsgReplicateConVars& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgReplicateConVars* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgReplicateConVars";
  }
  protected:
  explicit CMsgReplicateConVars(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConvarsFieldNumber = 1,
  };
  // repeated .CMsgConVarValue convars = 1;
  int convars_size() const;
  private:
  int _internal_convars_size() const;
  public:
  void clear_convars();
  ::CMsgConVarValue* mutable_convars(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgConVarValue >*
      mutable_convars();
  private:
  const ::CMsgConVarValue& _internal_convars(int index) const;
  ::CMsgConVarValue* _internal_add_convars();
  public:
  const ::CMsgConVarValue& convars(int index) const;
  ::CMsgConVarValue* add_convars();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgConVarValue >&
      convars() const;

  // @@protoc_insertion_point(class_scope:CMsgReplicateConVars)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgConVarValue > convars_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgUseItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgUseItem) */ {
 public:
  inline CMsgUseItem() : CMsgUseItem(nullptr) {}
  ~CMsgUseItem() override;
  explicit constexpr CMsgUseItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgUseItem(const CMsgUseItem& from);
  CMsgUseItem(CMsgUseItem&& from) noexcept
    : CMsgUseItem() {
    *this = ::std::move(from);
  }

  inline CMsgUseItem& operator=(const CMsgUseItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgUseItem& operator=(CMsgUseItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgUseItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgUseItem* internal_default_instance() {
    return reinterpret_cast<const CMsgUseItem*>(
               &_CMsgUseItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CMsgUseItem& a, CMsgUseItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgUseItem* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgUseItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgUseItem* New() const final {
    return new CMsgUseItem();
  }

  CMsgUseItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgUseItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgUseItem& from);
  void MergeFrom(const CMsgUseItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgUseItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgUseItem";
  }
  protected:
  explicit CMsgUseItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGiftPotentialTargetsFieldNumber = 3,
    kItemIdFieldNumber = 1,
    kTargetSteamIdFieldNumber = 2,
    kInitiatorSteamIdFieldNumber = 5,
    kDuelClassLockFieldNumber = 4,
    kItempackAckImmediatelyFieldNumber = 6,
  };
  // repeated uint32 gift__potential_targets = 3;
  int gift__potential_targets_size() const;
  private:
  int _internal_gift__potential_targets_size() const;
  public:
  void clear_gift__potential_targets();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gift__potential_targets(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_gift__potential_targets() const;
  void _internal_add_gift__potential_targets(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_gift__potential_targets();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 gift__potential_targets(int index) const;
  void set_gift__potential_targets(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_gift__potential_targets(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      gift__potential_targets() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_gift__potential_targets();

  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 target_steam_id = 2;
  bool has_target_steam_id() const;
  private:
  bool _internal_has_target_steam_id() const;
  public:
  void clear_target_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 target_steam_id() const;
  void set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_target_steam_id() const;
  void _internal_set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 initiator_steam_id = 5;
  bool has_initiator_steam_id() const;
  private:
  bool _internal_has_initiator_steam_id() const;
  public:
  void clear_initiator_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 initiator_steam_id() const;
  void set_initiator_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_initiator_steam_id() const;
  void _internal_set_initiator_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 duel__class_lock = 4;
  bool has_duel__class_lock() const;
  private:
  bool _internal_has_duel__class_lock() const;
  public:
  void clear_duel__class_lock();
  ::PROTOBUF_NAMESPACE_ID::uint32 duel__class_lock() const;
  void set_duel__class_lock(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_duel__class_lock() const;
  void _internal_set_duel__class_lock(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool itempack__ack_immediately = 6;
  bool has_itempack__ack_immediately() const;
  private:
  bool _internal_has_itempack__ack_immediately() const;
  public:
  void clear_itempack__ack_immediately();
  bool itempack__ack_immediately() const;
  void set_itempack__ack_immediately(bool value);
  private:
  bool _internal_itempack__ack_immediately() const;
  void _internal_set_itempack__ack_immediately(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgUseItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > gift__potential_targets_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 target_steam_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 initiator_steam_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duel__class_lock_;
  bool itempack__ack_immediately_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgReplayUploadedToYouTube final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgReplayUploadedToYouTube) */ {
 public:
  inline CMsgReplayUploadedToYouTube() : CMsgReplayUploadedToYouTube(nullptr) {}
  ~CMsgReplayUploadedToYouTube() override;
  explicit constexpr CMsgReplayUploadedToYouTube(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgReplayUploadedToYouTube(const CMsgReplayUploadedToYouTube& from);
  CMsgReplayUploadedToYouTube(CMsgReplayUploadedToYouTube&& from) noexcept
    : CMsgReplayUploadedToYouTube() {
    *this = ::std::move(from);
  }

  inline CMsgReplayUploadedToYouTube& operator=(const CMsgReplayUploadedToYouTube& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgReplayUploadedToYouTube& operator=(CMsgReplayUploadedToYouTube&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgReplayUploadedToYouTube& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgReplayUploadedToYouTube* internal_default_instance() {
    return reinterpret_cast<const CMsgReplayUploadedToYouTube*>(
               &_CMsgReplayUploadedToYouTube_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CMsgReplayUploadedToYouTube& a, CMsgReplayUploadedToYouTube& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgReplayUploadedToYouTube* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgReplayUploadedToYouTube* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgReplayUploadedToYouTube* New() const final {
    return new CMsgReplayUploadedToYouTube();
  }

  CMsgReplayUploadedToYouTube* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgReplayUploadedToYouTube>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgReplayUploadedToYouTube& from);
  void MergeFrom(const CMsgReplayUploadedToYouTube& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgReplayUploadedToYouTube* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgReplayUploadedToYouTube";
  }
  protected:
  explicit CMsgReplayUploadedToYouTube(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kYoutubeUrlFieldNumber = 1,
    kYoutubeAccountNameFieldNumber = 2,
    kSessionIdFieldNumber = 3,
  };
  // optional string youtube_url = 1;
  bool has_youtube_url() const;
  private:
  bool _internal_has_youtube_url() const;
  public:
  void clear_youtube_url();
  const std::string& youtube_url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_youtube_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_youtube_url();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_youtube_url();
  void set_allocated_youtube_url(std::string* youtube_url);
  private:
  const std::string& _internal_youtube_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_youtube_url(const std::string& value);
  std::string* _internal_mutable_youtube_url();
  public:

  // optional string youtube_account_name = 2;
  bool has_youtube_account_name() const;
  private:
  bool _internal_has_youtube_account_name() const;
  public:
  void clear_youtube_account_name();
  const std::string& youtube_account_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_youtube_account_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_youtube_account_name();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_youtube_account_name();
  void set_allocated_youtube_account_name(std::string* youtube_account_name);
  private:
  const std::string& _internal_youtube_account_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_youtube_account_name(const std::string& value);
  std::string* _internal_mutable_youtube_account_name();
  public:

  // optional uint64 session_id = 3;
  bool has_session_id() const;
  private:
  bool _internal_has_session_id() const;
  public:
  void clear_session_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 session_id() const;
  void set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_session_id() const;
  void _internal_set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgReplayUploadedToYouTube)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr youtube_url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr youtube_account_name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 session_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgConsumableExhausted final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgConsumableExhausted) */ {
 public:
  inline CMsgConsumableExhausted() : CMsgConsumableExhausted(nullptr) {}
  ~CMsgConsumableExhausted() override;
  explicit constexpr CMsgConsumableExhausted(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgConsumableExhausted(const CMsgConsumableExhausted& from);
  CMsgConsumableExhausted(CMsgConsumableExhausted&& from) noexcept
    : CMsgConsumableExhausted() {
    *this = ::std::move(from);
  }

  inline CMsgConsumableExhausted& operator=(const CMsgConsumableExhausted& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgConsumableExhausted& operator=(CMsgConsumableExhausted&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgConsumableExhausted& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgConsumableExhausted* internal_default_instance() {
    return reinterpret_cast<const CMsgConsumableExhausted*>(
               &_CMsgConsumableExhausted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CMsgConsumableExhausted& a, CMsgConsumableExhausted& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgConsumableExhausted* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgConsumableExhausted* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgConsumableExhausted* New() const final {
    return new CMsgConsumableExhausted();
  }

  CMsgConsumableExhausted* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgConsumableExhausted>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgConsumableExhausted& from);
  void MergeFrom(const CMsgConsumableExhausted& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgConsumableExhausted* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgConsumableExhausted";
  }
  protected:
  explicit CMsgConsumableExhausted(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDefIdFieldNumber = 1,
  };
  // optional int32 item_def_id = 1;
  bool has_item_def_id() const;
  private:
  bool _internal_has_item_def_id() const;
  public:
  void clear_item_def_id();
  ::PROTOBUF_NAMESPACE_ID::int32 item_def_id() const;
  void set_item_def_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_def_id() const;
  void _internal_set_item_def_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgConsumableExhausted)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_def_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgItemAcknowledged final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgItemAcknowledged) */ {
 public:
  inline CMsgItemAcknowledged() : CMsgItemAcknowledged(nullptr) {}
  ~CMsgItemAcknowledged() override;
  explicit constexpr CMsgItemAcknowledged(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgItemAcknowledged(const CMsgItemAcknowledged& from);
  CMsgItemAcknowledged(CMsgItemAcknowledged&& from) noexcept
    : CMsgItemAcknowledged() {
    *this = ::std::move(from);
  }

  inline CMsgItemAcknowledged& operator=(const CMsgItemAcknowledged& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgItemAcknowledged& operator=(CMsgItemAcknowledged&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgItemAcknowledged& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgItemAcknowledged* internal_default_instance() {
    return reinterpret_cast<const CMsgItemAcknowledged*>(
               &_CMsgItemAcknowledged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CMsgItemAcknowledged& a, CMsgItemAcknowledged& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgItemAcknowledged* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgItemAcknowledged* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgItemAcknowledged* New() const final {
    return new CMsgItemAcknowledged();
  }

  CMsgItemAcknowledged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgItemAcknowledged>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgItemAcknowledged& from);
  void MergeFrom(const CMsgItemAcknowledged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgItemAcknowledged* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgItemAcknowledged";
  }
  protected:
  explicit CMsgItemAcknowledged(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kInventoryFieldNumber = 2,
    kDefIndexFieldNumber = 3,
    kQualityFieldNumber = 4,
    kRarityFieldNumber = 5,
    kOriginFieldNumber = 6,
    kIsStrangeFieldNumber = 7,
    kIsUnusualFieldNumber = 8,
    kWearFieldNumber = 9,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 inventory = 2;
  bool has_inventory() const;
  private:
  bool _internal_has_inventory() const;
  public:
  void clear_inventory();
  ::PROTOBUF_NAMESPACE_ID::uint32 inventory() const;
  void set_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_inventory() const;
  void _internal_set_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 def_index = 3;
  bool has_def_index() const;
  private:
  bool _internal_has_def_index() const;
  public:
  void clear_def_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 def_index() const;
  void set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_def_index() const;
  void _internal_set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 quality = 4;
  bool has_quality() const;
  private:
  bool _internal_has_quality() const;
  public:
  void clear_quality();
  ::PROTOBUF_NAMESPACE_ID::uint32 quality() const;
  void set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quality() const;
  void _internal_set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rarity = 5;
  bool has_rarity() const;
  private:
  bool _internal_has_rarity() const;
  public:
  void clear_rarity();
  ::PROTOBUF_NAMESPACE_ID::uint32 rarity() const;
  void set_rarity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rarity() const;
  void _internal_set_rarity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 origin = 6;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  ::PROTOBUF_NAMESPACE_ID::uint32 origin() const;
  void set_origin(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_origin() const;
  void _internal_set_origin(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 is_strange = 7;
  bool has_is_strange() const;
  private:
  bool _internal_has_is_strange() const;
  public:
  void clear_is_strange();
  ::PROTOBUF_NAMESPACE_ID::uint32 is_strange() const;
  void set_is_strange(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_is_strange() const;
  void _internal_set_is_strange(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 is_unusual = 8;
  bool has_is_unusual() const;
  private:
  bool _internal_has_is_unusual() const;
  public:
  void clear_is_unusual();
  ::PROTOBUF_NAMESPACE_ID::uint32 is_unusual() const;
  void set_is_unusual(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_is_unusual() const;
  void _internal_set_is_unusual(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float wear = 9;
  bool has_wear() const;
  private:
  bool _internal_has_wear() const;
  public:
  void clear_wear();
  float wear() const;
  void set_wear(float value);
  private:
  float _internal_wear() const;
  void _internal_set_wear(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgItemAcknowledged)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 inventory_;
  ::PROTOBUF_NAMESPACE_ID::uint32 def_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quality_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rarity_;
  ::PROTOBUF_NAMESPACE_ID::uint32 origin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 is_strange_;
  ::PROTOBUF_NAMESPACE_ID::uint32 is_unusual_;
  float wear_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgSetPresetItemPosition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSetPresetItemPosition) */ {
 public:
  inline CMsgSetPresetItemPosition() : CMsgSetPresetItemPosition(nullptr) {}
  ~CMsgSetPresetItemPosition() override;
  explicit constexpr CMsgSetPresetItemPosition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSetPresetItemPosition(const CMsgSetPresetItemPosition& from);
  CMsgSetPresetItemPosition(CMsgSetPresetItemPosition&& from) noexcept
    : CMsgSetPresetItemPosition() {
    *this = ::std::move(from);
  }

  inline CMsgSetPresetItemPosition& operator=(const CMsgSetPresetItemPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSetPresetItemPosition& operator=(CMsgSetPresetItemPosition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSetPresetItemPosition& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSetPresetItemPosition* internal_default_instance() {
    return reinterpret_cast<const CMsgSetPresetItemPosition*>(
               &_CMsgSetPresetItemPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CMsgSetPresetItemPosition& a, CMsgSetPresetItemPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSetPresetItemPosition* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSetPresetItemPosition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSetPresetItemPosition* New() const final {
    return new CMsgSetPresetItemPosition();
  }

  CMsgSetPresetItemPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSetPresetItemPosition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSetPresetItemPosition& from);
  void MergeFrom(const CMsgSetPresetItemPosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSetPresetItemPosition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSetPresetItemPosition";
  }
  protected:
  explicit CMsgSetPresetItemPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassIdFieldNumber = 1,
    kPresetIdFieldNumber = 2,
    kItemIdFieldNumber = 4,
    kSlotIdFieldNumber = 3,
  };
  // optional uint32 class_id = 1;
  bool has_class_id() const;
  private:
  bool _internal_has_class_id() const;
  public:
  void clear_class_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 class_id() const;
  void set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_class_id() const;
  void _internal_set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 preset_id = 2;
  bool has_preset_id() const;
  private:
  bool _internal_has_preset_id() const;
  public:
  void clear_preset_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 preset_id() const;
  void set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preset_id() const;
  void _internal_set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 item_id = 4;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 slot_id = 3;
  bool has_slot_id() const;
  private:
  bool _internal_has_slot_id() const;
  public:
  void clear_slot_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 slot_id() const;
  void set_slot_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slot_id() const;
  void _internal_set_slot_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSetPresetItemPosition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 class_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preset_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slot_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgSetItemPositions_ItemPosition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSetItemPositions.ItemPosition) */ {
 public:
  inline CMsgSetItemPositions_ItemPosition() : CMsgSetItemPositions_ItemPosition(nullptr) {}
  ~CMsgSetItemPositions_ItemPosition() override;
  explicit constexpr CMsgSetItemPositions_ItemPosition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSetItemPositions_ItemPosition(const CMsgSetItemPositions_ItemPosition& from);
  CMsgSetItemPositions_ItemPosition(CMsgSetItemPositions_ItemPosition&& from) noexcept
    : CMsgSetItemPositions_ItemPosition() {
    *this = ::std::move(from);
  }

  inline CMsgSetItemPositions_ItemPosition& operator=(const CMsgSetItemPositions_ItemPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSetItemPositions_ItemPosition& operator=(CMsgSetItemPositions_ItemPosition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSetItemPositions_ItemPosition& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSetItemPositions_ItemPosition* internal_default_instance() {
    return reinterpret_cast<const CMsgSetItemPositions_ItemPosition*>(
               &_CMsgSetItemPositions_ItemPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CMsgSetItemPositions_ItemPosition& a, CMsgSetItemPositions_ItemPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSetItemPositions_ItemPosition* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSetItemPositions_ItemPosition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSetItemPositions_ItemPosition* New() const final {
    return new CMsgSetItemPositions_ItemPosition();
  }

  CMsgSetItemPositions_ItemPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSetItemPositions_ItemPosition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSetItemPositions_ItemPosition& from);
  void MergeFrom(const CMsgSetItemPositions_ItemPosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSetItemPositions_ItemPosition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSetItemPositions.ItemPosition";
  }
  protected:
  explicit CMsgSetItemPositions_ItemPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kPositionFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 position = 2;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  ::PROTOBUF_NAMESPACE_ID::uint32 position() const;
  void set_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_position() const;
  void _internal_set_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSetItemPositions.ItemPosition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 position_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgSetItemPositions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSetItemPositions) */ {
 public:
  inline CMsgSetItemPositions() : CMsgSetItemPositions(nullptr) {}
  ~CMsgSetItemPositions() override;
  explicit constexpr CMsgSetItemPositions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSetItemPositions(const CMsgSetItemPositions& from);
  CMsgSetItemPositions(CMsgSetItemPositions&& from) noexcept
    : CMsgSetItemPositions() {
    *this = ::std::move(from);
  }

  inline CMsgSetItemPositions& operator=(const CMsgSetItemPositions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSetItemPositions& operator=(CMsgSetItemPositions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSetItemPositions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSetItemPositions* internal_default_instance() {
    return reinterpret_cast<const CMsgSetItemPositions*>(
               &_CMsgSetItemPositions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CMsgSetItemPositions& a, CMsgSetItemPositions& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSetItemPositions* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSetItemPositions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSetItemPositions* New() const final {
    return new CMsgSetItemPositions();
  }

  CMsgSetItemPositions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSetItemPositions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSetItemPositions& from);
  void MergeFrom(const CMsgSetItemPositions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSetItemPositions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSetItemPositions";
  }
  protected:
  explicit CMsgSetItemPositions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSetItemPositions_ItemPosition ItemPosition;

  // accessors -------------------------------------------------------

  enum : int {
    kItemPositionsFieldNumber = 1,
  };
  // repeated .CMsgSetItemPositions.ItemPosition item_positions = 1;
  int item_positions_size() const;
  private:
  int _internal_item_positions_size() const;
  public:
  void clear_item_positions();
  ::CMsgSetItemPositions_ItemPosition* mutable_item_positions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSetItemPositions_ItemPosition >*
      mutable_item_positions();
  private:
  const ::CMsgSetItemPositions_ItemPosition& _internal_item_positions(int index) const;
  ::CMsgSetItemPositions_ItemPosition* _internal_add_item_positions();
  public:
  const ::CMsgSetItemPositions_ItemPosition& item_positions(int index) const;
  ::CMsgSetItemPositions_ItemPosition* add_item_positions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSetItemPositions_ItemPosition >&
      item_positions() const;

  // @@protoc_insertion_point(class_scope:CMsgSetItemPositions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSetItemPositions_ItemPosition > item_positions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CSOEconItemPresetInstance final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOEconItemPresetInstance) */ {
 public:
  inline CSOEconItemPresetInstance() : CSOEconItemPresetInstance(nullptr) {}
  ~CSOEconItemPresetInstance() override;
  explicit constexpr CSOEconItemPresetInstance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOEconItemPresetInstance(const CSOEconItemPresetInstance& from);
  CSOEconItemPresetInstance(CSOEconItemPresetInstance&& from) noexcept
    : CSOEconItemPresetInstance() {
    *this = ::std::move(from);
  }

  inline CSOEconItemPresetInstance& operator=(const CSOEconItemPresetInstance& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOEconItemPresetInstance& operator=(CSOEconItemPresetInstance&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOEconItemPresetInstance& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOEconItemPresetInstance* internal_default_instance() {
    return reinterpret_cast<const CSOEconItemPresetInstance*>(
               &_CSOEconItemPresetInstance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CSOEconItemPresetInstance& a, CSOEconItemPresetInstance& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOEconItemPresetInstance* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOEconItemPresetInstance* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSOEconItemPresetInstance* New() const final {
    return new CSOEconItemPresetInstance();
  }

  CSOEconItemPresetInstance* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSOEconItemPresetInstance>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSOEconItemPresetInstance& from);
  void MergeFrom(const CSOEconItemPresetInstance& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOEconItemPresetInstance* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOEconItemPresetInstance";
  }
  protected:
  explicit CSOEconItemPresetInstance(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassIdFieldNumber = 2,
    kPresetIdFieldNumber = 3,
    kItemIdFieldNumber = 5,
    kSlotIdFieldNumber = 4,
  };
  // optional uint32 class_id = 2 [(.key_field) = true];
  bool has_class_id() const;
  private:
  bool _internal_has_class_id() const;
  public:
  void clear_class_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 class_id() const;
  void set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_class_id() const;
  void _internal_set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 preset_id = 3 [(.key_field) = true];
  bool has_preset_id() const;
  private:
  bool _internal_has_preset_id() const;
  public:
  void clear_preset_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 preset_id() const;
  void set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preset_id() const;
  void _internal_set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 item_id = 5;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 slot_id = 4 [(.key_field) = true];
  bool has_slot_id() const;
  private:
  bool _internal_has_slot_id() const;
  public:
  void clear_slot_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 slot_id() const;
  void set_slot_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slot_id() const;
  void _internal_set_slot_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CSOEconItemPresetInstance)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 class_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preset_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slot_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgSelectPresetForClass final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSelectPresetForClass) */ {
 public:
  inline CMsgSelectPresetForClass() : CMsgSelectPresetForClass(nullptr) {}
  ~CMsgSelectPresetForClass() override;
  explicit constexpr CMsgSelectPresetForClass(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSelectPresetForClass(const CMsgSelectPresetForClass& from);
  CMsgSelectPresetForClass(CMsgSelectPresetForClass&& from) noexcept
    : CMsgSelectPresetForClass() {
    *this = ::std::move(from);
  }

  inline CMsgSelectPresetForClass& operator=(const CMsgSelectPresetForClass& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSelectPresetForClass& operator=(CMsgSelectPresetForClass&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSelectPresetForClass& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSelectPresetForClass* internal_default_instance() {
    return reinterpret_cast<const CMsgSelectPresetForClass*>(
               &_CMsgSelectPresetForClass_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CMsgSelectPresetForClass& a, CMsgSelectPresetForClass& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSelectPresetForClass* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSelectPresetForClass* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSelectPresetForClass* New() const final {
    return new CMsgSelectPresetForClass();
  }

  CMsgSelectPresetForClass* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSelectPresetForClass>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSelectPresetForClass& from);
  void MergeFrom(const CMsgSelectPresetForClass& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSelectPresetForClass* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSelectPresetForClass";
  }
  protected:
  explicit CMsgSelectPresetForClass(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassIdFieldNumber = 1,
    kPresetIdFieldNumber = 2,
  };
  // optional uint32 class_id = 1;
  bool has_class_id() const;
  private:
  bool _internal_has_class_id() const;
  public:
  void clear_class_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 class_id() const;
  void set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_class_id() const;
  void _internal_set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 preset_id = 2;
  bool has_preset_id() const;
  private:
  bool _internal_has_preset_id() const;
  public:
  void clear_preset_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 preset_id() const;
  void set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preset_id() const;
  void _internal_set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSelectPresetForClass)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 class_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preset_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CSOClassPresetClientData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOClassPresetClientData) */ {
 public:
  inline CSOClassPresetClientData() : CSOClassPresetClientData(nullptr) {}
  ~CSOClassPresetClientData() override;
  explicit constexpr CSOClassPresetClientData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOClassPresetClientData(const CSOClassPresetClientData& from);
  CSOClassPresetClientData(CSOClassPresetClientData&& from) noexcept
    : CSOClassPresetClientData() {
    *this = ::std::move(from);
  }

  inline CSOClassPresetClientData& operator=(const CSOClassPresetClientData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOClassPresetClientData& operator=(CSOClassPresetClientData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOClassPresetClientData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOClassPresetClientData* internal_default_instance() {
    return reinterpret_cast<const CSOClassPresetClientData*>(
               &_CSOClassPresetClientData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CSOClassPresetClientData& a, CSOClassPresetClientData& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOClassPresetClientData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOClassPresetClientData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSOClassPresetClientData* New() const final {
    return new CSOClassPresetClientData();
  }

  CSOClassPresetClientData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSOClassPresetClientData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSOClassPresetClientData& from);
  void MergeFrom(const CSOClassPresetClientData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOClassPresetClientData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOClassPresetClientData";
  }
  protected:
  explicit CSOClassPresetClientData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kClassIdFieldNumber = 2,
    kActivePresetIdFieldNumber = 3,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 class_id = 2;
  bool has_class_id() const;
  private:
  bool _internal_has_class_id() const;
  public:
  void clear_class_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 class_id() const;
  void set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_class_id() const;
  void _internal_set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 active_preset_id = 3;
  bool has_active_preset_id() const;
  private:
  bool _internal_has_active_preset_id() const;
  public:
  void clear_active_preset_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 active_preset_id() const;
  void set_active_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_active_preset_id() const;
  void _internal_set_active_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CSOClassPresetClientData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 class_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 active_preset_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCReportAbuse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCReportAbuse) */ {
 public:
  inline CMsgGCReportAbuse() : CMsgGCReportAbuse(nullptr) {}
  ~CMsgGCReportAbuse() override;
  explicit constexpr CMsgGCReportAbuse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCReportAbuse(const CMsgGCReportAbuse& from);
  CMsgGCReportAbuse(CMsgGCReportAbuse&& from) noexcept
    : CMsgGCReportAbuse() {
    *this = ::std::move(from);
  }

  inline CMsgGCReportAbuse& operator=(const CMsgGCReportAbuse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCReportAbuse& operator=(CMsgGCReportAbuse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCReportAbuse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCReportAbuse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCReportAbuse*>(
               &_CMsgGCReportAbuse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CMsgGCReportAbuse& a, CMsgGCReportAbuse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCReportAbuse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCReportAbuse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCReportAbuse* New() const final {
    return new CMsgGCReportAbuse();
  }

  CMsgGCReportAbuse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCReportAbuse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCReportAbuse& from);
  void MergeFrom(const CMsgGCReportAbuse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCReportAbuse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCReportAbuse";
  }
  protected:
  explicit CMsgGCReportAbuse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDescriptionFieldNumber = 4,
    kTargetSteamIdFieldNumber = 1,
    kAbuseTypeFieldNumber = 2,
    kContentTypeFieldNumber = 3,
    kGidFieldNumber = 5,
    kTargetGameServerIpFieldNumber = 6,
    kTargetGameServerPortFieldNumber = 7,
  };
  // optional string description = 4;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_description();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // optional fixed64 target_steam_id = 1;
  bool has_target_steam_id() const;
  private:
  bool _internal_has_target_steam_id() const;
  public:
  void clear_target_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 target_steam_id() const;
  void set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_target_steam_id() const;
  void _internal_set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 abuse_type = 2;
  bool has_abuse_type() const;
  private:
  bool _internal_has_abuse_type() const;
  public:
  void clear_abuse_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 abuse_type() const;
  void set_abuse_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_abuse_type() const;
  void _internal_set_abuse_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 content_type = 3;
  bool has_content_type() const;
  private:
  bool _internal_has_content_type() const;
  public:
  void clear_content_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 content_type() const;
  void set_content_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_content_type() const;
  void _internal_set_content_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 gid = 5;
  bool has_gid() const;
  private:
  bool _internal_has_gid() const;
  public:
  void clear_gid();
  ::PROTOBUF_NAMESPACE_ID::uint64 gid() const;
  void set_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gid() const;
  void _internal_set_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed32 target_game_server_ip = 6;
  bool has_target_game_server_ip() const;
  private:
  bool _internal_has_target_game_server_ip() const;
  public:
  void clear_target_game_server_ip();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_game_server_ip() const;
  void set_target_game_server_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_game_server_ip() const;
  void _internal_set_target_game_server_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_game_server_port = 7;
  bool has_target_game_server_port() const;
  private:
  bool _internal_has_target_game_server_port() const;
  public:
  void clear_target_game_server_port();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_game_server_port() const;
  void set_target_game_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_game_server_port() const;
  void _internal_set_target_game_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCReportAbuse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::uint64 target_steam_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 abuse_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 content_type_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_game_server_ip_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_game_server_port_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCReportAbuseResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCReportAbuseResponse) */ {
 public:
  inline CMsgGCReportAbuseResponse() : CMsgGCReportAbuseResponse(nullptr) {}
  ~CMsgGCReportAbuseResponse() override;
  explicit constexpr CMsgGCReportAbuseResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCReportAbuseResponse(const CMsgGCReportAbuseResponse& from);
  CMsgGCReportAbuseResponse(CMsgGCReportAbuseResponse&& from) noexcept
    : CMsgGCReportAbuseResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCReportAbuseResponse& operator=(const CMsgGCReportAbuseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCReportAbuseResponse& operator=(CMsgGCReportAbuseResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCReportAbuseResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCReportAbuseResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCReportAbuseResponse*>(
               &_CMsgGCReportAbuseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CMsgGCReportAbuseResponse& a, CMsgGCReportAbuseResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCReportAbuseResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCReportAbuseResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCReportAbuseResponse* New() const final {
    return new CMsgGCReportAbuseResponse();
  }

  CMsgGCReportAbuseResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCReportAbuseResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCReportAbuseResponse& from);
  void MergeFrom(const CMsgGCReportAbuseResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCReportAbuseResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCReportAbuseResponse";
  }
  protected:
  explicit CMsgGCReportAbuseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorMessageFieldNumber = 3,
    kTargetSteamIdFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // optional string error_message = 3;
  bool has_error_message() const;
  private:
  bool _internal_has_error_message() const;
  public:
  void clear_error_message();
  const std::string& error_message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_error_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_error_message();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_error_message();
  void set_allocated_error_message(std::string* error_message);
  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(const std::string& value);
  std::string* _internal_mutable_error_message();
  public:

  // optional fixed64 target_steam_id = 1;
  bool has_target_steam_id() const;
  private:
  bool _internal_has_target_steam_id() const;
  public:
  void clear_target_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 target_steam_id() const;
  void set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_target_steam_id() const;
  void _internal_set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCReportAbuseResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_message_;
  ::PROTOBUF_NAMESPACE_ID::uint64 target_steam_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 result_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCNameItemNotification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCNameItemNotification) */ {
 public:
  inline CMsgGCNameItemNotification() : CMsgGCNameItemNotification(nullptr) {}
  ~CMsgGCNameItemNotification() override;
  explicit constexpr CMsgGCNameItemNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCNameItemNotification(const CMsgGCNameItemNotification& from);
  CMsgGCNameItemNotification(CMsgGCNameItemNotification&& from) noexcept
    : CMsgGCNameItemNotification() {
    *this = ::std::move(from);
  }

  inline CMsgGCNameItemNotification& operator=(const CMsgGCNameItemNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCNameItemNotification& operator=(CMsgGCNameItemNotification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCNameItemNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCNameItemNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNameItemNotification*>(
               &_CMsgGCNameItemNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CMsgGCNameItemNotification& a, CMsgGCNameItemNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCNameItemNotification* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCNameItemNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCNameItemNotification* New() const final {
    return new CMsgGCNameItemNotification();
  }

  CMsgGCNameItemNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCNameItemNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCNameItemNotification& from);
  void MergeFrom(const CMsgGCNameItemNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCNameItemNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCNameItemNotification";
  }
  protected:
  explicit CMsgGCNameItemNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemNameCustomFieldNumber = 3,
    kPlayerSteamidFieldNumber = 1,
    kItemDefIndexFieldNumber = 2,
  };
  // optional string item_name_custom = 3;
  bool has_item_name_custom() const;
  private:
  bool _internal_has_item_name_custom() const;
  public:
  void clear_item_name_custom();
  const std::string& item_name_custom() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_item_name_custom(ArgT0&& arg0, ArgT... args);
  std::string* mutable_item_name_custom();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_item_name_custom();
  void set_allocated_item_name_custom(std::string* item_name_custom);
  private:
  const std::string& _internal_item_name_custom() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_item_name_custom(const std::string& value);
  std::string* _internal_mutable_item_name_custom();
  public:

  // optional fixed64 player_steamid = 1;
  bool has_player_steamid() const;
  private:
  bool _internal_has_player_steamid() const;
  public:
  void clear_player_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 player_steamid() const;
  void set_player_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_player_steamid() const;
  void _internal_set_player_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 item_def_index = 2;
  bool has_item_def_index() const;
  private:
  bool _internal_has_item_def_index() const;
  public:
  void clear_item_def_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def_index() const;
  void set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_def_index() const;
  void _internal_set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCNameItemNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr item_name_custom_;
  ::PROTOBUF_NAMESPACE_ID::uint64 player_steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def_index_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCClientDisplayNotification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCClientDisplayNotification) */ {
 public:
  inline CMsgGCClientDisplayNotification() : CMsgGCClientDisplayNotification(nullptr) {}
  ~CMsgGCClientDisplayNotification() override;
  explicit constexpr CMsgGCClientDisplayNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCClientDisplayNotification(const CMsgGCClientDisplayNotification& from);
  CMsgGCClientDisplayNotification(CMsgGCClientDisplayNotification&& from) noexcept
    : CMsgGCClientDisplayNotification() {
    *this = ::std::move(from);
  }

  inline CMsgGCClientDisplayNotification& operator=(const CMsgGCClientDisplayNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCClientDisplayNotification& operator=(CMsgGCClientDisplayNotification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCClientDisplayNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCClientDisplayNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgGCClientDisplayNotification*>(
               &_CMsgGCClientDisplayNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CMsgGCClientDisplayNotification& a, CMsgGCClientDisplayNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCClientDisplayNotification* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCClientDisplayNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCClientDisplayNotification* New() const final {
    return new CMsgGCClientDisplayNotification();
  }

  CMsgGCClientDisplayNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCClientDisplayNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCClientDisplayNotification& from);
  void MergeFrom(const CMsgGCClientDisplayNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCClientDisplayNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCClientDisplayNotification";
  }
  protected:
  explicit CMsgGCClientDisplayNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodySubstringKeysFieldNumber = 3,
    kBodySubstringValuesFieldNumber = 4,
    kNotificationTitleLocalizationKeyFieldNumber = 1,
    kNotificationBodyLocalizationKeyFieldNumber = 2,
  };
  // repeated string body_substring_keys = 3;
  int body_substring_keys_size() const;
  private:
  int _internal_body_substring_keys_size() const;
  public:
  void clear_body_substring_keys();
  const std::string& body_substring_keys(int index) const;
  std::string* mutable_body_substring_keys(int index);
  void set_body_substring_keys(int index, const std::string& value);
  void set_body_substring_keys(int index, std::string&& value);
  void set_body_substring_keys(int index, const char* value);
  void set_body_substring_keys(int index, const char* value, size_t size);
  std::string* add_body_substring_keys();
  void add_body_substring_keys(const std::string& value);
  void add_body_substring_keys(std::string&& value);
  void add_body_substring_keys(const char* value);
  void add_body_substring_keys(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& body_substring_keys() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_body_substring_keys();
  private:
  const std::string& _internal_body_substring_keys(int index) const;
  std::string* _internal_add_body_substring_keys();
  public:

  // repeated string body_substring_values = 4;
  int body_substring_values_size() const;
  private:
  int _internal_body_substring_values_size() const;
  public:
  void clear_body_substring_values();
  const std::string& body_substring_values(int index) const;
  std::string* mutable_body_substring_values(int index);
  void set_body_substring_values(int index, const std::string& value);
  void set_body_substring_values(int index, std::string&& value);
  void set_body_substring_values(int index, const char* value);
  void set_body_substring_values(int index, const char* value, size_t size);
  std::string* add_body_substring_values();
  void add_body_substring_values(const std::string& value);
  void add_body_substring_values(std::string&& value);
  void add_body_substring_values(const char* value);
  void add_body_substring_values(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& body_substring_values() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_body_substring_values();
  private:
  const std::string& _internal_body_substring_values(int index) const;
  std::string* _internal_add_body_substring_values();
  public:

  // optional string notification_title_localization_key = 1;
  bool has_notification_title_localization_key() const;
  private:
  bool _internal_has_notification_title_localization_key() const;
  public:
  void clear_notification_title_localization_key();
  const std::string& notification_title_localization_key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_notification_title_localization_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_notification_title_localization_key();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_notification_title_localization_key();
  void set_allocated_notification_title_localization_key(std::string* notification_title_localization_key);
  private:
  const std::string& _internal_notification_title_localization_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_notification_title_localization_key(const std::string& value);
  std::string* _internal_mutable_notification_title_localization_key();
  public:

  // optional string notification_body_localization_key = 2;
  bool has_notification_body_localization_key() const;
  private:
  bool _internal_has_notification_body_localization_key() const;
  public:
  void clear_notification_body_localization_key();
  const std::string& notification_body_localization_key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_notification_body_localization_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_notification_body_localization_key();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_notification_body_localization_key();
  void set_allocated_notification_body_localization_key(std::string* notification_body_localization_key);
  private:
  const std::string& _internal_notification_body_localization_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_notification_body_localization_key(const std::string& value);
  std::string* _internal_mutable_notification_body_localization_key();
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCClientDisplayNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> body_substring_keys_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> body_substring_values_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr notification_title_localization_key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr notification_body_localization_key_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCShowItemsPickedUp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCShowItemsPickedUp) */ {
 public:
  inline CMsgGCShowItemsPickedUp() : CMsgGCShowItemsPickedUp(nullptr) {}
  ~CMsgGCShowItemsPickedUp() override;
  explicit constexpr CMsgGCShowItemsPickedUp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCShowItemsPickedUp(const CMsgGCShowItemsPickedUp& from);
  CMsgGCShowItemsPickedUp(CMsgGCShowItemsPickedUp&& from) noexcept
    : CMsgGCShowItemsPickedUp() {
    *this = ::std::move(from);
  }

  inline CMsgGCShowItemsPickedUp& operator=(const CMsgGCShowItemsPickedUp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCShowItemsPickedUp& operator=(CMsgGCShowItemsPickedUp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCShowItemsPickedUp& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCShowItemsPickedUp* internal_default_instance() {
    return reinterpret_cast<const CMsgGCShowItemsPickedUp*>(
               &_CMsgGCShowItemsPickedUp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CMsgGCShowItemsPickedUp& a, CMsgGCShowItemsPickedUp& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCShowItemsPickedUp* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCShowItemsPickedUp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCShowItemsPickedUp* New() const final {
    return new CMsgGCShowItemsPickedUp();
  }

  CMsgGCShowItemsPickedUp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCShowItemsPickedUp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCShowItemsPickedUp& from);
  void MergeFrom(const CMsgGCShowItemsPickedUp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCShowItemsPickedUp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCShowItemsPickedUp";
  }
  protected:
  explicit CMsgGCShowItemsPickedUp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerSteamidFieldNumber = 1,
  };
  // optional fixed64 player_steamid = 1;
  bool has_player_steamid() const;
  private:
  bool _internal_has_player_steamid() const;
  public:
  void clear_player_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 player_steamid() const;
  void set_player_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_player_steamid() const;
  void _internal_set_player_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCShowItemsPickedUp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 player_steamid_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgUpdatePeriodicEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgUpdatePeriodicEvent) */ {
 public:
  inline CMsgUpdatePeriodicEvent() : CMsgUpdatePeriodicEvent(nullptr) {}
  ~CMsgUpdatePeriodicEvent() override;
  explicit constexpr CMsgUpdatePeriodicEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgUpdatePeriodicEvent(const CMsgUpdatePeriodicEvent& from);
  CMsgUpdatePeriodicEvent(CMsgUpdatePeriodicEvent&& from) noexcept
    : CMsgUpdatePeriodicEvent() {
    *this = ::std::move(from);
  }

  inline CMsgUpdatePeriodicEvent& operator=(const CMsgUpdatePeriodicEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgUpdatePeriodicEvent& operator=(CMsgUpdatePeriodicEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgUpdatePeriodicEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgUpdatePeriodicEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgUpdatePeriodicEvent*>(
               &_CMsgUpdatePeriodicEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CMsgUpdatePeriodicEvent& a, CMsgUpdatePeriodicEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgUpdatePeriodicEvent* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgUpdatePeriodicEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgUpdatePeriodicEvent* New() const final {
    return new CMsgUpdatePeriodicEvent();
  }

  CMsgUpdatePeriodicEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgUpdatePeriodicEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgUpdatePeriodicEvent& from);
  void MergeFrom(const CMsgUpdatePeriodicEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgUpdatePeriodicEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgUpdatePeriodicEvent";
  }
  protected:
  explicit CMsgUpdatePeriodicEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kEventTypeFieldNumber = 2,
    kAmountFieldNumber = 3,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 event_type = 2;
  bool has_event_type() const;
  private:
  bool _internal_has_event_type() const;
  public:
  void clear_event_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_type() const;
  void set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_type() const;
  void _internal_set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 amount = 3;
  bool has_amount() const;
  private:
  bool _internal_has_amount() const;
  public:
  void clear_amount();
  ::PROTOBUF_NAMESPACE_ID::uint32 amount() const;
  void set_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_amount() const;
  void _internal_set_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgUpdatePeriodicEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 amount_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCIncrementKillCountResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCIncrementKillCountResponse) */ {
 public:
  inline CMsgGCIncrementKillCountResponse() : CMsgGCIncrementKillCountResponse(nullptr) {}
  ~CMsgGCIncrementKillCountResponse() override;
  explicit constexpr CMsgGCIncrementKillCountResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCIncrementKillCountResponse(const CMsgGCIncrementKillCountResponse& from);
  CMsgGCIncrementKillCountResponse(CMsgGCIncrementKillCountResponse&& from) noexcept
    : CMsgGCIncrementKillCountResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCIncrementKillCountResponse& operator=(const CMsgGCIncrementKillCountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCIncrementKillCountResponse& operator=(CMsgGCIncrementKillCountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCIncrementKillCountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCIncrementKillCountResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCIncrementKillCountResponse*>(
               &_CMsgGCIncrementKillCountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CMsgGCIncrementKillCountResponse& a, CMsgGCIncrementKillCountResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCIncrementKillCountResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCIncrementKillCountResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCIncrementKillCountResponse* New() const final {
    return new CMsgGCIncrementKillCountResponse();
  }

  CMsgGCIncrementKillCountResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCIncrementKillCountResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCIncrementKillCountResponse& from);
  void MergeFrom(const CMsgGCIncrementKillCountResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCIncrementKillCountResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCIncrementKillCountResponse";
  }
  protected:
  explicit CMsgGCIncrementKillCountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKillerAccountIdFieldNumber = 1,
    kNumKillsFieldNumber = 2,
    kItemDefFieldNumber = 3,
    kLevelTypeFieldNumber = 4,
  };
  // optional uint32 killer_account_id = 1 [(.key_field) = true];
  bool has_killer_account_id() const;
  private:
  bool _internal_has_killer_account_id() const;
  public:
  void clear_killer_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 killer_account_id() const;
  void set_killer_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_killer_account_id() const;
  void _internal_set_killer_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 num_kills = 2;
  bool has_num_kills() const;
  private:
  bool _internal_has_num_kills() const;
  public:
  void clear_num_kills();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_kills() const;
  void set_num_kills(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_kills() const;
  void _internal_set_num_kills(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 item_def = 3;
  bool has_item_def() const;
  private:
  bool _internal_has_item_def() const;
  public:
  void clear_item_def();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def() const;
  void set_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_def() const;
  void _internal_set_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level_type = 4;
  bool has_level_type() const;
  private:
  bool _internal_has_level_type() const;
  public:
  void clear_level_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 level_type() const;
  void set_level_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level_type() const;
  void _internal_set_level_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCIncrementKillCountResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 killer_account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_kills_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_type_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCRemoveStrangePart final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCRemoveStrangePart) */ {
 public:
  inline CMsgGCRemoveStrangePart() : CMsgGCRemoveStrangePart(nullptr) {}
  ~CMsgGCRemoveStrangePart() override;
  explicit constexpr CMsgGCRemoveStrangePart(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCRemoveStrangePart(const CMsgGCRemoveStrangePart& from);
  CMsgGCRemoveStrangePart(CMsgGCRemoveStrangePart&& from) noexcept
    : CMsgGCRemoveStrangePart() {
    *this = ::std::move(from);
  }

  inline CMsgGCRemoveStrangePart& operator=(const CMsgGCRemoveStrangePart& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCRemoveStrangePart& operator=(CMsgGCRemoveStrangePart&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCRemoveStrangePart& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCRemoveStrangePart* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRemoveStrangePart*>(
               &_CMsgGCRemoveStrangePart_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CMsgGCRemoveStrangePart& a, CMsgGCRemoveStrangePart& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCRemoveStrangePart* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCRemoveStrangePart* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRemoveStrangePart* New() const final {
    return new CMsgGCRemoveStrangePart();
  }

  CMsgGCRemoveStrangePart* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCRemoveStrangePart>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCRemoveStrangePart& from);
  void MergeFrom(const CMsgGCRemoveStrangePart& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRemoveStrangePart* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCRemoveStrangePart";
  }
  protected:
  explicit CMsgGCRemoveStrangePart(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kStrangePartScoreTypeFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 strange_part_score_type = 2;
  bool has_strange_part_score_type() const;
  private:
  bool _internal_has_strange_part_score_type() const;
  public:
  void clear_strange_part_score_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 strange_part_score_type() const;
  void set_strange_part_score_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_strange_part_score_type() const;
  void _internal_set_strange_part_score_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCRemoveStrangePart)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 strange_part_score_type_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCRemoveUpgradeCard final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCRemoveUpgradeCard) */ {
 public:
  inline CMsgGCRemoveUpgradeCard() : CMsgGCRemoveUpgradeCard(nullptr) {}
  ~CMsgGCRemoveUpgradeCard() override;
  explicit constexpr CMsgGCRemoveUpgradeCard(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCRemoveUpgradeCard(const CMsgGCRemoveUpgradeCard& from);
  CMsgGCRemoveUpgradeCard(CMsgGCRemoveUpgradeCard&& from) noexcept
    : CMsgGCRemoveUpgradeCard() {
    *this = ::std::move(from);
  }

  inline CMsgGCRemoveUpgradeCard& operator=(const CMsgGCRemoveUpgradeCard& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCRemoveUpgradeCard& operator=(CMsgGCRemoveUpgradeCard&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCRemoveUpgradeCard& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCRemoveUpgradeCard* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRemoveUpgradeCard*>(
               &_CMsgGCRemoveUpgradeCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(CMsgGCRemoveUpgradeCard& a, CMsgGCRemoveUpgradeCard& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCRemoveUpgradeCard* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCRemoveUpgradeCard* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRemoveUpgradeCard* New() const final {
    return new CMsgGCRemoveUpgradeCard();
  }

  CMsgGCRemoveUpgradeCard* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCRemoveUpgradeCard>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCRemoveUpgradeCard& from);
  void MergeFrom(const CMsgGCRemoveUpgradeCard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRemoveUpgradeCard* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCRemoveUpgradeCard";
  }
  protected:
  explicit CMsgGCRemoveUpgradeCard(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kAttributeIndexFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 attribute_index = 2;
  bool has_attribute_index() const;
  private:
  bool _internal_has_attribute_index() const;
  public:
  void clear_attribute_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 attribute_index() const;
  void set_attribute_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attribute_index() const;
  void _internal_set_attribute_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCRemoveUpgradeCard)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attribute_index_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCRemoveCustomizationAttributeSimple final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCRemoveCustomizationAttributeSimple) */ {
 public:
  inline CMsgGCRemoveCustomizationAttributeSimple() : CMsgGCRemoveCustomizationAttributeSimple(nullptr) {}
  ~CMsgGCRemoveCustomizationAttributeSimple() override;
  explicit constexpr CMsgGCRemoveCustomizationAttributeSimple(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCRemoveCustomizationAttributeSimple(const CMsgGCRemoveCustomizationAttributeSimple& from);
  CMsgGCRemoveCustomizationAttributeSimple(CMsgGCRemoveCustomizationAttributeSimple&& from) noexcept
    : CMsgGCRemoveCustomizationAttributeSimple() {
    *this = ::std::move(from);
  }

  inline CMsgGCRemoveCustomizationAttributeSimple& operator=(const CMsgGCRemoveCustomizationAttributeSimple& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCRemoveCustomizationAttributeSimple& operator=(CMsgGCRemoveCustomizationAttributeSimple&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCRemoveCustomizationAttributeSimple& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCRemoveCustomizationAttributeSimple* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRemoveCustomizationAttributeSimple*>(
               &_CMsgGCRemoveCustomizationAttributeSimple_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(CMsgGCRemoveCustomizationAttributeSimple& a, CMsgGCRemoveCustomizationAttributeSimple& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCRemoveCustomizationAttributeSimple* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCRemoveCustomizationAttributeSimple* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRemoveCustomizationAttributeSimple* New() const final {
    return new CMsgGCRemoveCustomizationAttributeSimple();
  }

  CMsgGCRemoveCustomizationAttributeSimple* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCRemoveCustomizationAttributeSimple>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCRemoveCustomizationAttributeSimple& from);
  void MergeFrom(const CMsgGCRemoveCustomizationAttributeSimple& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRemoveCustomizationAttributeSimple* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCRemoveCustomizationAttributeSimple";
  }
  protected:
  explicit CMsgGCRemoveCustomizationAttributeSimple(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCRemoveCustomizationAttributeSimple)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCResetStrangeScores final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCResetStrangeScores) */ {
 public:
  inline CMsgGCResetStrangeScores() : CMsgGCResetStrangeScores(nullptr) {}
  ~CMsgGCResetStrangeScores() override;
  explicit constexpr CMsgGCResetStrangeScores(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCResetStrangeScores(const CMsgGCResetStrangeScores& from);
  CMsgGCResetStrangeScores(CMsgGCResetStrangeScores&& from) noexcept
    : CMsgGCResetStrangeScores() {
    *this = ::std::move(from);
  }

  inline CMsgGCResetStrangeScores& operator=(const CMsgGCResetStrangeScores& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCResetStrangeScores& operator=(CMsgGCResetStrangeScores&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCResetStrangeScores& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCResetStrangeScores* internal_default_instance() {
    return reinterpret_cast<const CMsgGCResetStrangeScores*>(
               &_CMsgGCResetStrangeScores_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(CMsgGCResetStrangeScores& a, CMsgGCResetStrangeScores& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCResetStrangeScores* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCResetStrangeScores* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCResetStrangeScores* New() const final {
    return new CMsgGCResetStrangeScores();
  }

  CMsgGCResetStrangeScores* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCResetStrangeScores>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCResetStrangeScores& from);
  void MergeFrom(const CMsgGCResetStrangeScores& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCResetStrangeScores* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCResetStrangeScores";
  }
  protected:
  explicit CMsgGCResetStrangeScores(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCResetStrangeScores)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCItemPreviewItemBoughtNotification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCItemPreviewItemBoughtNotification) */ {
 public:
  inline CMsgGCItemPreviewItemBoughtNotification() : CMsgGCItemPreviewItemBoughtNotification(nullptr) {}
  ~CMsgGCItemPreviewItemBoughtNotification() override;
  explicit constexpr CMsgGCItemPreviewItemBoughtNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCItemPreviewItemBoughtNotification(const CMsgGCItemPreviewItemBoughtNotification& from);
  CMsgGCItemPreviewItemBoughtNotification(CMsgGCItemPreviewItemBoughtNotification&& from) noexcept
    : CMsgGCItemPreviewItemBoughtNotification() {
    *this = ::std::move(from);
  }

  inline CMsgGCItemPreviewItemBoughtNotification& operator=(const CMsgGCItemPreviewItemBoughtNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCItemPreviewItemBoughtNotification& operator=(CMsgGCItemPreviewItemBoughtNotification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCItemPreviewItemBoughtNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCItemPreviewItemBoughtNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemPreviewItemBoughtNotification*>(
               &_CMsgGCItemPreviewItemBoughtNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(CMsgGCItemPreviewItemBoughtNotification& a, CMsgGCItemPreviewItemBoughtNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCItemPreviewItemBoughtNotification* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCItemPreviewItemBoughtNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCItemPreviewItemBoughtNotification* New() const final {
    return new CMsgGCItemPreviewItemBoughtNotification();
  }

  CMsgGCItemPreviewItemBoughtNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCItemPreviewItemBoughtNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCItemPreviewItemBoughtNotification& from);
  void MergeFrom(const CMsgGCItemPreviewItemBoughtNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCItemPreviewItemBoughtNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCItemPreviewItemBoughtNotification";
  }
  protected:
  explicit CMsgGCItemPreviewItemBoughtNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDefIndexFieldNumber = 1,
  };
  // optional uint32 item_def_index = 1;
  bool has_item_def_index() const;
  private:
  bool _internal_has_item_def_index() const;
  public:
  void clear_item_def_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def_index() const;
  void set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_def_index() const;
  void _internal_set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCItemPreviewItemBoughtNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def_index_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCStorePurchaseCancel final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseCancel) */ {
 public:
  inline CMsgGCStorePurchaseCancel() : CMsgGCStorePurchaseCancel(nullptr) {}
  ~CMsgGCStorePurchaseCancel() override;
  explicit constexpr CMsgGCStorePurchaseCancel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseCancel(const CMsgGCStorePurchaseCancel& from);
  CMsgGCStorePurchaseCancel(CMsgGCStorePurchaseCancel&& from) noexcept
    : CMsgGCStorePurchaseCancel() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseCancel& operator=(const CMsgGCStorePurchaseCancel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseCancel& operator=(CMsgGCStorePurchaseCancel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseCancel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseCancel* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseCancel*>(
               &_CMsgGCStorePurchaseCancel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(CMsgGCStorePurchaseCancel& a, CMsgGCStorePurchaseCancel& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseCancel* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseCancel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCStorePurchaseCancel* New() const final {
    return new CMsgGCStorePurchaseCancel();
  }

  CMsgGCStorePurchaseCancel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseCancel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCStorePurchaseCancel& from);
  void MergeFrom(const CMsgGCStorePurchaseCancel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseCancel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseCancel";
  }
  protected:
  explicit CMsgGCStorePurchaseCancel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTxnIdFieldNumber = 1,
  };
  // optional uint64 txn_id = 1;
  bool has_txn_id() const;
  private:
  bool _internal_has_txn_id() const;
  public:
  void clear_txn_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 txn_id() const;
  void set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_txn_id() const;
  void _internal_set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseCancel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 txn_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCStorePurchaseCancelResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseCancelResponse) */ {
 public:
  inline CMsgGCStorePurchaseCancelResponse() : CMsgGCStorePurchaseCancelResponse(nullptr) {}
  ~CMsgGCStorePurchaseCancelResponse() override;
  explicit constexpr CMsgGCStorePurchaseCancelResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseCancelResponse(const CMsgGCStorePurchaseCancelResponse& from);
  CMsgGCStorePurchaseCancelResponse(CMsgGCStorePurchaseCancelResponse&& from) noexcept
    : CMsgGCStorePurchaseCancelResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseCancelResponse& operator=(const CMsgGCStorePurchaseCancelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseCancelResponse& operator=(CMsgGCStorePurchaseCancelResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseCancelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseCancelResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseCancelResponse*>(
               &_CMsgGCStorePurchaseCancelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(CMsgGCStorePurchaseCancelResponse& a, CMsgGCStorePurchaseCancelResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseCancelResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseCancelResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCStorePurchaseCancelResponse* New() const final {
    return new CMsgGCStorePurchaseCancelResponse();
  }

  CMsgGCStorePurchaseCancelResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseCancelResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCStorePurchaseCancelResponse& from);
  void MergeFrom(const CMsgGCStorePurchaseCancelResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseCancelResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseCancelResponse";
  }
  protected:
  explicit CMsgGCStorePurchaseCancelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional uint32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseCancelResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 result_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCStorePurchaseFinalize final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseFinalize) */ {
 public:
  inline CMsgGCStorePurchaseFinalize() : CMsgGCStorePurchaseFinalize(nullptr) {}
  ~CMsgGCStorePurchaseFinalize() override;
  explicit constexpr CMsgGCStorePurchaseFinalize(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseFinalize(const CMsgGCStorePurchaseFinalize& from);
  CMsgGCStorePurchaseFinalize(CMsgGCStorePurchaseFinalize&& from) noexcept
    : CMsgGCStorePurchaseFinalize() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseFinalize& operator=(const CMsgGCStorePurchaseFinalize& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseFinalize& operator=(CMsgGCStorePurchaseFinalize&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseFinalize& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseFinalize* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseFinalize*>(
               &_CMsgGCStorePurchaseFinalize_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(CMsgGCStorePurchaseFinalize& a, CMsgGCStorePurchaseFinalize& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseFinalize* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseFinalize* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCStorePurchaseFinalize* New() const final {
    return new CMsgGCStorePurchaseFinalize();
  }

  CMsgGCStorePurchaseFinalize* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseFinalize>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCStorePurchaseFinalize& from);
  void MergeFrom(const CMsgGCStorePurchaseFinalize& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseFinalize* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseFinalize";
  }
  protected:
  explicit CMsgGCStorePurchaseFinalize(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTxnIdFieldNumber = 1,
  };
  // optional uint64 txn_id = 1;
  bool has_txn_id() const;
  private:
  bool _internal_has_txn_id() const;
  public:
  void clear_txn_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 txn_id() const;
  void set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_txn_id() const;
  void _internal_set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseFinalize)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 txn_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCStorePurchaseFinalizeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseFinalizeResponse) */ {
 public:
  inline CMsgGCStorePurchaseFinalizeResponse() : CMsgGCStorePurchaseFinalizeResponse(nullptr) {}
  ~CMsgGCStorePurchaseFinalizeResponse() override;
  explicit constexpr CMsgGCStorePurchaseFinalizeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseFinalizeResponse(const CMsgGCStorePurchaseFinalizeResponse& from);
  CMsgGCStorePurchaseFinalizeResponse(CMsgGCStorePurchaseFinalizeResponse&& from) noexcept
    : CMsgGCStorePurchaseFinalizeResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseFinalizeResponse& operator=(const CMsgGCStorePurchaseFinalizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseFinalizeResponse& operator=(CMsgGCStorePurchaseFinalizeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseFinalizeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseFinalizeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseFinalizeResponse*>(
               &_CMsgGCStorePurchaseFinalizeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(CMsgGCStorePurchaseFinalizeResponse& a, CMsgGCStorePurchaseFinalizeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseFinalizeResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseFinalizeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCStorePurchaseFinalizeResponse* New() const final {
    return new CMsgGCStorePurchaseFinalizeResponse();
  }

  CMsgGCStorePurchaseFinalizeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseFinalizeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCStorePurchaseFinalizeResponse& from);
  void MergeFrom(const CMsgGCStorePurchaseFinalizeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseFinalizeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseFinalizeResponse";
  }
  protected:
  explicit CMsgGCStorePurchaseFinalizeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated uint64 item_ids = 2;
  int item_ids_size() const;
  private:
  int _internal_item_ids_size() const;
  public:
  void clear_item_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_item_ids() const;
  void _internal_add_item_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_item_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 item_ids(int index) const;
  void set_item_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_item_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      item_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_item_ids();

  // optional uint32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseFinalizeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > item_ids_;
  ::PROTOBUF_NAMESPACE_ID::uint32 result_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCBannedWordListRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCBannedWordListRequest) */ {
 public:
  inline CMsgGCBannedWordListRequest() : CMsgGCBannedWordListRequest(nullptr) {}
  ~CMsgGCBannedWordListRequest() override;
  explicit constexpr CMsgGCBannedWordListRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCBannedWordListRequest(const CMsgGCBannedWordListRequest& from);
  CMsgGCBannedWordListRequest(CMsgGCBannedWordListRequest&& from) noexcept
    : CMsgGCBannedWordListRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCBannedWordListRequest& operator=(const CMsgGCBannedWordListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCBannedWordListRequest& operator=(CMsgGCBannedWordListRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCBannedWordListRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCBannedWordListRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCBannedWordListRequest*>(
               &_CMsgGCBannedWordListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(CMsgGCBannedWordListRequest& a, CMsgGCBannedWordListRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCBannedWordListRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCBannedWordListRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCBannedWordListRequest* New() const final {
    return new CMsgGCBannedWordListRequest();
  }

  CMsgGCBannedWordListRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCBannedWordListRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCBannedWordListRequest& from);
  void MergeFrom(const CMsgGCBannedWordListRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCBannedWordListRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCBannedWordListRequest";
  }
  protected:
  explicit CMsgGCBannedWordListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBanListGroupIdFieldNumber = 1,
    kWordIdFieldNumber = 2,
  };
  // optional uint32 ban_list_group_id = 1;
  bool has_ban_list_group_id() const;
  private:
  bool _internal_has_ban_list_group_id() const;
  public:
  void clear_ban_list_group_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ban_list_group_id() const;
  void set_ban_list_group_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ban_list_group_id() const;
  void _internal_set_ban_list_group_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 word_id = 2;
  bool has_word_id() const;
  private:
  bool _internal_has_word_id() const;
  public:
  void clear_word_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 word_id() const;
  void set_word_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_word_id() const;
  void _internal_set_word_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCBannedWordListRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ban_list_group_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 word_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCGiftedItems final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCGiftedItems) */ {
 public:
  inline CMsgGCGiftedItems() : CMsgGCGiftedItems(nullptr) {}
  ~CMsgGCGiftedItems() override;
  explicit constexpr CMsgGCGiftedItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCGiftedItems(const CMsgGCGiftedItems& from);
  CMsgGCGiftedItems(CMsgGCGiftedItems&& from) noexcept
    : CMsgGCGiftedItems() {
    *this = ::std::move(from);
  }

  inline CMsgGCGiftedItems& operator=(const CMsgGCGiftedItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCGiftedItems& operator=(CMsgGCGiftedItems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCGiftedItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCGiftedItems* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGiftedItems*>(
               &_CMsgGCGiftedItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(CMsgGCGiftedItems& a, CMsgGCGiftedItems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCGiftedItems* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCGiftedItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGiftedItems* New() const final {
    return new CMsgGCGiftedItems();
  }

  CMsgGCGiftedItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGiftedItems>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCGiftedItems& from);
  void MergeFrom(const CMsgGCGiftedItems& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGiftedItems* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCGiftedItems";
  }
  protected:
  explicit CMsgGCGiftedItems(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecipientAccountIdsFieldNumber = 3,
    kGifterSteamIdFieldNumber = 1,
    kWasRandomPersonFieldNumber = 2,
  };
  // repeated uint32 recipient_account_ids = 3;
  int recipient_account_ids_size() const;
  private:
  int _internal_recipient_account_ids_size() const;
  public:
  void clear_recipient_account_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_recipient_account_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_recipient_account_ids() const;
  void _internal_add_recipient_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_recipient_account_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 recipient_account_ids(int index) const;
  void set_recipient_account_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_recipient_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      recipient_account_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_recipient_account_ids();

  // optional uint64 gifter_steam_id = 1;
  bool has_gifter_steam_id() const;
  private:
  bool _internal_has_gifter_steam_id() const;
  public:
  void clear_gifter_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 gifter_steam_id() const;
  void set_gifter_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gifter_steam_id() const;
  void _internal_set_gifter_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool was_random_person = 2;
  bool has_was_random_person() const;
  private:
  bool _internal_has_was_random_person() const;
  public:
  void clear_was_random_person();
  bool was_random_person() const;
  void set_was_random_person(bool value);
  private:
  bool _internal_was_random_person() const;
  void _internal_set_was_random_person(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCGiftedItems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > recipient_account_ids_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gifter_steam_id_;
  bool was_random_person_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCCollectItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCCollectItem) */ {
 public:
  inline CMsgGCCollectItem() : CMsgGCCollectItem(nullptr) {}
  ~CMsgGCCollectItem() override;
  explicit constexpr CMsgGCCollectItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCCollectItem(const CMsgGCCollectItem& from);
  CMsgGCCollectItem(CMsgGCCollectItem&& from) noexcept
    : CMsgGCCollectItem() {
    *this = ::std::move(from);
  }

  inline CMsgGCCollectItem& operator=(const CMsgGCCollectItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCCollectItem& operator=(CMsgGCCollectItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCCollectItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCCollectItem* internal_default_instance() {
    return reinterpret_cast<const CMsgGCCollectItem*>(
               &_CMsgGCCollectItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(CMsgGCCollectItem& a, CMsgGCCollectItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCCollectItem* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCCollectItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCCollectItem* New() const final {
    return new CMsgGCCollectItem();
  }

  CMsgGCCollectItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCCollectItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCCollectItem& from);
  void MergeFrom(const CMsgGCCollectItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCCollectItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCCollectItem";
  }
  protected:
  explicit CMsgGCCollectItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCollectionItemIdFieldNumber = 1,
    kSubjectItemIdFieldNumber = 2,
  };
  // optional uint64 collection_item_id = 1;
  bool has_collection_item_id() const;
  private:
  bool _internal_has_collection_item_id() const;
  public:
  void clear_collection_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 collection_item_id() const;
  void set_collection_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_collection_item_id() const;
  void _internal_set_collection_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 subject_item_id = 2;
  bool has_subject_item_id() const;
  private:
  bool _internal_has_subject_item_id() const;
  public:
  void clear_subject_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 subject_item_id() const;
  void set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_subject_item_id() const;
  void _internal_set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCCollectItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 collection_item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 subject_item_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCClientMarketDataRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCClientMarketDataRequest) */ {
 public:
  inline CMsgGCClientMarketDataRequest() : CMsgGCClientMarketDataRequest(nullptr) {}
  ~CMsgGCClientMarketDataRequest() override;
  explicit constexpr CMsgGCClientMarketDataRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCClientMarketDataRequest(const CMsgGCClientMarketDataRequest& from);
  CMsgGCClientMarketDataRequest(CMsgGCClientMarketDataRequest&& from) noexcept
    : CMsgGCClientMarketDataRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCClientMarketDataRequest& operator=(const CMsgGCClientMarketDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCClientMarketDataRequest& operator=(CMsgGCClientMarketDataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCClientMarketDataRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCClientMarketDataRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCClientMarketDataRequest*>(
               &_CMsgGCClientMarketDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(CMsgGCClientMarketDataRequest& a, CMsgGCClientMarketDataRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCClientMarketDataRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCClientMarketDataRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCClientMarketDataRequest* New() const final {
    return new CMsgGCClientMarketDataRequest();
  }

  CMsgGCClientMarketDataRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCClientMarketDataRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCClientMarketDataRequest& from);
  void MergeFrom(const CMsgGCClientMarketDataRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCClientMarketDataRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCClientMarketDataRequest";
  }
  protected:
  explicit CMsgGCClientMarketDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserCurrencyFieldNumber = 1,
  };
  // optional uint32 user_currency = 1;
  bool has_user_currency() const;
  private:
  bool _internal_has_user_currency() const;
  public:
  void clear_user_currency();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_currency() const;
  void set_user_currency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_currency() const;
  void _internal_set_user_currency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCClientMarketDataRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_currency_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCClientMarketDataEntry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCClientMarketDataEntry) */ {
 public:
  inline CMsgGCClientMarketDataEntry() : CMsgGCClientMarketDataEntry(nullptr) {}
  ~CMsgGCClientMarketDataEntry() override;
  explicit constexpr CMsgGCClientMarketDataEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCClientMarketDataEntry(const CMsgGCClientMarketDataEntry& from);
  CMsgGCClientMarketDataEntry(CMsgGCClientMarketDataEntry&& from) noexcept
    : CMsgGCClientMarketDataEntry() {
    *this = ::std::move(from);
  }

  inline CMsgGCClientMarketDataEntry& operator=(const CMsgGCClientMarketDataEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCClientMarketDataEntry& operator=(CMsgGCClientMarketDataEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCClientMarketDataEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCClientMarketDataEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgGCClientMarketDataEntry*>(
               &_CMsgGCClientMarketDataEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(CMsgGCClientMarketDataEntry& a, CMsgGCClientMarketDataEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCClientMarketDataEntry* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCClientMarketDataEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCClientMarketDataEntry* New() const final {
    return new CMsgGCClientMarketDataEntry();
  }

  CMsgGCClientMarketDataEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCClientMarketDataEntry>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCClientMarketDataEntry& from);
  void MergeFrom(const CMsgGCClientMarketDataEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCClientMarketDataEntry* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCClientMarketDataEntry";
  }
  protected:
  explicit CMsgGCClientMarketDataEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDefIndexFieldNumber = 1,
    kItemQualityFieldNumber = 2,
    kItemSellListingsFieldNumber = 3,
    kPriceInLocalCurrencyFieldNumber = 4,
  };
  // optional uint32 item_def_index = 1;
  bool has_item_def_index() const;
  private:
  bool _internal_has_item_def_index() const;
  public:
  void clear_item_def_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def_index() const;
  void set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_def_index() const;
  void _internal_set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 item_quality = 2;
  bool has_item_quality() const;
  private:
  bool _internal_has_item_quality() const;
  public:
  void clear_item_quality();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_quality() const;
  void set_item_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_quality() const;
  void _internal_set_item_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 item_sell_listings = 3;
  bool has_item_sell_listings() const;
  private:
  bool _internal_has_item_sell_listings() const;
  public:
  void clear_item_sell_listings();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_sell_listings() const;
  void set_item_sell_listings(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_sell_listings() const;
  void _internal_set_item_sell_listings(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 price_in_local_currency = 4;
  bool has_price_in_local_currency() const;
  private:
  bool _internal_has_price_in_local_currency() const;
  public:
  void clear_price_in_local_currency();
  ::PROTOBUF_NAMESPACE_ID::uint32 price_in_local_currency() const;
  void set_price_in_local_currency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_price_in_local_currency() const;
  void _internal_set_price_in_local_currency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCClientMarketDataEntry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_quality_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_sell_listings_;
  ::PROTOBUF_NAMESPACE_ID::uint32 price_in_local_currency_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgGCClientMarketData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCClientMarketData) */ {
 public:
  inline CMsgGCClientMarketData() : CMsgGCClientMarketData(nullptr) {}
  ~CMsgGCClientMarketData() override;
  explicit constexpr CMsgGCClientMarketData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCClientMarketData(const CMsgGCClientMarketData& from);
  CMsgGCClientMarketData(CMsgGCClientMarketData&& from) noexcept
    : CMsgGCClientMarketData() {
    *this = ::std::move(from);
  }

  inline CMsgGCClientMarketData& operator=(const CMsgGCClientMarketData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCClientMarketData& operator=(CMsgGCClientMarketData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCClientMarketData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCClientMarketData* internal_default_instance() {
    return reinterpret_cast<const CMsgGCClientMarketData*>(
               &_CMsgGCClientMarketData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(CMsgGCClientMarketData& a, CMsgGCClientMarketData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCClientMarketData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCClientMarketData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCClientMarketData* New() const final {
    return new CMsgGCClientMarketData();
  }

  CMsgGCClientMarketData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCClientMarketData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCClientMarketData& from);
  void MergeFrom(const CMsgGCClientMarketData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCClientMarketData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCClientMarketData";
  }
  protected:
  explicit CMsgGCClientMarketData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .CMsgGCClientMarketDataEntry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;
  public:
  void clear_entries();
  ::CMsgGCClientMarketDataEntry* mutable_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCClientMarketDataEntry >*
      mutable_entries();
  private:
  const ::CMsgGCClientMarketDataEntry& _internal_entries(int index) const;
  ::CMsgGCClientMarketDataEntry* _internal_add_entries();
  public:
  const ::CMsgGCClientMarketDataEntry& entries(int index) const;
  ::CMsgGCClientMarketDataEntry* add_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCClientMarketDataEntry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:CMsgGCClientMarketData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCClientMarketDataEntry > entries_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgApplyToolToItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyToolToItem) */ {
 public:
  inline CMsgApplyToolToItem() : CMsgApplyToolToItem(nullptr) {}
  ~CMsgApplyToolToItem() override;
  explicit constexpr CMsgApplyToolToItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyToolToItem(const CMsgApplyToolToItem& from);
  CMsgApplyToolToItem(CMsgApplyToolToItem&& from) noexcept
    : CMsgApplyToolToItem() {
    *this = ::std::move(from);
  }

  inline CMsgApplyToolToItem& operator=(const CMsgApplyToolToItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyToolToItem& operator=(CMsgApplyToolToItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyToolToItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyToolToItem* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyToolToItem*>(
               &_CMsgApplyToolToItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(CMsgApplyToolToItem& a, CMsgApplyToolToItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyToolToItem* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyToolToItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgApplyToolToItem* New() const final {
    return new CMsgApplyToolToItem();
  }

  CMsgApplyToolToItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgApplyToolToItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgApplyToolToItem& from);
  void MergeFrom(const CMsgApplyToolToItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyToolToItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyToolToItem";
  }
  protected:
  explicit CMsgApplyToolToItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToolItemIdFieldNumber = 1,
    kSubjectItemIdFieldNumber = 2,
  };
  // optional uint64 tool_item_id = 1;
  bool has_tool_item_id() const;
  private:
  bool _internal_has_tool_item_id() const;
  public:
  void clear_tool_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 tool_item_id() const;
  void set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tool_item_id() const;
  void _internal_set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 subject_item_id = 2;
  bool has_subject_item_id() const;
  private:
  bool _internal_has_subject_item_id() const;
  public:
  void clear_subject_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 subject_item_id() const;
  void set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_subject_item_id() const;
  void _internal_set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgApplyToolToItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tool_item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 subject_item_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgApplyToolToBaseItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyToolToBaseItem) */ {
 public:
  inline CMsgApplyToolToBaseItem() : CMsgApplyToolToBaseItem(nullptr) {}
  ~CMsgApplyToolToBaseItem() override;
  explicit constexpr CMsgApplyToolToBaseItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyToolToBaseItem(const CMsgApplyToolToBaseItem& from);
  CMsgApplyToolToBaseItem(CMsgApplyToolToBaseItem&& from) noexcept
    : CMsgApplyToolToBaseItem() {
    *this = ::std::move(from);
  }

  inline CMsgApplyToolToBaseItem& operator=(const CMsgApplyToolToBaseItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyToolToBaseItem& operator=(CMsgApplyToolToBaseItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyToolToBaseItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyToolToBaseItem* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyToolToBaseItem*>(
               &_CMsgApplyToolToBaseItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(CMsgApplyToolToBaseItem& a, CMsgApplyToolToBaseItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyToolToBaseItem* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyToolToBaseItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgApplyToolToBaseItem* New() const final {
    return new CMsgApplyToolToBaseItem();
  }

  CMsgApplyToolToBaseItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgApplyToolToBaseItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgApplyToolToBaseItem& from);
  void MergeFrom(const CMsgApplyToolToBaseItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyToolToBaseItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyToolToBaseItem";
  }
  protected:
  explicit CMsgApplyToolToBaseItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToolItemIdFieldNumber = 1,
    kBaseitemDefIndexFieldNumber = 2,
  };
  // optional uint64 tool_item_id = 1;
  bool has_tool_item_id() const;
  private:
  bool _internal_has_tool_item_id() const;
  public:
  void clear_tool_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 tool_item_id() const;
  void set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tool_item_id() const;
  void _internal_set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 baseitem_def_index = 2;
  bool has_baseitem_def_index() const;
  private:
  bool _internal_has_baseitem_def_index() const;
  public:
  void clear_baseitem_def_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 baseitem_def_index() const;
  void set_baseitem_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baseitem_def_index() const;
  void _internal_set_baseitem_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgApplyToolToBaseItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tool_item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baseitem_def_index_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgRecipeComponent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgRecipeComponent) */ {
 public:
  inline CMsgRecipeComponent() : CMsgRecipeComponent(nullptr) {}
  ~CMsgRecipeComponent() override;
  explicit constexpr CMsgRecipeComponent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgRecipeComponent(const CMsgRecipeComponent& from);
  CMsgRecipeComponent(CMsgRecipeComponent&& from) noexcept
    : CMsgRecipeComponent() {
    *this = ::std::move(from);
  }

  inline CMsgRecipeComponent& operator=(const CMsgRecipeComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgRecipeComponent& operator=(CMsgRecipeComponent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgRecipeComponent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgRecipeComponent* internal_default_instance() {
    return reinterpret_cast<const CMsgRecipeComponent*>(
               &_CMsgRecipeComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(CMsgRecipeComponent& a, CMsgRecipeComponent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgRecipeComponent* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgRecipeComponent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgRecipeComponent* New() const final {
    return new CMsgRecipeComponent();
  }

  CMsgRecipeComponent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgRecipeComponent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgRecipeComponent& from);
  void MergeFrom(const CMsgRecipeComponent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRecipeComponent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgRecipeComponent";
  }
  protected:
  explicit CMsgRecipeComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubjectItemIdFieldNumber = 1,
    kAttributeIndexFieldNumber = 2,
  };
  // optional uint64 subject_item_id = 1;
  bool has_subject_item_id() const;
  private:
  bool _internal_has_subject_item_id() const;
  public:
  void clear_subject_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 subject_item_id() const;
  void set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_subject_item_id() const;
  void _internal_set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 attribute_index = 2;
  bool has_attribute_index() const;
  private:
  bool _internal_has_attribute_index() const;
  public:
  void clear_attribute_index();
  ::PROTOBUF_NAMESPACE_ID::uint64 attribute_index() const;
  void set_attribute_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_attribute_index() const;
  void _internal_set_attribute_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgRecipeComponent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 subject_item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 attribute_index_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgFulfillDynamicRecipeComponent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgFulfillDynamicRecipeComponent) */ {
 public:
  inline CMsgFulfillDynamicRecipeComponent() : CMsgFulfillDynamicRecipeComponent(nullptr) {}
  ~CMsgFulfillDynamicRecipeComponent() override;
  explicit constexpr CMsgFulfillDynamicRecipeComponent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgFulfillDynamicRecipeComponent(const CMsgFulfillDynamicRecipeComponent& from);
  CMsgFulfillDynamicRecipeComponent(CMsgFulfillDynamicRecipeComponent&& from) noexcept
    : CMsgFulfillDynamicRecipeComponent() {
    *this = ::std::move(from);
  }

  inline CMsgFulfillDynamicRecipeComponent& operator=(const CMsgFulfillDynamicRecipeComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgFulfillDynamicRecipeComponent& operator=(CMsgFulfillDynamicRecipeComponent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgFulfillDynamicRecipeComponent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgFulfillDynamicRecipeComponent* internal_default_instance() {
    return reinterpret_cast<const CMsgFulfillDynamicRecipeComponent*>(
               &_CMsgFulfillDynamicRecipeComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(CMsgFulfillDynamicRecipeComponent& a, CMsgFulfillDynamicRecipeComponent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgFulfillDynamicRecipeComponent* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgFulfillDynamicRecipeComponent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgFulfillDynamicRecipeComponent* New() const final {
    return new CMsgFulfillDynamicRecipeComponent();
  }

  CMsgFulfillDynamicRecipeComponent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgFulfillDynamicRecipeComponent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgFulfillDynamicRecipeComponent& from);
  void MergeFrom(const CMsgFulfillDynamicRecipeComponent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgFulfillDynamicRecipeComponent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgFulfillDynamicRecipeComponent";
  }
  protected:
  explicit CMsgFulfillDynamicRecipeComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConsumptionComponentsFieldNumber = 2,
    kToolItemIdFieldNumber = 1,
  };
  // repeated .CMsgRecipeComponent consumption_components = 2;
  int consumption_components_size() const;
  private:
  int _internal_consumption_components_size() const;
  public:
  void clear_consumption_components();
  ::CMsgRecipeComponent* mutable_consumption_components(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgRecipeComponent >*
      mutable_consumption_components();
  private:
  const ::CMsgRecipeComponent& _internal_consumption_components(int index) const;
  ::CMsgRecipeComponent* _internal_add_consumption_components();
  public:
  const ::CMsgRecipeComponent& consumption_components(int index) const;
  ::CMsgRecipeComponent* add_consumption_components();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgRecipeComponent >&
      consumption_components() const;

  // optional uint64 tool_item_id = 1;
  bool has_tool_item_id() const;
  private:
  bool _internal_has_tool_item_id() const;
  public:
  void clear_tool_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 tool_item_id() const;
  void set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tool_item_id() const;
  void _internal_set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgFulfillDynamicRecipeComponent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgRecipeComponent > consumption_components_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tool_item_id_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgSetItemEffectVerticalOffset final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSetItemEffectVerticalOffset) */ {
 public:
  inline CMsgSetItemEffectVerticalOffset() : CMsgSetItemEffectVerticalOffset(nullptr) {}
  ~CMsgSetItemEffectVerticalOffset() override;
  explicit constexpr CMsgSetItemEffectVerticalOffset(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSetItemEffectVerticalOffset(const CMsgSetItemEffectVerticalOffset& from);
  CMsgSetItemEffectVerticalOffset(CMsgSetItemEffectVerticalOffset&& from) noexcept
    : CMsgSetItemEffectVerticalOffset() {
    *this = ::std::move(from);
  }

  inline CMsgSetItemEffectVerticalOffset& operator=(const CMsgSetItemEffectVerticalOffset& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSetItemEffectVerticalOffset& operator=(CMsgSetItemEffectVerticalOffset&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSetItemEffectVerticalOffset& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSetItemEffectVerticalOffset* internal_default_instance() {
    return reinterpret_cast<const CMsgSetItemEffectVerticalOffset*>(
               &_CMsgSetItemEffectVerticalOffset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(CMsgSetItemEffectVerticalOffset& a, CMsgSetItemEffectVerticalOffset& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSetItemEffectVerticalOffset* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSetItemEffectVerticalOffset* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSetItemEffectVerticalOffset* New() const final {
    return new CMsgSetItemEffectVerticalOffset();
  }

  CMsgSetItemEffectVerticalOffset* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSetItemEffectVerticalOffset>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSetItemEffectVerticalOffset& from);
  void MergeFrom(const CMsgSetItemEffectVerticalOffset& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSetItemEffectVerticalOffset* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSetItemEffectVerticalOffset";
  }
  protected:
  explicit CMsgSetItemEffectVerticalOffset(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kOffsetFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional float offset = 2;
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  float offset() const;
  void set_offset(float value);
  private:
  float _internal_offset() const;
  void _internal_set_offset(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSetItemEffectVerticalOffset)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  float offset_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgSetHatEffectUseHeadOrigin final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSetHatEffectUseHeadOrigin) */ {
 public:
  inline CMsgSetHatEffectUseHeadOrigin() : CMsgSetHatEffectUseHeadOrigin(nullptr) {}
  ~CMsgSetHatEffectUseHeadOrigin() override;
  explicit constexpr CMsgSetHatEffectUseHeadOrigin(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSetHatEffectUseHeadOrigin(const CMsgSetHatEffectUseHeadOrigin& from);
  CMsgSetHatEffectUseHeadOrigin(CMsgSetHatEffectUseHeadOrigin&& from) noexcept
    : CMsgSetHatEffectUseHeadOrigin() {
    *this = ::std::move(from);
  }

  inline CMsgSetHatEffectUseHeadOrigin& operator=(const CMsgSetHatEffectUseHeadOrigin& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSetHatEffectUseHeadOrigin& operator=(CMsgSetHatEffectUseHeadOrigin&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSetHatEffectUseHeadOrigin& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSetHatEffectUseHeadOrigin* internal_default_instance() {
    return reinterpret_cast<const CMsgSetHatEffectUseHeadOrigin*>(
               &_CMsgSetHatEffectUseHeadOrigin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(CMsgSetHatEffectUseHeadOrigin& a, CMsgSetHatEffectUseHeadOrigin& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSetHatEffectUseHeadOrigin* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSetHatEffectUseHeadOrigin* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSetHatEffectUseHeadOrigin* New() const final {
    return new CMsgSetHatEffectUseHeadOrigin();
  }

  CMsgSetHatEffectUseHeadOrigin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSetHatEffectUseHeadOrigin>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSetHatEffectUseHeadOrigin& from);
  void MergeFrom(const CMsgSetHatEffectUseHeadOrigin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSetHatEffectUseHeadOrigin* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSetHatEffectUseHeadOrigin";
  }
  protected:
  explicit CMsgSetHatEffectUseHeadOrigin(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kUseHeadFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool use_head = 2;
  bool has_use_head() const;
  private:
  bool _internal_has_use_head() const;
  public:
  void clear_use_head();
  bool use_head() const;
  void set_use_head(bool value);
  private:
  bool _internal_use_head() const;
  void _internal_set_use_head(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSetHatEffectUseHeadOrigin)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 item_id_;
  bool use_head_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CMsgDeliverGiftResponseGiver final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDeliverGiftResponseGiver) */ {
 public:
  inline CMsgDeliverGiftResponseGiver() : CMsgDeliverGiftResponseGiver(nullptr) {}
  ~CMsgDeliverGiftResponseGiver() override;
  explicit constexpr CMsgDeliverGiftResponseGiver(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDeliverGiftResponseGiver(const CMsgDeliverGiftResponseGiver& from);
  CMsgDeliverGiftResponseGiver(CMsgDeliverGiftResponseGiver&& from) noexcept
    : CMsgDeliverGiftResponseGiver() {
    *this = ::std::move(from);
  }

  inline CMsgDeliverGiftResponseGiver& operator=(const CMsgDeliverGiftResponseGiver& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDeliverGiftResponseGiver& operator=(CMsgDeliverGiftResponseGiver&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgDeliverGiftResponseGiver& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDeliverGiftResponseGiver* internal_default_instance() {
    return reinterpret_cast<const CMsgDeliverGiftResponseGiver*>(
               &_CMsgDeliverGiftResponseGiver_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(CMsgDeliverGiftResponseGiver& a, CMsgDeliverGiftResponseGiver& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDeliverGiftResponseGiver* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDeliverGiftResponseGiver* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgDeliverGiftResponseGiver* New() const final {
    return new CMsgDeliverGiftResponseGiver();
  }

  CMsgDeliverGiftResponseGiver* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDeliverGiftResponseGiver>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgDeliverGiftResponseGiver& from);
  void MergeFrom(const CMsgDeliverGiftResponseGiver& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDeliverGiftResponseGiver* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDeliverGiftResponseGiver";
  }
  protected:
  explicit CMsgDeliverGiftResponseGiver(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReceiverAccountNameFieldNumber = 2,
    kResponseCodeFieldNumber = 1,
  };
  // optional string receiver_account_name = 2;
  bool has_receiver_account_name() const;
  private:
  bool _internal_has_receiver_account_name() const;
  public:
  void clear_receiver_account_name();
  const std::string& receiver_account_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_receiver_account_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_receiver_account_name();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_receiver_account_name();
  void set_allocated_receiver_account_name(std::string* receiver_account_name);
  private:
  const std::string& _internal_receiver_account_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_receiver_account_name(const std::string& value);
  std::string* _internal_mutable_receiver_account_name();
  public:

  // optional uint32 response_code = 1;
  bool has_response_code() const;
  private:
  bool _internal_has_response_code() const;
  public:
  void clear_response_code();
  ::PROTOBUF_NAMESPACE_ID::uint32 response_code() const;
  void set_response_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_response_code() const;
  void _internal_set_response_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDeliverGiftResponseGiver)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr receiver_account_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 response_code_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CSOEconGameAccountForGameServers final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOEconGameAccountForGameServers) */ {
 public:
  inline CSOEconGameAccountForGameServers() : CSOEconGameAccountForGameServers(nullptr) {}
  ~CSOEconGameAccountForGameServers() override;
  explicit constexpr CSOEconGameAccountForGameServers(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOEconGameAccountForGameServers(const CSOEconGameAccountForGameServers& from);
  CSOEconGameAccountForGameServers(CSOEconGameAccountForGameServers&& from) noexcept
    : CSOEconGameAccountForGameServers() {
    *this = ::std::move(from);
  }

  inline CSOEconGameAccountForGameServers& operator=(const CSOEconGameAccountForGameServers& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOEconGameAccountForGameServers& operator=(CSOEconGameAccountForGameServers&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOEconGameAccountForGameServers& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOEconGameAccountForGameServers* internal_default_instance() {
    return reinterpret_cast<const CSOEconGameAccountForGameServers*>(
               &_CSOEconGameAccountForGameServers_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(CSOEconGameAccountForGameServers& a, CSOEconGameAccountForGameServers& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOEconGameAccountForGameServers* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOEconGameAccountForGameServers* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSOEconGameAccountForGameServers* New() const final {
    return new CSOEconGameAccountForGameServers();
  }

  CSOEconGameAccountForGameServers* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSOEconGameAccountForGameServers>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSOEconGameAccountForGameServers& from);
  void MergeFrom(const CSOEconGameAccountForGameServers& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOEconGameAccountForGameServers* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOEconGameAccountForGameServers";
  }
  protected:
  explicit CSOEconGameAccountForGameServers(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDisablePartyQuestProgressFieldNumber = 6,
  };
  // optional bool disable_party_quest_progress = 6 [default = false];
  bool has_disable_party_quest_progress() const;
  private:
  bool _internal_has_disable_party_quest_progress() const;
  public:
  void clear_disable_party_quest_progress();
  bool disable_party_quest_progress() const;
  void set_disable_party_quest_progress(bool value);
  private:
  bool _internal_disable_party_quest_progress() const;
  void _internal_set_disable_party_quest_progress(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CSOEconGameAccountForGameServers)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool disable_party_quest_progress_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription) */ {
 public:
  inline CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription() : CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(nullptr) {}
  ~CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription() override;
  explicit constexpr CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from);
  CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription&& from) noexcept
    : CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription() {
    *this = ::std::move(from);
  }

  inline CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& operator=(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& operator=(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription*>(
               &_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& a, CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* New() const final {
    return new CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription();
  }

  CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from);
  void MergeFrom(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription";
  }
  protected:
  explicit CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDescriptionFieldNumber = 2,
    kGameitemidFieldNumber = 1,
  };
  // optional string item_description = 2;
  bool has_item_description() const;
  private:
  bool _internal_has_item_description() const;
  public:
  void clear_item_description();
  const std::string& item_description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_item_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_item_description();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_item_description();
  void set_allocated_item_description(std::string* item_description);
  private:
  const std::string& _internal_item_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_item_description(const std::string& value);
  std::string* _internal_mutable_item_description();
  public:

  // optional uint32 gameitemid = 1;
  bool has_gameitemid() const;
  private:
  bool _internal_has_gameitemid() const;
  public:
  void clear_gameitemid();
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid() const;
  void set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gameitemid() const;
  void _internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr item_description_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock) */ {
 public:
  inline CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock() : CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(nullptr) {}
  ~CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock() override;
  explicit constexpr CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from);
  CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock&& from) noexcept
    : CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock() {
    *this = ::std::move(from);
  }

  inline CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& operator=(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& operator=(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock*>(
               &_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& a, CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* New() const final {
    return new CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock();
  }

  CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from);
  void MergeFrom(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock";
  }
  protected:
  explicit CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDescriptionsFieldNumber = 2,
    kLanguageFieldNumber = 1,
  };
  // repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
  int descriptions_size() const;
  private:
  int _internal_descriptions_size() const;
  public:
  void clear_descriptions();
  ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* mutable_descriptions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >*
      mutable_descriptions();
  private:
  const ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& _internal_descriptions(int index) const;
  ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* _internal_add_descriptions();
  public:
  const ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& descriptions(int index) const;
  ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* add_descriptions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >&
      descriptions() const;

  // optional string language = 1;
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  const std::string& language() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_language(ArgT0&& arg0, ArgT... args);
  std::string* mutable_language();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_language();
  void set_allocated_language(std::string* language);
  private:
  const std::string& _internal_language() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_language(const std::string& value);
  std::string* _internal_mutable_language();
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription > descriptions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr language_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CWorkshop_PopulateItemDescriptions_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_PopulateItemDescriptions_Request) */ {
 public:
  inline CWorkshop_PopulateItemDescriptions_Request() : CWorkshop_PopulateItemDescriptions_Request(nullptr) {}
  ~CWorkshop_PopulateItemDescriptions_Request() override;
  explicit constexpr CWorkshop_PopulateItemDescriptions_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_PopulateItemDescriptions_Request(const CWorkshop_PopulateItemDescriptions_Request& from);
  CWorkshop_PopulateItemDescriptions_Request(CWorkshop_PopulateItemDescriptions_Request&& from) noexcept
    : CWorkshop_PopulateItemDescriptions_Request() {
    *this = ::std::move(from);
  }

  inline CWorkshop_PopulateItemDescriptions_Request& operator=(const CWorkshop_PopulateItemDescriptions_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_PopulateItemDescriptions_Request& operator=(CWorkshop_PopulateItemDescriptions_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_PopulateItemDescriptions_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_PopulateItemDescriptions_Request* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_PopulateItemDescriptions_Request*>(
               &_CWorkshop_PopulateItemDescriptions_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(CWorkshop_PopulateItemDescriptions_Request& a, CWorkshop_PopulateItemDescriptions_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_PopulateItemDescriptions_Request* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_PopulateItemDescriptions_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_PopulateItemDescriptions_Request* New() const final {
    return new CWorkshop_PopulateItemDescriptions_Request();
  }

  CWorkshop_PopulateItemDescriptions_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_PopulateItemDescriptions_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_PopulateItemDescriptions_Request& from);
  void MergeFrom(const CWorkshop_PopulateItemDescriptions_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_PopulateItemDescriptions_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_PopulateItemDescriptions_Request";
  }
  protected:
  explicit CWorkshop_PopulateItemDescriptions_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription SingleItemDescription;
  typedef CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock ItemDescriptionsLanguageBlock;

  // accessors -------------------------------------------------------

  enum : int {
    kLanguagesFieldNumber = 2,
    kAppidFieldNumber = 1,
  };
  // repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
  int languages_size() const;
  private:
  int _internal_languages_size() const;
  public:
  void clear_languages();
  ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* mutable_languages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >*
      mutable_languages();
  private:
  const ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& _internal_languages(int index) const;
  ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* _internal_add_languages();
  public:
  const ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& languages(int index) const;
  ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* add_languages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >&
      languages() const;

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_PopulateItemDescriptions_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock > languages_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CWorkshop_GetContributors_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_GetContributors_Request) */ {
 public:
  inline CWorkshop_GetContributors_Request() : CWorkshop_GetContributors_Request(nullptr) {}
  ~CWorkshop_GetContributors_Request() override;
  explicit constexpr CWorkshop_GetContributors_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_GetContributors_Request(const CWorkshop_GetContributors_Request& from);
  CWorkshop_GetContributors_Request(CWorkshop_GetContributors_Request&& from) noexcept
    : CWorkshop_GetContributors_Request() {
    *this = ::std::move(from);
  }

  inline CWorkshop_GetContributors_Request& operator=(const CWorkshop_GetContributors_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_GetContributors_Request& operator=(CWorkshop_GetContributors_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_GetContributors_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_GetContributors_Request* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_GetContributors_Request*>(
               &_CWorkshop_GetContributors_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(CWorkshop_GetContributors_Request& a, CWorkshop_GetContributors_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_GetContributors_Request* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_GetContributors_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_GetContributors_Request* New() const final {
    return new CWorkshop_GetContributors_Request();
  }

  CWorkshop_GetContributors_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_GetContributors_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_GetContributors_Request& from);
  void MergeFrom(const CWorkshop_GetContributors_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_GetContributors_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_GetContributors_Request";
  }
  protected:
  explicit CWorkshop_GetContributors_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
    kGameitemidFieldNumber = 2,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gameitemid = 2;
  bool has_gameitemid() const;
  private:
  bool _internal_has_gameitemid() const;
  public:
  void clear_gameitemid();
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid() const;
  void set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gameitemid() const;
  void _internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_GetContributors_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CWorkshop_GetContributors_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_GetContributors_Response) */ {
 public:
  inline CWorkshop_GetContributors_Response() : CWorkshop_GetContributors_Response(nullptr) {}
  ~CWorkshop_GetContributors_Response() override;
  explicit constexpr CWorkshop_GetContributors_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_GetContributors_Response(const CWorkshop_GetContributors_Response& from);
  CWorkshop_GetContributors_Response(CWorkshop_GetContributors_Response&& from) noexcept
    : CWorkshop_GetContributors_Response() {
    *this = ::std::move(from);
  }

  inline CWorkshop_GetContributors_Response& operator=(const CWorkshop_GetContributors_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_GetContributors_Response& operator=(CWorkshop_GetContributors_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_GetContributors_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_GetContributors_Response* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_GetContributors_Response*>(
               &_CWorkshop_GetContributors_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(CWorkshop_GetContributors_Response& a, CWorkshop_GetContributors_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_GetContributors_Response* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_GetContributors_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_GetContributors_Response* New() const final {
    return new CWorkshop_GetContributors_Response();
  }

  CWorkshop_GetContributors_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_GetContributors_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_GetContributors_Response& from);
  void MergeFrom(const CWorkshop_GetContributors_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_GetContributors_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_GetContributors_Response";
  }
  protected:
  explicit CWorkshop_GetContributors_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContributorsFieldNumber = 1,
  };
  // repeated fixed64 contributors = 1;
  int contributors_size() const;
  private:
  int _internal_contributors_size() const;
  public:
  void clear_contributors();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_contributors(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_contributors() const;
  void _internal_add_contributors(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_contributors();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 contributors(int index) const;
  void set_contributors(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_contributors(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      contributors() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_contributors();

  // @@protoc_insertion_point(class_scope:CWorkshop_GetContributors_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > contributors_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule) */ {
 public:
  inline CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule() : CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(nullptr) {}
  ~CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule() override;
  explicit constexpr CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from);
  CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule&& from) noexcept
    : CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule() {
    *this = ::std::move(from);
  }

  inline CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& operator=(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& operator=(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule*>(
               &_CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& a, CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* New() const final {
    return new CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule();
  }

  CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from);
  void MergeFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule";
  }
  protected:
  explicit CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuleDescriptionFieldNumber = 3,
    kWorkshopFileIdFieldNumber = 1,
    kRevenuePercentageFieldNumber = 2,
  };
  // optional string rule_description = 3;
  bool has_rule_description() const;
  private:
  bool _internal_has_rule_description() const;
  public:
  void clear_rule_description();
  const std::string& rule_description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_rule_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_rule_description();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_rule_description();
  void set_allocated_rule_description(std::string* rule_description);
  private:
  const std::string& _internal_rule_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rule_description(const std::string& value);
  std::string* _internal_mutable_rule_description();
  public:

  // optional uint64 workshop_file_id = 1;
  bool has_workshop_file_id() const;
  private:
  bool _internal_has_workshop_file_id() const;
  public:
  void clear_workshop_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 workshop_file_id() const;
  void set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_workshop_file_id() const;
  void _internal_set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional float revenue_percentage = 2;
  bool has_revenue_percentage() const;
  private:
  bool _internal_has_revenue_percentage() const;
  public:
  void clear_revenue_percentage();
  float revenue_percentage() const;
  void set_revenue_percentage(float value);
  private:
  float _internal_revenue_percentage() const;
  void _internal_set_revenue_percentage(float value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rule_description_;
  ::PROTOBUF_NAMESPACE_ID::uint64 workshop_file_id_;
  float revenue_percentage_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule) */ {
 public:
  inline CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule() : CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(nullptr) {}
  ~CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule() override;
  explicit constexpr CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from);
  CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule&& from) noexcept
    : CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule() {
    *this = ::std::move(from);
  }

  inline CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& operator=(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& operator=(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule*>(
               &_CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& a, CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* New() const final {
    return new CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule();
  }

  CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from);
  void MergeFrom(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule";
  }
  protected:
  explicit CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuleDescriptionFieldNumber = 3,
    kAccountIdFieldNumber = 1,
    kRevenuePercentageFieldNumber = 2,
  };
  // optional string rule_description = 3;
  bool has_rule_description() const;
  private:
  bool _internal_has_rule_description() const;
  public:
  void clear_rule_description();
  const std::string& rule_description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_rule_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_rule_description();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_rule_description();
  void set_allocated_rule_description(std::string* rule_description);
  private:
  const std::string& _internal_rule_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rule_description(const std::string& value);
  std::string* _internal_mutable_rule_description();
  public:

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float revenue_percentage = 2;
  bool has_revenue_percentage() const;
  private:
  bool _internal_has_revenue_percentage() const;
  public:
  void clear_revenue_percentage();
  float revenue_percentage() const;
  void set_revenue_percentage(float value);
  private:
  float _internal_revenue_percentage() const;
  void _internal_set_revenue_percentage(float value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rule_description_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  float revenue_percentage_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CWorkshop_SetItemPaymentRules_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_SetItemPaymentRules_Request) */ {
 public:
  inline CWorkshop_SetItemPaymentRules_Request() : CWorkshop_SetItemPaymentRules_Request(nullptr) {}
  ~CWorkshop_SetItemPaymentRules_Request() override;
  explicit constexpr CWorkshop_SetItemPaymentRules_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_SetItemPaymentRules_Request(const CWorkshop_SetItemPaymentRules_Request& from);
  CWorkshop_SetItemPaymentRules_Request(CWorkshop_SetItemPaymentRules_Request&& from) noexcept
    : CWorkshop_SetItemPaymentRules_Request() {
    *this = ::std::move(from);
  }

  inline CWorkshop_SetItemPaymentRules_Request& operator=(const CWorkshop_SetItemPaymentRules_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_SetItemPaymentRules_Request& operator=(CWorkshop_SetItemPaymentRules_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_SetItemPaymentRules_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_SetItemPaymentRules_Request* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_SetItemPaymentRules_Request*>(
               &_CWorkshop_SetItemPaymentRules_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(CWorkshop_SetItemPaymentRules_Request& a, CWorkshop_SetItemPaymentRules_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_SetItemPaymentRules_Request* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_SetItemPaymentRules_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_SetItemPaymentRules_Request* New() const final {
    return new CWorkshop_SetItemPaymentRules_Request();
  }

  CWorkshop_SetItemPaymentRules_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_SetItemPaymentRules_Request& from);
  void MergeFrom(const CWorkshop_SetItemPaymentRules_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_SetItemPaymentRules_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_SetItemPaymentRules_Request";
  }
  protected:
  explicit CWorkshop_SetItemPaymentRules_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule WorkshopItemPaymentRule;
  typedef CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule PartnerItemPaymentRule;

  // accessors -------------------------------------------------------

  enum : int {
    kAssociatedWorkshopFilesFieldNumber = 3,
    kPartnerAccountsFieldNumber = 4,
    kAppidFieldNumber = 1,
    kGameitemidFieldNumber = 2,
  };
  // repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
  int associated_workshop_files_size() const;
  private:
  int _internal_associated_workshop_files_size() const;
  public:
  void clear_associated_workshop_files();
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* mutable_associated_workshop_files(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule >*
      mutable_associated_workshop_files();
  private:
  const ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& _internal_associated_workshop_files(int index) const;
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* _internal_add_associated_workshop_files();
  public:
  const ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& associated_workshop_files(int index) const;
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* add_associated_workshop_files();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule >&
      associated_workshop_files() const;

  // repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
  int partner_accounts_size() const;
  private:
  int _internal_partner_accounts_size() const;
  public:
  void clear_partner_accounts();
  ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* mutable_partner_accounts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule >*
      mutable_partner_accounts();
  private:
  const ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& _internal_partner_accounts(int index) const;
  ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* _internal_add_partner_accounts();
  public:
  const ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& partner_accounts(int index) const;
  ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* add_partner_accounts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule >&
      partner_accounts() const;

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gameitemid = 2;
  bool has_gameitemid() const;
  private:
  bool _internal_has_gameitemid() const;
  public:
  void clear_gameitemid();
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid() const;
  void set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gameitemid() const;
  void _internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_SetItemPaymentRules_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule > associated_workshop_files_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule > partner_accounts_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class M0PROTO CWorkshop_SetItemPaymentRules_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_SetItemPaymentRules_Response) */ {
 public:
  inline CWorkshop_SetItemPaymentRules_Response() : CWorkshop_SetItemPaymentRules_Response(nullptr) {}
  ~CWorkshop_SetItemPaymentRules_Response() override;
  explicit constexpr CWorkshop_SetItemPaymentRules_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_SetItemPaymentRules_Response(const CWorkshop_SetItemPaymentRules_Response& from);
  CWorkshop_SetItemPaymentRules_Response(CWorkshop_SetItemPaymentRules_Response&& from) noexcept
    : CWorkshop_SetItemPaymentRules_Response() {
    *this = ::std::move(from);
  }

  inline CWorkshop_SetItemPaymentRules_Response& operator=(const CWorkshop_SetItemPaymentRules_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_SetItemPaymentRules_Response& operator=(CWorkshop_SetItemPaymentRules_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_SetItemPaymentRules_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_SetItemPaymentRules_Response* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_SetItemPaymentRules_Response*>(
               &_CWorkshop_SetItemPaymentRules_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(CWorkshop_SetItemPaymentRules_Response& a, CWorkshop_SetItemPaymentRules_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_SetItemPaymentRules_Response* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_SetItemPaymentRules_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_SetItemPaymentRules_Response* New() const final {
    return new CWorkshop_SetItemPaymentRules_Response();
  }

  CWorkshop_SetItemPaymentRules_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_SetItemPaymentRules_Response& from);
  void MergeFrom(const CWorkshop_SetItemPaymentRules_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_SetItemPaymentRules_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_SetItemPaymentRules_Response";
  }
  protected:
  explicit CWorkshop_SetItemPaymentRules_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CWorkshop_SetItemPaymentRules_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CGCStorePurchaseInit_LineItem

// optional uint32 item_def_id = 1;
inline bool CGCStorePurchaseInit_LineItem::_internal_has_item_def_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CGCStorePurchaseInit_LineItem::has_item_def_id() const {
  return _internal_has_item_def_id();
}
inline void CGCStorePurchaseInit_LineItem::clear_item_def_id() {
  item_def_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCStorePurchaseInit_LineItem::_internal_item_def_id() const {
  return item_def_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCStorePurchaseInit_LineItem::item_def_id() const {
  // @@protoc_insertion_point(field_get:CGCStorePurchaseInit_LineItem.item_def_id)
  return _internal_item_def_id();
}
inline void CGCStorePurchaseInit_LineItem::_internal_set_item_def_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_def_id_ = value;
}
inline void CGCStorePurchaseInit_LineItem::set_item_def_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_def_id(value);
  // @@protoc_insertion_point(field_set:CGCStorePurchaseInit_LineItem.item_def_id)
}

// optional uint32 quantity = 2;
inline bool CGCStorePurchaseInit_LineItem::_internal_has_quantity() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CGCStorePurchaseInit_LineItem::has_quantity() const {
  return _internal_has_quantity();
}
inline void CGCStorePurchaseInit_LineItem::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCStorePurchaseInit_LineItem::_internal_quantity() const {
  return quantity_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCStorePurchaseInit_LineItem::quantity() const {
  // @@protoc_insertion_point(field_get:CGCStorePurchaseInit_LineItem.quantity)
  return _internal_quantity();
}
inline void CGCStorePurchaseInit_LineItem::_internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  quantity_ = value;
}
inline void CGCStorePurchaseInit_LineItem::set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:CGCStorePurchaseInit_LineItem.quantity)
}

// optional uint32 cost_in_local_currency = 3;
inline bool CGCStorePurchaseInit_LineItem::_internal_has_cost_in_local_currency() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CGCStorePurchaseInit_LineItem::has_cost_in_local_currency() const {
  return _internal_has_cost_in_local_currency();
}
inline void CGCStorePurchaseInit_LineItem::clear_cost_in_local_currency() {
  cost_in_local_currency_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCStorePurchaseInit_LineItem::_internal_cost_in_local_currency() const {
  return cost_in_local_currency_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCStorePurchaseInit_LineItem::cost_in_local_currency() const {
  // @@protoc_insertion_point(field_get:CGCStorePurchaseInit_LineItem.cost_in_local_currency)
  return _internal_cost_in_local_currency();
}
inline void CGCStorePurchaseInit_LineItem::_internal_set_cost_in_local_currency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  cost_in_local_currency_ = value;
}
inline void CGCStorePurchaseInit_LineItem::set_cost_in_local_currency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cost_in_local_currency(value);
  // @@protoc_insertion_point(field_set:CGCStorePurchaseInit_LineItem.cost_in_local_currency)
}

// optional uint32 purchase_type = 4;
inline bool CGCStorePurchaseInit_LineItem::_internal_has_purchase_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CGCStorePurchaseInit_LineItem::has_purchase_type() const {
  return _internal_has_purchase_type();
}
inline void CGCStorePurchaseInit_LineItem::clear_purchase_type() {
  purchase_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCStorePurchaseInit_LineItem::_internal_purchase_type() const {
  return purchase_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCStorePurchaseInit_LineItem::purchase_type() const {
  // @@protoc_insertion_point(field_get:CGCStorePurchaseInit_LineItem.purchase_type)
  return _internal_purchase_type();
}
inline void CGCStorePurchaseInit_LineItem::_internal_set_purchase_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  purchase_type_ = value;
}
inline void CGCStorePurchaseInit_LineItem::set_purchase_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_purchase_type(value);
  // @@protoc_insertion_point(field_set:CGCStorePurchaseInit_LineItem.purchase_type)
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseInit

// optional string country = 1;
inline bool CMsgGCStorePurchaseInit::_internal_has_country() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseInit::has_country() const {
  return _internal_has_country();
}
inline void CMsgGCStorePurchaseInit::clear_country() {
  country_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCStorePurchaseInit::country() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInit.country)
  return _internal_country();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCStorePurchaseInit::set_country(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 country_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseInit.country)
}
inline std::string* CMsgGCStorePurchaseInit::mutable_country() {
  // @@protoc_insertion_point(field_mutable:CMsgGCStorePurchaseInit.country)
  return _internal_mutable_country();
}
inline const std::string& CMsgGCStorePurchaseInit::_internal_country() const {
  return country_.Get();
}
inline void CMsgGCStorePurchaseInit::_internal_set_country(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  country_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgGCStorePurchaseInit::_internal_mutable_country() {
  _has_bits_[0] |= 0x00000001u;
  return country_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgGCStorePurchaseInit::release_country() {
  // @@protoc_insertion_point(field_release:CMsgGCStorePurchaseInit.country)
  if (!_internal_has_country()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return country_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgGCStorePurchaseInit::set_allocated_country(std::string* country) {
  if (country != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  country_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), country,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCStorePurchaseInit.country)
}

// optional int32 language = 2;
inline bool CMsgGCStorePurchaseInit::_internal_has_language() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseInit::has_language() const {
  return _internal_has_language();
}
inline void CMsgGCStorePurchaseInit::clear_language() {
  language_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgGCStorePurchaseInit::_internal_language() const {
  return language_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgGCStorePurchaseInit::language() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInit.language)
  return _internal_language();
}
inline void CMsgGCStorePurchaseInit::_internal_set_language(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  language_ = value;
}
inline void CMsgGCStorePurchaseInit::set_language(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseInit.language)
}

// optional int32 currency = 3;
inline bool CMsgGCStorePurchaseInit::_internal_has_currency() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseInit::has_currency() const {
  return _internal_has_currency();
}
inline void CMsgGCStorePurchaseInit::clear_currency() {
  currency_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgGCStorePurchaseInit::_internal_currency() const {
  return currency_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgGCStorePurchaseInit::currency() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInit.currency)
  return _internal_currency();
}
inline void CMsgGCStorePurchaseInit::_internal_set_currency(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  currency_ = value;
}
inline void CMsgGCStorePurchaseInit::set_currency(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseInit.currency)
}

// repeated .CGCStorePurchaseInit_LineItem line_items = 4;
inline int CMsgGCStorePurchaseInit::_internal_line_items_size() const {
  return line_items_.size();
}
inline int CMsgGCStorePurchaseInit::line_items_size() const {
  return _internal_line_items_size();
}
inline void CMsgGCStorePurchaseInit::clear_line_items() {
  line_items_.Clear();
}
inline ::CGCStorePurchaseInit_LineItem* CMsgGCStorePurchaseInit::mutable_line_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCStorePurchaseInit.line_items)
  return line_items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCStorePurchaseInit_LineItem >*
CMsgGCStorePurchaseInit::mutable_line_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCStorePurchaseInit.line_items)
  return &line_items_;
}
inline const ::CGCStorePurchaseInit_LineItem& CMsgGCStorePurchaseInit::_internal_line_items(int index) const {
  return line_items_.Get(index);
}
inline const ::CGCStorePurchaseInit_LineItem& CMsgGCStorePurchaseInit::line_items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInit.line_items)
  return _internal_line_items(index);
}
inline ::CGCStorePurchaseInit_LineItem* CMsgGCStorePurchaseInit::_internal_add_line_items() {
  return line_items_.Add();
}
inline ::CGCStorePurchaseInit_LineItem* CMsgGCStorePurchaseInit::add_line_items() {
  // @@protoc_insertion_point(field_add:CMsgGCStorePurchaseInit.line_items)
  return _internal_add_line_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCStorePurchaseInit_LineItem >&
CMsgGCStorePurchaseInit::line_items() const {
  // @@protoc_insertion_point(field_list:CMsgGCStorePurchaseInit.line_items)
  return line_items_;
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseInitResponse

// optional int32 result = 1;
inline bool CMsgGCStorePurchaseInitResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseInitResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgGCStorePurchaseInitResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgGCStorePurchaseInitResponse::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgGCStorePurchaseInitResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInitResponse.result)
  return _internal_result();
}
inline void CMsgGCStorePurchaseInitResponse::_internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void CMsgGCStorePurchaseInitResponse::set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseInitResponse.result)
}

// optional uint64 txn_id = 2;
inline bool CMsgGCStorePurchaseInitResponse::_internal_has_txn_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseInitResponse::has_txn_id() const {
  return _internal_has_txn_id();
}
inline void CMsgGCStorePurchaseInitResponse::clear_txn_id() {
  txn_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCStorePurchaseInitResponse::_internal_txn_id() const {
  return txn_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCStorePurchaseInitResponse::txn_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInitResponse.txn_id)
  return _internal_txn_id();
}
inline void CMsgGCStorePurchaseInitResponse::_internal_set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  txn_id_ = value;
}
inline void CMsgGCStorePurchaseInitResponse::set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_txn_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseInitResponse.txn_id)
}

// -------------------------------------------------------------------

// CMsgSystemBroadcast

// optional string message = 1;
inline bool CMsgSystemBroadcast::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSystemBroadcast::has_message() const {
  return _internal_has_message();
}
inline void CMsgSystemBroadcast::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSystemBroadcast::message() const {
  // @@protoc_insertion_point(field_get:CMsgSystemBroadcast.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgSystemBroadcast::set_message(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSystemBroadcast.message)
}
inline std::string* CMsgSystemBroadcast::mutable_message() {
  // @@protoc_insertion_point(field_mutable:CMsgSystemBroadcast.message)
  return _internal_mutable_message();
}
inline const std::string& CMsgSystemBroadcast::_internal_message() const {
  return message_.Get();
}
inline void CMsgSystemBroadcast::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgSystemBroadcast::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgSystemBroadcast::release_message() {
  // @@protoc_insertion_point(field_release:CMsgSystemBroadcast.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgSystemBroadcast::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgSystemBroadcast.message)
}

// -------------------------------------------------------------------

// CMsgClientHello

// optional uint32 version = 1;
inline bool CMsgClientHello::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientHello::has_version() const {
  return _internal_has_version();
}
inline void CMsgClientHello::clear_version() {
  version_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::version() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.version)
  return _internal_version();
}
inline void CMsgClientHello::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
}
inline void CMsgClientHello::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.version)
}

// -------------------------------------------------------------------

// CMsgServerHello

// optional uint32 version = 1;
inline bool CMsgServerHello::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgServerHello::has_version() const {
  return _internal_has_version();
}
inline void CMsgServerHello::clear_version() {
  version_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgServerHello::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgServerHello::version() const {
  // @@protoc_insertion_point(field_get:CMsgServerHello.version)
  return _internal_version();
}
inline void CMsgServerHello::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
}
inline void CMsgServerHello::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgServerHello.version)
}

// -------------------------------------------------------------------

// CMsgClientWelcome

// optional uint32 version = 1;
inline bool CMsgClientWelcome::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_version() const {
  return _internal_has_version();
}
inline void CMsgClientWelcome::clear_version() {
  version_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::version() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.version)
  return _internal_version();
}
inline void CMsgClientWelcome::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  version_ = value;
}
inline void CMsgClientWelcome::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.version)
}

// optional bytes game_data = 2;
inline bool CMsgClientWelcome::_internal_has_game_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_game_data() const {
  return _internal_has_game_data();
}
inline void CMsgClientWelcome::clear_game_data() {
  game_data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientWelcome::game_data() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.game_data)
  return _internal_game_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientWelcome::set_game_data(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 game_data_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.game_data)
}
inline std::string* CMsgClientWelcome::mutable_game_data() {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.game_data)
  return _internal_mutable_game_data();
}
inline const std::string& CMsgClientWelcome::_internal_game_data() const {
  return game_data_.Get();
}
inline void CMsgClientWelcome::_internal_set_game_data(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  game_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgClientWelcome::_internal_mutable_game_data() {
  _has_bits_[0] |= 0x00000001u;
  return game_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgClientWelcome::release_game_data() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.game_data)
  if (!_internal_has_game_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return game_data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgClientWelcome::set_allocated_game_data(std::string* game_data) {
  if (game_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  game_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), game_data,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.game_data)
}

// optional string txn_country_code = 3;
inline bool CMsgClientWelcome::_internal_has_txn_country_code() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_txn_country_code() const {
  return _internal_has_txn_country_code();
}
inline void CMsgClientWelcome::clear_txn_country_code() {
  txn_country_code_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientWelcome::txn_country_code() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.txn_country_code)
  return _internal_txn_country_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientWelcome::set_txn_country_code(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 txn_country_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.txn_country_code)
}
inline std::string* CMsgClientWelcome::mutable_txn_country_code() {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.txn_country_code)
  return _internal_mutable_txn_country_code();
}
inline const std::string& CMsgClientWelcome::_internal_txn_country_code() const {
  return txn_country_code_.Get();
}
inline void CMsgClientWelcome::_internal_set_txn_country_code(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  txn_country_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgClientWelcome::_internal_mutable_txn_country_code() {
  _has_bits_[0] |= 0x00000002u;
  return txn_country_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgClientWelcome::release_txn_country_code() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.txn_country_code)
  if (!_internal_has_txn_country_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return txn_country_code_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgClientWelcome::set_allocated_txn_country_code(std::string* txn_country_code) {
  if (txn_country_code != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  txn_country_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), txn_country_code,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.txn_country_code)
}

// -------------------------------------------------------------------

// CMsgServerWelcome

// optional uint32 min_allowed_version = 1;
inline bool CMsgServerWelcome::_internal_has_min_allowed_version() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgServerWelcome::has_min_allowed_version() const {
  return _internal_has_min_allowed_version();
}
inline void CMsgServerWelcome::clear_min_allowed_version() {
  min_allowed_version_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgServerWelcome::_internal_min_allowed_version() const {
  return min_allowed_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgServerWelcome::min_allowed_version() const {
  // @@protoc_insertion_point(field_get:CMsgServerWelcome.min_allowed_version)
  return _internal_min_allowed_version();
}
inline void CMsgServerWelcome::_internal_set_min_allowed_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  min_allowed_version_ = value;
}
inline void CMsgServerWelcome::set_min_allowed_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_min_allowed_version(value);
  // @@protoc_insertion_point(field_set:CMsgServerWelcome.min_allowed_version)
}

// optional uint32 active_version = 2;
inline bool CMsgServerWelcome::_internal_has_active_version() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgServerWelcome::has_active_version() const {
  return _internal_has_active_version();
}
inline void CMsgServerWelcome::clear_active_version() {
  active_version_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgServerWelcome::_internal_active_version() const {
  return active_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgServerWelcome::active_version() const {
  // @@protoc_insertion_point(field_get:CMsgServerWelcome.active_version)
  return _internal_active_version();
}
inline void CMsgServerWelcome::_internal_set_active_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  active_version_ = value;
}
inline void CMsgServerWelcome::set_active_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_active_version(value);
  // @@protoc_insertion_point(field_set:CMsgServerWelcome.active_version)
}

// -------------------------------------------------------------------

// CMsgClientGoodbye

// optional .GCGoodbyeReason reason = 1 [default = GCGoodbyeReason_GC_GOING_DOWN];
inline bool CMsgClientGoodbye::_internal_has_reason() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGoodbye::has_reason() const {
  return _internal_has_reason();
}
inline void CMsgClientGoodbye::clear_reason() {
  reason_ = 1;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::GCGoodbyeReason CMsgClientGoodbye::_internal_reason() const {
  return static_cast< ::GCGoodbyeReason >(reason_);
}
inline ::GCGoodbyeReason CMsgClientGoodbye::reason() const {
  // @@protoc_insertion_point(field_get:CMsgClientGoodbye.reason)
  return _internal_reason();
}
inline void CMsgClientGoodbye::_internal_set_reason(::GCGoodbyeReason value) {
  assert(::GCGoodbyeReason_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  reason_ = value;
}
inline void CMsgClientGoodbye::set_reason(::GCGoodbyeReason value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:CMsgClientGoodbye.reason)
}

// -------------------------------------------------------------------

// CMsgServerGoodbye

// optional .GCGoodbyeReason reason = 1 [default = GCGoodbyeReason_GC_GOING_DOWN];
inline bool CMsgServerGoodbye::_internal_has_reason() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgServerGoodbye::has_reason() const {
  return _internal_has_reason();
}
inline void CMsgServerGoodbye::clear_reason() {
  reason_ = 1;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::GCGoodbyeReason CMsgServerGoodbye::_internal_reason() const {
  return static_cast< ::GCGoodbyeReason >(reason_);
}
inline ::GCGoodbyeReason CMsgServerGoodbye::reason() const {
  // @@protoc_insertion_point(field_get:CMsgServerGoodbye.reason)
  return _internal_reason();
}
inline void CMsgServerGoodbye::_internal_set_reason(::GCGoodbyeReason value) {
  assert(::GCGoodbyeReason_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  reason_ = value;
}
inline void CMsgServerGoodbye::set_reason(::GCGoodbyeReason value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:CMsgServerGoodbye.reason)
}

// -------------------------------------------------------------------

// CMsgServerAvailable

// -------------------------------------------------------------------

// CMsgLANServerAvailable

// optional fixed64 lobby_id = 1;
inline bool CMsgLANServerAvailable::_internal_has_lobby_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgLANServerAvailable::has_lobby_id() const {
  return _internal_has_lobby_id();
}
inline void CMsgLANServerAvailable::clear_lobby_id() {
  lobby_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgLANServerAvailable::_internal_lobby_id() const {
  return lobby_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgLANServerAvailable::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgLANServerAvailable.lobby_id)
  return _internal_lobby_id();
}
inline void CMsgLANServerAvailable::_internal_set_lobby_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  lobby_id_ = value;
}
inline void CMsgLANServerAvailable::set_lobby_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgLANServerAvailable.lobby_id)
}

// -------------------------------------------------------------------

// CSOEconGameAccountClient

// optional uint32 additional_backpack_slots = 1 [default = 0];
inline bool CSOEconGameAccountClient::_internal_has_additional_backpack_slots() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_additional_backpack_slots() const {
  return _internal_has_additional_backpack_slots();
}
inline void CSOEconGameAccountClient::clear_additional_backpack_slots() {
  additional_backpack_slots_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_additional_backpack_slots() const {
  return additional_backpack_slots_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::additional_backpack_slots() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.additional_backpack_slots)
  return _internal_additional_backpack_slots();
}
inline void CSOEconGameAccountClient::_internal_set_additional_backpack_slots(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  additional_backpack_slots_ = value;
}
inline void CSOEconGameAccountClient::set_additional_backpack_slots(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_additional_backpack_slots(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.additional_backpack_slots)
}

// optional bool trial_account = 2 [default = false];
inline bool CSOEconGameAccountClient::_internal_has_trial_account() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_trial_account() const {
  return _internal_has_trial_account();
}
inline void CSOEconGameAccountClient::clear_trial_account() {
  trial_account_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CSOEconGameAccountClient::_internal_trial_account() const {
  return trial_account_;
}
inline bool CSOEconGameAccountClient::trial_account() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.trial_account)
  return _internal_trial_account();
}
inline void CSOEconGameAccountClient::_internal_set_trial_account(bool value) {
  _has_bits_[0] |= 0x00000008u;
  trial_account_ = value;
}
inline void CSOEconGameAccountClient::set_trial_account(bool value) {
  _internal_set_trial_account(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.trial_account)
}

// optional bool need_to_choose_most_helpful_friend = 4;
inline bool CSOEconGameAccountClient::_internal_has_need_to_choose_most_helpful_friend() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_need_to_choose_most_helpful_friend() const {
  return _internal_has_need_to_choose_most_helpful_friend();
}
inline void CSOEconGameAccountClient::clear_need_to_choose_most_helpful_friend() {
  need_to_choose_most_helpful_friend_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CSOEconGameAccountClient::_internal_need_to_choose_most_helpful_friend() const {
  return need_to_choose_most_helpful_friend_;
}
inline bool CSOEconGameAccountClient::need_to_choose_most_helpful_friend() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.need_to_choose_most_helpful_friend)
  return _internal_need_to_choose_most_helpful_friend();
}
inline void CSOEconGameAccountClient::_internal_set_need_to_choose_most_helpful_friend(bool value) {
  _has_bits_[0] |= 0x00000010u;
  need_to_choose_most_helpful_friend_ = value;
}
inline void CSOEconGameAccountClient::set_need_to_choose_most_helpful_friend(bool value) {
  _internal_set_need_to_choose_most_helpful_friend(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.need_to_choose_most_helpful_friend)
}

// optional bool in_coaches_list = 5;
inline bool CSOEconGameAccountClient::_internal_has_in_coaches_list() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_in_coaches_list() const {
  return _internal_has_in_coaches_list();
}
inline void CSOEconGameAccountClient::clear_in_coaches_list() {
  in_coaches_list_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CSOEconGameAccountClient::_internal_in_coaches_list() const {
  return in_coaches_list_;
}
inline bool CSOEconGameAccountClient::in_coaches_list() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.in_coaches_list)
  return _internal_in_coaches_list();
}
inline void CSOEconGameAccountClient::_internal_set_in_coaches_list(bool value) {
  _has_bits_[0] |= 0x00000020u;
  in_coaches_list_ = value;
}
inline void CSOEconGameAccountClient::set_in_coaches_list(bool value) {
  _internal_set_in_coaches_list(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.in_coaches_list)
}

// optional fixed32 trade_ban_expiration = 6;
inline bool CSOEconGameAccountClient::_internal_has_trade_ban_expiration() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_trade_ban_expiration() const {
  return _internal_has_trade_ban_expiration();
}
inline void CSOEconGameAccountClient::clear_trade_ban_expiration() {
  trade_ban_expiration_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_trade_ban_expiration() const {
  return trade_ban_expiration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::trade_ban_expiration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.trade_ban_expiration)
  return _internal_trade_ban_expiration();
}
inline void CSOEconGameAccountClient::_internal_set_trade_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  trade_ban_expiration_ = value;
}
inline void CSOEconGameAccountClient::set_trade_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_trade_ban_expiration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.trade_ban_expiration)
}

// optional fixed32 duel_ban_expiration = 7;
inline bool CSOEconGameAccountClient::_internal_has_duel_ban_expiration() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_duel_ban_expiration() const {
  return _internal_has_duel_ban_expiration();
}
inline void CSOEconGameAccountClient::clear_duel_ban_expiration() {
  duel_ban_expiration_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_duel_ban_expiration() const {
  return duel_ban_expiration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::duel_ban_expiration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.duel_ban_expiration)
  return _internal_duel_ban_expiration();
}
inline void CSOEconGameAccountClient::_internal_set_duel_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  duel_ban_expiration_ = value;
}
inline void CSOEconGameAccountClient::set_duel_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_duel_ban_expiration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.duel_ban_expiration)
}

// optional uint32 preview_item_def = 8 [default = 0];
inline bool CSOEconGameAccountClient::_internal_has_preview_item_def() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_preview_item_def() const {
  return _internal_has_preview_item_def();
}
inline void CSOEconGameAccountClient::clear_preview_item_def() {
  preview_item_def_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_preview_item_def() const {
  return preview_item_def_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::preview_item_def() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.preview_item_def)
  return _internal_preview_item_def();
}
inline void CSOEconGameAccountClient::_internal_set_preview_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  preview_item_def_ = value;
}
inline void CSOEconGameAccountClient::set_preview_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preview_item_def(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.preview_item_def)
}

// optional bool phone_verified = 19 [default = false];
inline bool CSOEconGameAccountClient::_internal_has_phone_verified() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_phone_verified() const {
  return _internal_has_phone_verified();
}
inline void CSOEconGameAccountClient::clear_phone_verified() {
  phone_verified_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CSOEconGameAccountClient::_internal_phone_verified() const {
  return phone_verified_;
}
inline bool CSOEconGameAccountClient::phone_verified() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.phone_verified)
  return _internal_phone_verified();
}
inline void CSOEconGameAccountClient::_internal_set_phone_verified(bool value) {
  _has_bits_[0] |= 0x00000040u;
  phone_verified_ = value;
}
inline void CSOEconGameAccountClient::set_phone_verified(bool value) {
  _internal_set_phone_verified(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.phone_verified)
}

// optional uint32 skill_rating_6v6 = 20;
inline bool CSOEconGameAccountClient::_internal_has_skill_rating_6v6() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_skill_rating_6v6() const {
  return _internal_has_skill_rating_6v6();
}
inline void CSOEconGameAccountClient::clear_skill_rating_6v6() {
  skill_rating_6v6_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_skill_rating_6v6() const {
  return skill_rating_6v6_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::skill_rating_6v6() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.skill_rating_6v6)
  return _internal_skill_rating_6v6();
}
inline void CSOEconGameAccountClient::_internal_set_skill_rating_6v6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  skill_rating_6v6_ = value;
}
inline void CSOEconGameAccountClient::set_skill_rating_6v6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skill_rating_6v6(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.skill_rating_6v6)
}

// optional uint32 skill_rating_9v9 = 21;
inline bool CSOEconGameAccountClient::_internal_has_skill_rating_9v9() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_skill_rating_9v9() const {
  return _internal_has_skill_rating_9v9();
}
inline void CSOEconGameAccountClient::clear_skill_rating_9v9() {
  skill_rating_9v9_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_skill_rating_9v9() const {
  return skill_rating_9v9_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::skill_rating_9v9() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.skill_rating_9v9)
  return _internal_skill_rating_9v9();
}
inline void CSOEconGameAccountClient::_internal_set_skill_rating_9v9(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  skill_rating_9v9_ = value;
}
inline void CSOEconGameAccountClient::set_skill_rating_9v9(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skill_rating_9v9(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.skill_rating_9v9)
}

// optional bool competitive_access = 23 [default = false];
inline bool CSOEconGameAccountClient::_internal_has_competitive_access() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_competitive_access() const {
  return _internal_has_competitive_access();
}
inline void CSOEconGameAccountClient::clear_competitive_access() {
  competitive_access_ = false;
  _has_bits_[0] &= ~0x00020000u;
}
inline bool CSOEconGameAccountClient::_internal_competitive_access() const {
  return competitive_access_;
}
inline bool CSOEconGameAccountClient::competitive_access() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.competitive_access)
  return _internal_competitive_access();
}
inline void CSOEconGameAccountClient::_internal_set_competitive_access(bool value) {
  _has_bits_[0] |= 0x00020000u;
  competitive_access_ = value;
}
inline void CSOEconGameAccountClient::set_competitive_access(bool value) {
  _internal_set_competitive_access(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.competitive_access)
}

// optional uint32 matchmaking_ranked_ban_expiration = 18;
inline bool CSOEconGameAccountClient::_internal_has_matchmaking_ranked_ban_expiration() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_matchmaking_ranked_ban_expiration() const {
  return _internal_has_matchmaking_ranked_ban_expiration();
}
inline void CSOEconGameAccountClient::clear_matchmaking_ranked_ban_expiration() {
  matchmaking_ranked_ban_expiration_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_matchmaking_ranked_ban_expiration() const {
  return matchmaking_ranked_ban_expiration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::matchmaking_ranked_ban_expiration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.matchmaking_ranked_ban_expiration)
  return _internal_matchmaking_ranked_ban_expiration();
}
inline void CSOEconGameAccountClient::_internal_set_matchmaking_ranked_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  matchmaking_ranked_ban_expiration_ = value;
}
inline void CSOEconGameAccountClient::set_matchmaking_ranked_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matchmaking_ranked_ban_expiration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.matchmaking_ranked_ban_expiration)
}

// optional uint32 matchmaking_ranked_low_priority_expiration = 24;
inline bool CSOEconGameAccountClient::_internal_has_matchmaking_ranked_low_priority_expiration() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_matchmaking_ranked_low_priority_expiration() const {
  return _internal_has_matchmaking_ranked_low_priority_expiration();
}
inline void CSOEconGameAccountClient::clear_matchmaking_ranked_low_priority_expiration() {
  matchmaking_ranked_low_priority_expiration_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_matchmaking_ranked_low_priority_expiration() const {
  return matchmaking_ranked_low_priority_expiration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::matchmaking_ranked_low_priority_expiration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.matchmaking_ranked_low_priority_expiration)
  return _internal_matchmaking_ranked_low_priority_expiration();
}
inline void CSOEconGameAccountClient::_internal_set_matchmaking_ranked_low_priority_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  matchmaking_ranked_low_priority_expiration_ = value;
}
inline void CSOEconGameAccountClient::set_matchmaking_ranked_low_priority_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matchmaking_ranked_low_priority_expiration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.matchmaking_ranked_low_priority_expiration)
}

// optional uint32 matchmaking_ranked_ban_last_duration = 25;
inline bool CSOEconGameAccountClient::_internal_has_matchmaking_ranked_ban_last_duration() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_matchmaking_ranked_ban_last_duration() const {
  return _internal_has_matchmaking_ranked_ban_last_duration();
}
inline void CSOEconGameAccountClient::clear_matchmaking_ranked_ban_last_duration() {
  matchmaking_ranked_ban_last_duration_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_matchmaking_ranked_ban_last_duration() const {
  return matchmaking_ranked_ban_last_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::matchmaking_ranked_ban_last_duration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.matchmaking_ranked_ban_last_duration)
  return _internal_matchmaking_ranked_ban_last_duration();
}
inline void CSOEconGameAccountClient::_internal_set_matchmaking_ranked_ban_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  matchmaking_ranked_ban_last_duration_ = value;
}
inline void CSOEconGameAccountClient::set_matchmaking_ranked_ban_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matchmaking_ranked_ban_last_duration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.matchmaking_ranked_ban_last_duration)
}

// optional uint32 matchmaking_ranked_low_priority_last_duration = 26;
inline bool CSOEconGameAccountClient::_internal_has_matchmaking_ranked_low_priority_last_duration() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_matchmaking_ranked_low_priority_last_duration() const {
  return _internal_has_matchmaking_ranked_low_priority_last_duration();
}
inline void CSOEconGameAccountClient::clear_matchmaking_ranked_low_priority_last_duration() {
  matchmaking_ranked_low_priority_last_duration_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_matchmaking_ranked_low_priority_last_duration() const {
  return matchmaking_ranked_low_priority_last_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::matchmaking_ranked_low_priority_last_duration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.matchmaking_ranked_low_priority_last_duration)
  return _internal_matchmaking_ranked_low_priority_last_duration();
}
inline void CSOEconGameAccountClient::_internal_set_matchmaking_ranked_low_priority_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  matchmaking_ranked_low_priority_last_duration_ = value;
}
inline void CSOEconGameAccountClient::set_matchmaking_ranked_low_priority_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matchmaking_ranked_low_priority_last_duration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.matchmaking_ranked_low_priority_last_duration)
}

// optional uint32 matchmaking_casual_ban_expiration = 27;
inline bool CSOEconGameAccountClient::_internal_has_matchmaking_casual_ban_expiration() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_matchmaking_casual_ban_expiration() const {
  return _internal_has_matchmaking_casual_ban_expiration();
}
inline void CSOEconGameAccountClient::clear_matchmaking_casual_ban_expiration() {
  matchmaking_casual_ban_expiration_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_matchmaking_casual_ban_expiration() const {
  return matchmaking_casual_ban_expiration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::matchmaking_casual_ban_expiration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.matchmaking_casual_ban_expiration)
  return _internal_matchmaking_casual_ban_expiration();
}
inline void CSOEconGameAccountClient::_internal_set_matchmaking_casual_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  matchmaking_casual_ban_expiration_ = value;
}
inline void CSOEconGameAccountClient::set_matchmaking_casual_ban_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matchmaking_casual_ban_expiration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.matchmaking_casual_ban_expiration)
}

// optional uint32 matchmaking_casual_low_priority_expiration = 28;
inline bool CSOEconGameAccountClient::_internal_has_matchmaking_casual_low_priority_expiration() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_matchmaking_casual_low_priority_expiration() const {
  return _internal_has_matchmaking_casual_low_priority_expiration();
}
inline void CSOEconGameAccountClient::clear_matchmaking_casual_low_priority_expiration() {
  matchmaking_casual_low_priority_expiration_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_matchmaking_casual_low_priority_expiration() const {
  return matchmaking_casual_low_priority_expiration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::matchmaking_casual_low_priority_expiration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.matchmaking_casual_low_priority_expiration)
  return _internal_matchmaking_casual_low_priority_expiration();
}
inline void CSOEconGameAccountClient::_internal_set_matchmaking_casual_low_priority_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  matchmaking_casual_low_priority_expiration_ = value;
}
inline void CSOEconGameAccountClient::set_matchmaking_casual_low_priority_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matchmaking_casual_low_priority_expiration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.matchmaking_casual_low_priority_expiration)
}

// optional uint32 matchmaking_casual_ban_last_duration = 29;
inline bool CSOEconGameAccountClient::_internal_has_matchmaking_casual_ban_last_duration() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_matchmaking_casual_ban_last_duration() const {
  return _internal_has_matchmaking_casual_ban_last_duration();
}
inline void CSOEconGameAccountClient::clear_matchmaking_casual_ban_last_duration() {
  matchmaking_casual_ban_last_duration_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_matchmaking_casual_ban_last_duration() const {
  return matchmaking_casual_ban_last_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::matchmaking_casual_ban_last_duration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.matchmaking_casual_ban_last_duration)
  return _internal_matchmaking_casual_ban_last_duration();
}
inline void CSOEconGameAccountClient::_internal_set_matchmaking_casual_ban_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  matchmaking_casual_ban_last_duration_ = value;
}
inline void CSOEconGameAccountClient::set_matchmaking_casual_ban_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matchmaking_casual_ban_last_duration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.matchmaking_casual_ban_last_duration)
}

// optional uint32 matchmaking_casual_low_priority_last_duration = 30;
inline bool CSOEconGameAccountClient::_internal_has_matchmaking_casual_low_priority_last_duration() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_matchmaking_casual_low_priority_last_duration() const {
  return _internal_has_matchmaking_casual_low_priority_last_duration();
}
inline void CSOEconGameAccountClient::clear_matchmaking_casual_low_priority_last_duration() {
  matchmaking_casual_low_priority_last_duration_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_matchmaking_casual_low_priority_last_duration() const {
  return matchmaking_casual_low_priority_last_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::matchmaking_casual_low_priority_last_duration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.matchmaking_casual_low_priority_last_duration)
  return _internal_matchmaking_casual_low_priority_last_duration();
}
inline void CSOEconGameAccountClient::_internal_set_matchmaking_casual_low_priority_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  matchmaking_casual_low_priority_last_duration_ = value;
}
inline void CSOEconGameAccountClient::set_matchmaking_casual_low_priority_last_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matchmaking_casual_low_priority_last_duration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.matchmaking_casual_low_priority_last_duration)
}

// optional bool phone_identifying = 31 [default = false];
inline bool CSOEconGameAccountClient::_internal_has_phone_identifying() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_phone_identifying() const {
  return _internal_has_phone_identifying();
}
inline void CSOEconGameAccountClient::clear_phone_identifying() {
  phone_identifying_ = false;
  _has_bits_[0] &= ~0x00040000u;
}
inline bool CSOEconGameAccountClient::_internal_phone_identifying() const {
  return phone_identifying_;
}
inline bool CSOEconGameAccountClient::phone_identifying() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.phone_identifying)
  return _internal_phone_identifying();
}
inline void CSOEconGameAccountClient::_internal_set_phone_identifying(bool value) {
  _has_bits_[0] |= 0x00040000u;
  phone_identifying_ = value;
}
inline void CSOEconGameAccountClient::set_phone_identifying(bool value) {
  _internal_set_phone_identifying(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.phone_identifying)
}

// optional bool disable_party_quest_progress = 32 [default = false];
inline bool CSOEconGameAccountClient::_internal_has_disable_party_quest_progress() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_disable_party_quest_progress() const {
  return _internal_has_disable_party_quest_progress();
}
inline void CSOEconGameAccountClient::clear_disable_party_quest_progress() {
  disable_party_quest_progress_ = false;
  _has_bits_[0] &= ~0x00080000u;
}
inline bool CSOEconGameAccountClient::_internal_disable_party_quest_progress() const {
  return disable_party_quest_progress_;
}
inline bool CSOEconGameAccountClient::disable_party_quest_progress() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.disable_party_quest_progress)
  return _internal_disable_party_quest_progress();
}
inline void CSOEconGameAccountClient::_internal_set_disable_party_quest_progress(bool value) {
  _has_bits_[0] |= 0x00080000u;
  disable_party_quest_progress_ = value;
}
inline void CSOEconGameAccountClient::set_disable_party_quest_progress(bool value) {
  _internal_set_disable_party_quest_progress(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.disable_party_quest_progress)
}

// optional uint32 quest_reward_credits = 33;
inline bool CSOEconGameAccountClient::_internal_has_quest_reward_credits() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_quest_reward_credits() const {
  return _internal_has_quest_reward_credits();
}
inline void CSOEconGameAccountClient::clear_quest_reward_credits() {
  quest_reward_credits_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_quest_reward_credits() const {
  return quest_reward_credits_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::quest_reward_credits() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.quest_reward_credits)
  return _internal_quest_reward_credits();
}
inline void CSOEconGameAccountClient::_internal_set_quest_reward_credits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  quest_reward_credits_ = value;
}
inline void CSOEconGameAccountClient::set_quest_reward_credits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quest_reward_credits(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.quest_reward_credits)
}

// optional uint32 matchmaking_last_casual_excessive_reports_auto_ban_time = 34;
inline bool CSOEconGameAccountClient::_internal_has_matchmaking_last_casual_excessive_reports_auto_ban_time() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_matchmaking_last_casual_excessive_reports_auto_ban_time() const {
  return _internal_has_matchmaking_last_casual_excessive_reports_auto_ban_time();
}
inline void CSOEconGameAccountClient::clear_matchmaking_last_casual_excessive_reports_auto_ban_time() {
  matchmaking_last_casual_excessive_reports_auto_ban_time_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_matchmaking_last_casual_excessive_reports_auto_ban_time() const {
  return matchmaking_last_casual_excessive_reports_auto_ban_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::matchmaking_last_casual_excessive_reports_auto_ban_time() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.matchmaking_last_casual_excessive_reports_auto_ban_time)
  return _internal_matchmaking_last_casual_excessive_reports_auto_ban_time();
}
inline void CSOEconGameAccountClient::_internal_set_matchmaking_last_casual_excessive_reports_auto_ban_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  matchmaking_last_casual_excessive_reports_auto_ban_time_ = value;
}
inline void CSOEconGameAccountClient::set_matchmaking_last_casual_excessive_reports_auto_ban_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matchmaking_last_casual_excessive_reports_auto_ban_time(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.matchmaking_last_casual_excessive_reports_auto_ban_time)
}

// optional uint32 matchmaking_last_comp_excessive_reports_auto_ban_time = 35;
inline bool CSOEconGameAccountClient::_internal_has_matchmaking_last_comp_excessive_reports_auto_ban_time() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_matchmaking_last_comp_excessive_reports_auto_ban_time() const {
  return _internal_has_matchmaking_last_comp_excessive_reports_auto_ban_time();
}
inline void CSOEconGameAccountClient::clear_matchmaking_last_comp_excessive_reports_auto_ban_time() {
  matchmaking_last_comp_excessive_reports_auto_ban_time_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::_internal_matchmaking_last_comp_excessive_reports_auto_ban_time() const {
  return matchmaking_last_comp_excessive_reports_auto_ban_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconGameAccountClient::matchmaking_last_comp_excessive_reports_auto_ban_time() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.matchmaking_last_comp_excessive_reports_auto_ban_time)
  return _internal_matchmaking_last_comp_excessive_reports_auto_ban_time();
}
inline void CSOEconGameAccountClient::_internal_set_matchmaking_last_comp_excessive_reports_auto_ban_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  matchmaking_last_comp_excessive_reports_auto_ban_time_ = value;
}
inline void CSOEconGameAccountClient::set_matchmaking_last_comp_excessive_reports_auto_ban_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matchmaking_last_comp_excessive_reports_auto_ban_time(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.matchmaking_last_comp_excessive_reports_auto_ban_time)
}

// -------------------------------------------------------------------

// CSOItemCriteriaCondition

// optional int32 op = 1;
inline bool CSOItemCriteriaCondition::_internal_has_op() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOItemCriteriaCondition::has_op() const {
  return _internal_has_op();
}
inline void CSOItemCriteriaCondition::clear_op() {
  op_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CSOItemCriteriaCondition::_internal_op() const {
  return op_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CSOItemCriteriaCondition::op() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteriaCondition.op)
  return _internal_op();
}
inline void CSOItemCriteriaCondition::_internal_set_op(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  op_ = value;
}
inline void CSOItemCriteriaCondition::set_op(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_op(value);
  // @@protoc_insertion_point(field_set:CSOItemCriteriaCondition.op)
}

// optional string field = 2;
inline bool CSOItemCriteriaCondition::_internal_has_field() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOItemCriteriaCondition::has_field() const {
  return _internal_has_field();
}
inline void CSOItemCriteriaCondition::clear_field() {
  field_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CSOItemCriteriaCondition::field() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteriaCondition.field)
  return _internal_field();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemCriteriaCondition::set_field(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 field_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemCriteriaCondition.field)
}
inline std::string* CSOItemCriteriaCondition::mutable_field() {
  // @@protoc_insertion_point(field_mutable:CSOItemCriteriaCondition.field)
  return _internal_mutable_field();
}
inline const std::string& CSOItemCriteriaCondition::_internal_field() const {
  return field_.Get();
}
inline void CSOItemCriteriaCondition::_internal_set_field(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  field_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemCriteriaCondition::_internal_mutable_field() {
  _has_bits_[0] |= 0x00000001u;
  return field_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemCriteriaCondition::release_field() {
  // @@protoc_insertion_point(field_release:CSOItemCriteriaCondition.field)
  if (!_internal_has_field()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return field_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemCriteriaCondition::set_allocated_field(std::string* field) {
  if (field != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  field_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemCriteriaCondition.field)
}

// optional bool required = 3;
inline bool CSOItemCriteriaCondition::_internal_has_required() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOItemCriteriaCondition::has_required() const {
  return _internal_has_required();
}
inline void CSOItemCriteriaCondition::clear_required() {
  required_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CSOItemCriteriaCondition::_internal_required() const {
  return required_;
}
inline bool CSOItemCriteriaCondition::required() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteriaCondition.required)
  return _internal_required();
}
inline void CSOItemCriteriaCondition::_internal_set_required(bool value) {
  _has_bits_[0] |= 0x00000008u;
  required_ = value;
}
inline void CSOItemCriteriaCondition::set_required(bool value) {
  _internal_set_required(value);
  // @@protoc_insertion_point(field_set:CSOItemCriteriaCondition.required)
}

// optional float float_value = 4;
inline bool CSOItemCriteriaCondition::_internal_has_float_value() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOItemCriteriaCondition::has_float_value() const {
  return _internal_has_float_value();
}
inline void CSOItemCriteriaCondition::clear_float_value() {
  float_value_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CSOItemCriteriaCondition::_internal_float_value() const {
  return float_value_;
}
inline float CSOItemCriteriaCondition::float_value() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteriaCondition.float_value)
  return _internal_float_value();
}
inline void CSOItemCriteriaCondition::_internal_set_float_value(float value) {
  _has_bits_[0] |= 0x00000010u;
  float_value_ = value;
}
inline void CSOItemCriteriaCondition::set_float_value(float value) {
  _internal_set_float_value(value);
  // @@protoc_insertion_point(field_set:CSOItemCriteriaCondition.float_value)
}

// optional string string_value = 5;
inline bool CSOItemCriteriaCondition::_internal_has_string_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOItemCriteriaCondition::has_string_value() const {
  return _internal_has_string_value();
}
inline void CSOItemCriteriaCondition::clear_string_value() {
  string_value_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CSOItemCriteriaCondition::string_value() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteriaCondition.string_value)
  return _internal_string_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemCriteriaCondition::set_string_value(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 string_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemCriteriaCondition.string_value)
}
inline std::string* CSOItemCriteriaCondition::mutable_string_value() {
  // @@protoc_insertion_point(field_mutable:CSOItemCriteriaCondition.string_value)
  return _internal_mutable_string_value();
}
inline const std::string& CSOItemCriteriaCondition::_internal_string_value() const {
  return string_value_.Get();
}
inline void CSOItemCriteriaCondition::_internal_set_string_value(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  string_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemCriteriaCondition::_internal_mutable_string_value() {
  _has_bits_[0] |= 0x00000002u;
  return string_value_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemCriteriaCondition::release_string_value() {
  // @@protoc_insertion_point(field_release:CSOItemCriteriaCondition.string_value)
  if (!_internal_has_string_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return string_value_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemCriteriaCondition::set_allocated_string_value(std::string* string_value) {
  if (string_value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  string_value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), string_value,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemCriteriaCondition.string_value)
}

// -------------------------------------------------------------------

// CSOItemCriteria

// optional uint32 item_level = 1;
inline bool CSOItemCriteria::_internal_has_item_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOItemCriteria::has_item_level() const {
  return _internal_has_item_level();
}
inline void CSOItemCriteria::clear_item_level() {
  item_level_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOItemCriteria::_internal_item_level() const {
  return item_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOItemCriteria::item_level() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteria.item_level)
  return _internal_item_level();
}
inline void CSOItemCriteria::_internal_set_item_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  item_level_ = value;
}
inline void CSOItemCriteria::set_item_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_level(value);
  // @@protoc_insertion_point(field_set:CSOItemCriteria.item_level)
}

// optional int32 item_quality = 2;
inline bool CSOItemCriteria::_internal_has_item_quality() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOItemCriteria::has_item_quality() const {
  return _internal_has_item_quality();
}
inline void CSOItemCriteria::clear_item_quality() {
  item_quality_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CSOItemCriteria::_internal_item_quality() const {
  return item_quality_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CSOItemCriteria::item_quality() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteria.item_quality)
  return _internal_item_quality();
}
inline void CSOItemCriteria::_internal_set_item_quality(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  item_quality_ = value;
}
inline void CSOItemCriteria::set_item_quality(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_quality(value);
  // @@protoc_insertion_point(field_set:CSOItemCriteria.item_quality)
}

// optional bool item_level_set = 3;
inline bool CSOItemCriteria::_internal_has_item_level_set() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CSOItemCriteria::has_item_level_set() const {
  return _internal_has_item_level_set();
}
inline void CSOItemCriteria::clear_item_level_set() {
  item_level_set_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CSOItemCriteria::_internal_item_level_set() const {
  return item_level_set_;
}
inline bool CSOItemCriteria::item_level_set() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteria.item_level_set)
  return _internal_item_level_set();
}
inline void CSOItemCriteria::_internal_set_item_level_set(bool value) {
  _has_bits_[0] |= 0x00000040u;
  item_level_set_ = value;
}
inline void CSOItemCriteria::set_item_level_set(bool value) {
  _internal_set_item_level_set(value);
  // @@protoc_insertion_point(field_set:CSOItemCriteria.item_level_set)
}

// optional bool item_quality_set = 4;
inline bool CSOItemCriteria::_internal_has_item_quality_set() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CSOItemCriteria::has_item_quality_set() const {
  return _internal_has_item_quality_set();
}
inline void CSOItemCriteria::clear_item_quality_set() {
  item_quality_set_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CSOItemCriteria::_internal_item_quality_set() const {
  return item_quality_set_;
}
inline bool CSOItemCriteria::item_quality_set() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteria.item_quality_set)
  return _internal_item_quality_set();
}
inline void CSOItemCriteria::_internal_set_item_quality_set(bool value) {
  _has_bits_[0] |= 0x00000080u;
  item_quality_set_ = value;
}
inline void CSOItemCriteria::set_item_quality_set(bool value) {
  _internal_set_item_quality_set(value);
  // @@protoc_insertion_point(field_set:CSOItemCriteria.item_quality_set)
}

// optional uint32 initial_inventory = 5;
inline bool CSOItemCriteria::_internal_has_initial_inventory() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOItemCriteria::has_initial_inventory() const {
  return _internal_has_initial_inventory();
}
inline void CSOItemCriteria::clear_initial_inventory() {
  initial_inventory_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOItemCriteria::_internal_initial_inventory() const {
  return initial_inventory_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOItemCriteria::initial_inventory() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteria.initial_inventory)
  return _internal_initial_inventory();
}
inline void CSOItemCriteria::_internal_set_initial_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  initial_inventory_ = value;
}
inline void CSOItemCriteria::set_initial_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_initial_inventory(value);
  // @@protoc_insertion_point(field_set:CSOItemCriteria.initial_inventory)
}

// optional uint32 initial_quantity = 6;
inline bool CSOItemCriteria::_internal_has_initial_quantity() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CSOItemCriteria::has_initial_quantity() const {
  return _internal_has_initial_quantity();
}
inline void CSOItemCriteria::clear_initial_quantity() {
  initial_quantity_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOItemCriteria::_internal_initial_quantity() const {
  return initial_quantity_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOItemCriteria::initial_quantity() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteria.initial_quantity)
  return _internal_initial_quantity();
}
inline void CSOItemCriteria::_internal_set_initial_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  initial_quantity_ = value;
}
inline void CSOItemCriteria::set_initial_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_initial_quantity(value);
  // @@protoc_insertion_point(field_set:CSOItemCriteria.initial_quantity)
}

// optional bool ignore_enabled_flag = 8;
inline bool CSOItemCriteria::_internal_has_ignore_enabled_flag() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CSOItemCriteria::has_ignore_enabled_flag() const {
  return _internal_has_ignore_enabled_flag();
}
inline void CSOItemCriteria::clear_ignore_enabled_flag() {
  ignore_enabled_flag_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CSOItemCriteria::_internal_ignore_enabled_flag() const {
  return ignore_enabled_flag_;
}
inline bool CSOItemCriteria::ignore_enabled_flag() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteria.ignore_enabled_flag)
  return _internal_ignore_enabled_flag();
}
inline void CSOItemCriteria::_internal_set_ignore_enabled_flag(bool value) {
  _has_bits_[0] |= 0x00000100u;
  ignore_enabled_flag_ = value;
}
inline void CSOItemCriteria::set_ignore_enabled_flag(bool value) {
  _internal_set_ignore_enabled_flag(value);
  // @@protoc_insertion_point(field_set:CSOItemCriteria.ignore_enabled_flag)
}

// repeated .CSOItemCriteriaCondition conditions = 9;
inline int CSOItemCriteria::_internal_conditions_size() const {
  return conditions_.size();
}
inline int CSOItemCriteria::conditions_size() const {
  return _internal_conditions_size();
}
inline void CSOItemCriteria::clear_conditions() {
  conditions_.Clear();
}
inline ::CSOItemCriteriaCondition* CSOItemCriteria::mutable_conditions(int index) {
  // @@protoc_insertion_point(field_mutable:CSOItemCriteria.conditions)
  return conditions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteriaCondition >*
CSOItemCriteria::mutable_conditions() {
  // @@protoc_insertion_point(field_mutable_list:CSOItemCriteria.conditions)
  return &conditions_;
}
inline const ::CSOItemCriteriaCondition& CSOItemCriteria::_internal_conditions(int index) const {
  return conditions_.Get(index);
}
inline const ::CSOItemCriteriaCondition& CSOItemCriteria::conditions(int index) const {
  // @@protoc_insertion_point(field_get:CSOItemCriteria.conditions)
  return _internal_conditions(index);
}
inline ::CSOItemCriteriaCondition* CSOItemCriteria::_internal_add_conditions() {
  return conditions_.Add();
}
inline ::CSOItemCriteriaCondition* CSOItemCriteria::add_conditions() {
  // @@protoc_insertion_point(field_add:CSOItemCriteria.conditions)
  return _internal_add_conditions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteriaCondition >&
CSOItemCriteria::conditions() const {
  // @@protoc_insertion_point(field_list:CSOItemCriteria.conditions)
  return conditions_;
}

// optional bool recent_only = 10;
inline bool CSOItemCriteria::_internal_has_recent_only() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CSOItemCriteria::has_recent_only() const {
  return _internal_has_recent_only();
}
inline void CSOItemCriteria::clear_recent_only() {
  recent_only_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CSOItemCriteria::_internal_recent_only() const {
  return recent_only_;
}
inline bool CSOItemCriteria::recent_only() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteria.recent_only)
  return _internal_recent_only();
}
inline void CSOItemCriteria::_internal_set_recent_only(bool value) {
  _has_bits_[0] |= 0x00000200u;
  recent_only_ = value;
}
inline void CSOItemCriteria::set_recent_only(bool value) {
  _internal_set_recent_only(value);
  // @@protoc_insertion_point(field_set:CSOItemCriteria.recent_only)
}

// optional string tags = 11;
inline bool CSOItemCriteria::_internal_has_tags() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOItemCriteria::has_tags() const {
  return _internal_has_tags();
}
inline void CSOItemCriteria::clear_tags() {
  tags_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CSOItemCriteria::tags() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteria.tags)
  return _internal_tags();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemCriteria::set_tags(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 tags_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemCriteria.tags)
}
inline std::string* CSOItemCriteria::mutable_tags() {
  // @@protoc_insertion_point(field_mutable:CSOItemCriteria.tags)
  return _internal_mutable_tags();
}
inline const std::string& CSOItemCriteria::_internal_tags() const {
  return tags_.Get();
}
inline void CSOItemCriteria::_internal_set_tags(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tags_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemCriteria::_internal_mutable_tags() {
  _has_bits_[0] |= 0x00000001u;
  return tags_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemCriteria::release_tags() {
  // @@protoc_insertion_point(field_release:CSOItemCriteria.tags)
  if (!_internal_has_tags()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tags_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemCriteria::set_allocated_tags(std::string* tags) {
  if (tags != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tags_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tags,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemCriteria.tags)
}

// optional string equip_regions = 12;
inline bool CSOItemCriteria::_internal_has_equip_regions() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOItemCriteria::has_equip_regions() const {
  return _internal_has_equip_regions();
}
inline void CSOItemCriteria::clear_equip_regions() {
  equip_regions_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CSOItemCriteria::equip_regions() const {
  // @@protoc_insertion_point(field_get:CSOItemCriteria.equip_regions)
  return _internal_equip_regions();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemCriteria::set_equip_regions(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 equip_regions_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemCriteria.equip_regions)
}
inline std::string* CSOItemCriteria::mutable_equip_regions() {
  // @@protoc_insertion_point(field_mutable:CSOItemCriteria.equip_regions)
  return _internal_mutable_equip_regions();
}
inline const std::string& CSOItemCriteria::_internal_equip_regions() const {
  return equip_regions_.Get();
}
inline void CSOItemCriteria::_internal_set_equip_regions(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  equip_regions_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemCriteria::_internal_mutable_equip_regions() {
  _has_bits_[0] |= 0x00000002u;
  return equip_regions_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemCriteria::release_equip_regions() {
  // @@protoc_insertion_point(field_release:CSOItemCriteria.equip_regions)
  if (!_internal_has_equip_regions()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return equip_regions_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemCriteria::set_allocated_equip_regions(std::string* equip_regions) {
  if (equip_regions != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  equip_regions_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), equip_regions,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemCriteria.equip_regions)
}

// -------------------------------------------------------------------

// CSOItemRecipe

// optional uint32 def_index = 1;
inline bool CSOItemRecipe::_internal_has_def_index() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_def_index() const {
  return _internal_has_def_index();
}
inline void CSOItemRecipe::clear_def_index() {
  def_index_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOItemRecipe::_internal_def_index() const {
  return def_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOItemRecipe::def_index() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.def_index)
  return _internal_def_index();
}
inline void CSOItemRecipe::_internal_set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  def_index_ = value;
}
inline void CSOItemRecipe::set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_def_index(value);
  // @@protoc_insertion_point(field_set:CSOItemRecipe.def_index)
}

// optional string name = 2;
inline bool CSOItemRecipe::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_name() const {
  return _internal_has_name();
}
inline void CSOItemRecipe::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CSOItemRecipe::name() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemRecipe::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemRecipe.name)
}
inline std::string* CSOItemRecipe::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.name)
  return _internal_mutable_name();
}
inline const std::string& CSOItemRecipe::_internal_name() const {
  return name_.Get();
}
inline void CSOItemRecipe::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::release_name() {
  // @@protoc_insertion_point(field_release:CSOItemRecipe.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemRecipe::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemRecipe.name)
}

// optional string n_a = 3;
inline bool CSOItemRecipe::_internal_has_n_a() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_n_a() const {
  return _internal_has_n_a();
}
inline void CSOItemRecipe::clear_n_a() {
  n_a_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CSOItemRecipe::n_a() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.n_a)
  return _internal_n_a();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemRecipe::set_n_a(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 n_a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemRecipe.n_a)
}
inline std::string* CSOItemRecipe::mutable_n_a() {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.n_a)
  return _internal_mutable_n_a();
}
inline const std::string& CSOItemRecipe::_internal_n_a() const {
  return n_a_.Get();
}
inline void CSOItemRecipe::_internal_set_n_a(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  n_a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::_internal_mutable_n_a() {
  _has_bits_[0] |= 0x00000002u;
  return n_a_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::release_n_a() {
  // @@protoc_insertion_point(field_release:CSOItemRecipe.n_a)
  if (!_internal_has_n_a()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return n_a_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemRecipe::set_allocated_n_a(std::string* n_a) {
  if (n_a != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  n_a_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), n_a,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemRecipe.n_a)
}

// optional string desc_inputs = 4;
inline bool CSOItemRecipe::_internal_has_desc_inputs() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_desc_inputs() const {
  return _internal_has_desc_inputs();
}
inline void CSOItemRecipe::clear_desc_inputs() {
  desc_inputs_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CSOItemRecipe::desc_inputs() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.desc_inputs)
  return _internal_desc_inputs();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemRecipe::set_desc_inputs(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000004u;
 desc_inputs_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemRecipe.desc_inputs)
}
inline std::string* CSOItemRecipe::mutable_desc_inputs() {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.desc_inputs)
  return _internal_mutable_desc_inputs();
}
inline const std::string& CSOItemRecipe::_internal_desc_inputs() const {
  return desc_inputs_.Get();
}
inline void CSOItemRecipe::_internal_set_desc_inputs(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  desc_inputs_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::_internal_mutable_desc_inputs() {
  _has_bits_[0] |= 0x00000004u;
  return desc_inputs_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::release_desc_inputs() {
  // @@protoc_insertion_point(field_release:CSOItemRecipe.desc_inputs)
  if (!_internal_has_desc_inputs()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return desc_inputs_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemRecipe::set_allocated_desc_inputs(std::string* desc_inputs) {
  if (desc_inputs != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  desc_inputs_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), desc_inputs,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemRecipe.desc_inputs)
}

// optional string desc_outputs = 5;
inline bool CSOItemRecipe::_internal_has_desc_outputs() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_desc_outputs() const {
  return _internal_has_desc_outputs();
}
inline void CSOItemRecipe::clear_desc_outputs() {
  desc_outputs_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CSOItemRecipe::desc_outputs() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.desc_outputs)
  return _internal_desc_outputs();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemRecipe::set_desc_outputs(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000008u;
 desc_outputs_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemRecipe.desc_outputs)
}
inline std::string* CSOItemRecipe::mutable_desc_outputs() {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.desc_outputs)
  return _internal_mutable_desc_outputs();
}
inline const std::string& CSOItemRecipe::_internal_desc_outputs() const {
  return desc_outputs_.Get();
}
inline void CSOItemRecipe::_internal_set_desc_outputs(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  desc_outputs_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::_internal_mutable_desc_outputs() {
  _has_bits_[0] |= 0x00000008u;
  return desc_outputs_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::release_desc_outputs() {
  // @@protoc_insertion_point(field_release:CSOItemRecipe.desc_outputs)
  if (!_internal_has_desc_outputs()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return desc_outputs_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemRecipe::set_allocated_desc_outputs(std::string* desc_outputs) {
  if (desc_outputs != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  desc_outputs_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), desc_outputs,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemRecipe.desc_outputs)
}

// optional string di_a = 6;
inline bool CSOItemRecipe::_internal_has_di_a() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_di_a() const {
  return _internal_has_di_a();
}
inline void CSOItemRecipe::clear_di_a() {
  di_a_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CSOItemRecipe::di_a() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.di_a)
  return _internal_di_a();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemRecipe::set_di_a(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000010u;
 di_a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemRecipe.di_a)
}
inline std::string* CSOItemRecipe::mutable_di_a() {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.di_a)
  return _internal_mutable_di_a();
}
inline const std::string& CSOItemRecipe::_internal_di_a() const {
  return di_a_.Get();
}
inline void CSOItemRecipe::_internal_set_di_a(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  di_a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::_internal_mutable_di_a() {
  _has_bits_[0] |= 0x00000010u;
  return di_a_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::release_di_a() {
  // @@protoc_insertion_point(field_release:CSOItemRecipe.di_a)
  if (!_internal_has_di_a()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return di_a_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemRecipe::set_allocated_di_a(std::string* di_a) {
  if (di_a != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  di_a_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), di_a,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemRecipe.di_a)
}

// optional string di_b = 7;
inline bool CSOItemRecipe::_internal_has_di_b() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_di_b() const {
  return _internal_has_di_b();
}
inline void CSOItemRecipe::clear_di_b() {
  di_b_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& CSOItemRecipe::di_b() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.di_b)
  return _internal_di_b();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemRecipe::set_di_b(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000020u;
 di_b_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemRecipe.di_b)
}
inline std::string* CSOItemRecipe::mutable_di_b() {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.di_b)
  return _internal_mutable_di_b();
}
inline const std::string& CSOItemRecipe::_internal_di_b() const {
  return di_b_.Get();
}
inline void CSOItemRecipe::_internal_set_di_b(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  di_b_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::_internal_mutable_di_b() {
  _has_bits_[0] |= 0x00000020u;
  return di_b_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::release_di_b() {
  // @@protoc_insertion_point(field_release:CSOItemRecipe.di_b)
  if (!_internal_has_di_b()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return di_b_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemRecipe::set_allocated_di_b(std::string* di_b) {
  if (di_b != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  di_b_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), di_b,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemRecipe.di_b)
}

// optional string di_c = 8;
inline bool CSOItemRecipe::_internal_has_di_c() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_di_c() const {
  return _internal_has_di_c();
}
inline void CSOItemRecipe::clear_di_c() {
  di_c_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& CSOItemRecipe::di_c() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.di_c)
  return _internal_di_c();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemRecipe::set_di_c(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000040u;
 di_c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemRecipe.di_c)
}
inline std::string* CSOItemRecipe::mutable_di_c() {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.di_c)
  return _internal_mutable_di_c();
}
inline const std::string& CSOItemRecipe::_internal_di_c() const {
  return di_c_.Get();
}
inline void CSOItemRecipe::_internal_set_di_c(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  di_c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::_internal_mutable_di_c() {
  _has_bits_[0] |= 0x00000040u;
  return di_c_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::release_di_c() {
  // @@protoc_insertion_point(field_release:CSOItemRecipe.di_c)
  if (!_internal_has_di_c()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return di_c_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemRecipe::set_allocated_di_c(std::string* di_c) {
  if (di_c != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  di_c_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), di_c,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemRecipe.di_c)
}

// optional string do_a = 9;
inline bool CSOItemRecipe::_internal_has_do_a() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_do_a() const {
  return _internal_has_do_a();
}
inline void CSOItemRecipe::clear_do_a() {
  do_a_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& CSOItemRecipe::do_a() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.do_a)
  return _internal_do_a();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemRecipe::set_do_a(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000080u;
 do_a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemRecipe.do_a)
}
inline std::string* CSOItemRecipe::mutable_do_a() {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.do_a)
  return _internal_mutable_do_a();
}
inline const std::string& CSOItemRecipe::_internal_do_a() const {
  return do_a_.Get();
}
inline void CSOItemRecipe::_internal_set_do_a(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  do_a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::_internal_mutable_do_a() {
  _has_bits_[0] |= 0x00000080u;
  return do_a_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::release_do_a() {
  // @@protoc_insertion_point(field_release:CSOItemRecipe.do_a)
  if (!_internal_has_do_a()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return do_a_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemRecipe::set_allocated_do_a(std::string* do_a) {
  if (do_a != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  do_a_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), do_a,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemRecipe.do_a)
}

// optional string do_b = 10;
inline bool CSOItemRecipe::_internal_has_do_b() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_do_b() const {
  return _internal_has_do_b();
}
inline void CSOItemRecipe::clear_do_b() {
  do_b_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000100u;
}
inline const std::string& CSOItemRecipe::do_b() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.do_b)
  return _internal_do_b();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemRecipe::set_do_b(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000100u;
 do_b_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemRecipe.do_b)
}
inline std::string* CSOItemRecipe::mutable_do_b() {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.do_b)
  return _internal_mutable_do_b();
}
inline const std::string& CSOItemRecipe::_internal_do_b() const {
  return do_b_.Get();
}
inline void CSOItemRecipe::_internal_set_do_b(const std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  do_b_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::_internal_mutable_do_b() {
  _has_bits_[0] |= 0x00000100u;
  return do_b_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::release_do_b() {
  // @@protoc_insertion_point(field_release:CSOItemRecipe.do_b)
  if (!_internal_has_do_b()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return do_b_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemRecipe::set_allocated_do_b(std::string* do_b) {
  if (do_b != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  do_b_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), do_b,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemRecipe.do_b)
}

// optional string do_c = 11;
inline bool CSOItemRecipe::_internal_has_do_c() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_do_c() const {
  return _internal_has_do_c();
}
inline void CSOItemRecipe::clear_do_c() {
  do_c_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000200u;
}
inline const std::string& CSOItemRecipe::do_c() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.do_c)
  return _internal_do_c();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOItemRecipe::set_do_c(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000200u;
 do_c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOItemRecipe.do_c)
}
inline std::string* CSOItemRecipe::mutable_do_c() {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.do_c)
  return _internal_mutable_do_c();
}
inline const std::string& CSOItemRecipe::_internal_do_c() const {
  return do_c_.Get();
}
inline void CSOItemRecipe::_internal_set_do_c(const std::string& value) {
  _has_bits_[0] |= 0x00000200u;
  do_c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::_internal_mutable_do_c() {
  _has_bits_[0] |= 0x00000200u;
  return do_c_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOItemRecipe::release_do_c() {
  // @@protoc_insertion_point(field_release:CSOItemRecipe.do_c)
  if (!_internal_has_do_c()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000200u;
  return do_c_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOItemRecipe::set_allocated_do_c(std::string* do_c) {
  if (do_c != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  do_c_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), do_c,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOItemRecipe.do_c)
}

// optional bool requires_all_same_class = 12;
inline bool CSOItemRecipe::_internal_has_requires_all_same_class() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_requires_all_same_class() const {
  return _internal_has_requires_all_same_class();
}
inline void CSOItemRecipe::clear_requires_all_same_class() {
  requires_all_same_class_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CSOItemRecipe::_internal_requires_all_same_class() const {
  return requires_all_same_class_;
}
inline bool CSOItemRecipe::requires_all_same_class() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.requires_all_same_class)
  return _internal_requires_all_same_class();
}
inline void CSOItemRecipe::_internal_set_requires_all_same_class(bool value) {
  _has_bits_[0] |= 0x00000800u;
  requires_all_same_class_ = value;
}
inline void CSOItemRecipe::set_requires_all_same_class(bool value) {
  _internal_set_requires_all_same_class(value);
  // @@protoc_insertion_point(field_set:CSOItemRecipe.requires_all_same_class)
}

// optional bool requires_all_same_slot = 13;
inline bool CSOItemRecipe::_internal_has_requires_all_same_slot() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_requires_all_same_slot() const {
  return _internal_has_requires_all_same_slot();
}
inline void CSOItemRecipe::clear_requires_all_same_slot() {
  requires_all_same_slot_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool CSOItemRecipe::_internal_requires_all_same_slot() const {
  return requires_all_same_slot_;
}
inline bool CSOItemRecipe::requires_all_same_slot() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.requires_all_same_slot)
  return _internal_requires_all_same_slot();
}
inline void CSOItemRecipe::_internal_set_requires_all_same_slot(bool value) {
  _has_bits_[0] |= 0x00001000u;
  requires_all_same_slot_ = value;
}
inline void CSOItemRecipe::set_requires_all_same_slot(bool value) {
  _internal_set_requires_all_same_slot(value);
  // @@protoc_insertion_point(field_set:CSOItemRecipe.requires_all_same_slot)
}

// optional int32 class_usage_for_output = 14;
inline bool CSOItemRecipe::_internal_has_class_usage_for_output() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_class_usage_for_output() const {
  return _internal_has_class_usage_for_output();
}
inline void CSOItemRecipe::clear_class_usage_for_output() {
  class_usage_for_output_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CSOItemRecipe::_internal_class_usage_for_output() const {
  return class_usage_for_output_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CSOItemRecipe::class_usage_for_output() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.class_usage_for_output)
  return _internal_class_usage_for_output();
}
inline void CSOItemRecipe::_internal_set_class_usage_for_output(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  class_usage_for_output_ = value;
}
inline void CSOItemRecipe::set_class_usage_for_output(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_class_usage_for_output(value);
  // @@protoc_insertion_point(field_set:CSOItemRecipe.class_usage_for_output)
}

// optional int32 slot_usage_for_output = 15;
inline bool CSOItemRecipe::_internal_has_slot_usage_for_output() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_slot_usage_for_output() const {
  return _internal_has_slot_usage_for_output();
}
inline void CSOItemRecipe::clear_slot_usage_for_output() {
  slot_usage_for_output_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CSOItemRecipe::_internal_slot_usage_for_output() const {
  return slot_usage_for_output_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CSOItemRecipe::slot_usage_for_output() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.slot_usage_for_output)
  return _internal_slot_usage_for_output();
}
inline void CSOItemRecipe::_internal_set_slot_usage_for_output(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  slot_usage_for_output_ = value;
}
inline void CSOItemRecipe::set_slot_usage_for_output(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_slot_usage_for_output(value);
  // @@protoc_insertion_point(field_set:CSOItemRecipe.slot_usage_for_output)
}

// optional int32 set_for_output = 16;
inline bool CSOItemRecipe::_internal_has_set_for_output() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CSOItemRecipe::has_set_for_output() const {
  return _internal_has_set_for_output();
}
inline void CSOItemRecipe::clear_set_for_output() {
  set_for_output_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CSOItemRecipe::_internal_set_for_output() const {
  return set_for_output_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CSOItemRecipe::set_for_output() const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.set_for_output)
  return _internal_set_for_output();
}
inline void CSOItemRecipe::_internal_set_set_for_output(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  set_for_output_ = value;
}
inline void CSOItemRecipe::set_set_for_output(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_set_for_output(value);
  // @@protoc_insertion_point(field_set:CSOItemRecipe.set_for_output)
}

// repeated .CSOItemCriteria input_items_criteria = 20;
inline int CSOItemRecipe::_internal_input_items_criteria_size() const {
  return input_items_criteria_.size();
}
inline int CSOItemRecipe::input_items_criteria_size() const {
  return _internal_input_items_criteria_size();
}
inline void CSOItemRecipe::clear_input_items_criteria() {
  input_items_criteria_.Clear();
}
inline ::CSOItemCriteria* CSOItemRecipe::mutable_input_items_criteria(int index) {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.input_items_criteria)
  return input_items_criteria_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteria >*
CSOItemRecipe::mutable_input_items_criteria() {
  // @@protoc_insertion_point(field_mutable_list:CSOItemRecipe.input_items_criteria)
  return &input_items_criteria_;
}
inline const ::CSOItemCriteria& CSOItemRecipe::_internal_input_items_criteria(int index) const {
  return input_items_criteria_.Get(index);
}
inline const ::CSOItemCriteria& CSOItemRecipe::input_items_criteria(int index) const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.input_items_criteria)
  return _internal_input_items_criteria(index);
}
inline ::CSOItemCriteria* CSOItemRecipe::_internal_add_input_items_criteria() {
  return input_items_criteria_.Add();
}
inline ::CSOItemCriteria* CSOItemRecipe::add_input_items_criteria() {
  // @@protoc_insertion_point(field_add:CSOItemRecipe.input_items_criteria)
  return _internal_add_input_items_criteria();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteria >&
CSOItemRecipe::input_items_criteria() const {
  // @@protoc_insertion_point(field_list:CSOItemRecipe.input_items_criteria)
  return input_items_criteria_;
}

// repeated .CSOItemCriteria output_items_criteria = 21;
inline int CSOItemRecipe::_internal_output_items_criteria_size() const {
  return output_items_criteria_.size();
}
inline int CSOItemRecipe::output_items_criteria_size() const {
  return _internal_output_items_criteria_size();
}
inline void CSOItemRecipe::clear_output_items_criteria() {
  output_items_criteria_.Clear();
}
inline ::CSOItemCriteria* CSOItemRecipe::mutable_output_items_criteria(int index) {
  // @@protoc_insertion_point(field_mutable:CSOItemRecipe.output_items_criteria)
  return output_items_criteria_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteria >*
CSOItemRecipe::mutable_output_items_criteria() {
  // @@protoc_insertion_point(field_mutable_list:CSOItemRecipe.output_items_criteria)
  return &output_items_criteria_;
}
inline const ::CSOItemCriteria& CSOItemRecipe::_internal_output_items_criteria(int index) const {
  return output_items_criteria_.Get(index);
}
inline const ::CSOItemCriteria& CSOItemRecipe::output_items_criteria(int index) const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.output_items_criteria)
  return _internal_output_items_criteria(index);
}
inline ::CSOItemCriteria* CSOItemRecipe::_internal_add_output_items_criteria() {
  return output_items_criteria_.Add();
}
inline ::CSOItemCriteria* CSOItemRecipe::add_output_items_criteria() {
  // @@protoc_insertion_point(field_add:CSOItemRecipe.output_items_criteria)
  return _internal_add_output_items_criteria();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOItemCriteria >&
CSOItemRecipe::output_items_criteria() const {
  // @@protoc_insertion_point(field_list:CSOItemRecipe.output_items_criteria)
  return output_items_criteria_;
}

// repeated uint32 input_item_dupe_counts = 22;
inline int CSOItemRecipe::_internal_input_item_dupe_counts_size() const {
  return input_item_dupe_counts_.size();
}
inline int CSOItemRecipe::input_item_dupe_counts_size() const {
  return _internal_input_item_dupe_counts_size();
}
inline void CSOItemRecipe::clear_input_item_dupe_counts() {
  input_item_dupe_counts_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOItemRecipe::_internal_input_item_dupe_counts(int index) const {
  return input_item_dupe_counts_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOItemRecipe::input_item_dupe_counts(int index) const {
  // @@protoc_insertion_point(field_get:CSOItemRecipe.input_item_dupe_counts)
  return _internal_input_item_dupe_counts(index);
}
inline void CSOItemRecipe::set_input_item_dupe_counts(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  input_item_dupe_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOItemRecipe.input_item_dupe_counts)
}
inline void CSOItemRecipe::_internal_add_input_item_dupe_counts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  input_item_dupe_counts_.Add(value);
}
inline void CSOItemRecipe::add_input_item_dupe_counts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_input_item_dupe_counts(value);
  // @@protoc_insertion_point(field_add:CSOItemRecipe.input_item_dupe_counts)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CSOItemRecipe::_internal_input_item_dupe_counts() const {
  return input_item_dupe_counts_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CSOItemRecipe::input_item_dupe_counts() const {
  // @@protoc_insertion_point(field_list:CSOItemRecipe.input_item_dupe_counts)
  return _internal_input_item_dupe_counts();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CSOItemRecipe::_internal_mutable_input_item_dupe_counts() {
  return &input_item_dupe_counts_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CSOItemRecipe::mutable_input_item_dupe_counts() {
  // @@protoc_insertion_point(field_mutable_list:CSOItemRecipe.input_item_dupe_counts)
  return _internal_mutable_input_item_dupe_counts();
}

// -------------------------------------------------------------------

// CMsgDevNewItemRequest

// optional fixed64 receiver = 1;
inline bool CMsgDevNewItemRequest::_internal_has_receiver() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDevNewItemRequest::has_receiver() const {
  return _internal_has_receiver();
}
inline void CMsgDevNewItemRequest::clear_receiver() {
  receiver_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgDevNewItemRequest::_internal_receiver() const {
  return receiver_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgDevNewItemRequest::receiver() const {
  // @@protoc_insertion_point(field_get:CMsgDevNewItemRequest.receiver)
  return _internal_receiver();
}
inline void CMsgDevNewItemRequest::_internal_set_receiver(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  receiver_ = value;
}
inline void CMsgDevNewItemRequest::set_receiver(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_receiver(value);
  // @@protoc_insertion_point(field_set:CMsgDevNewItemRequest.receiver)
}

// optional .CSOItemCriteria criteria = 2;
inline bool CMsgDevNewItemRequest::_internal_has_criteria() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || criteria_ != nullptr);
  return value;
}
inline bool CMsgDevNewItemRequest::has_criteria() const {
  return _internal_has_criteria();
}
inline void CMsgDevNewItemRequest::clear_criteria() {
  if (criteria_ != nullptr) criteria_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CSOItemCriteria& CMsgDevNewItemRequest::_internal_criteria() const {
  const ::CSOItemCriteria* p = criteria_;
  return p != nullptr ? *p : reinterpret_cast<const ::CSOItemCriteria&>(
      ::_CSOItemCriteria_default_instance_);
}
inline const ::CSOItemCriteria& CMsgDevNewItemRequest::criteria() const {
  // @@protoc_insertion_point(field_get:CMsgDevNewItemRequest.criteria)
  return _internal_criteria();
}
inline void CMsgDevNewItemRequest::unsafe_arena_set_allocated_criteria(
    ::CSOItemCriteria* criteria) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(criteria_);
  }
  criteria_ = criteria;
  if (criteria) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgDevNewItemRequest.criteria)
}
inline ::CSOItemCriteria* CMsgDevNewItemRequest::release_criteria() {
  _has_bits_[0] &= ~0x00000001u;
  ::CSOItemCriteria* temp = criteria_;
  criteria_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CSOItemCriteria* CMsgDevNewItemRequest::unsafe_arena_release_criteria() {
  // @@protoc_insertion_point(field_release:CMsgDevNewItemRequest.criteria)
  _has_bits_[0] &= ~0x00000001u;
  ::CSOItemCriteria* temp = criteria_;
  criteria_ = nullptr;
  return temp;
}
inline ::CSOItemCriteria* CMsgDevNewItemRequest::_internal_mutable_criteria() {
  _has_bits_[0] |= 0x00000001u;
  if (criteria_ == nullptr) {
    auto* p = CreateMaybeMessage<::CSOItemCriteria>(GetArenaForAllocation());
    criteria_ = p;
  }
  return criteria_;
}
inline ::CSOItemCriteria* CMsgDevNewItemRequest::mutable_criteria() {
  // @@protoc_insertion_point(field_mutable:CMsgDevNewItemRequest.criteria)
  return _internal_mutable_criteria();
}
inline void CMsgDevNewItemRequest::set_allocated_criteria(::CSOItemCriteria* criteria) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete criteria_;
  }
  if (criteria) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CSOItemCriteria>::GetOwningArena(criteria);
    if (message_arena != submessage_arena) {
      criteria = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, criteria, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  criteria_ = criteria;
  // @@protoc_insertion_point(field_set_allocated:CMsgDevNewItemRequest.criteria)
}

// -------------------------------------------------------------------

// CMsgDevDebugRollLootRequest

// optional fixed64 receiver = 1;
inline bool CMsgDevDebugRollLootRequest::_internal_has_receiver() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDevDebugRollLootRequest::has_receiver() const {
  return _internal_has_receiver();
}
inline void CMsgDevDebugRollLootRequest::clear_receiver() {
  receiver_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgDevDebugRollLootRequest::_internal_receiver() const {
  return receiver_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgDevDebugRollLootRequest::receiver() const {
  // @@protoc_insertion_point(field_get:CMsgDevDebugRollLootRequest.receiver)
  return _internal_receiver();
}
inline void CMsgDevDebugRollLootRequest::_internal_set_receiver(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  receiver_ = value;
}
inline void CMsgDevDebugRollLootRequest::set_receiver(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_receiver(value);
  // @@protoc_insertion_point(field_set:CMsgDevDebugRollLootRequest.receiver)
}

// optional string loot_list_name = 2;
inline bool CMsgDevDebugRollLootRequest::_internal_has_loot_list_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDevDebugRollLootRequest::has_loot_list_name() const {
  return _internal_has_loot_list_name();
}
inline void CMsgDevDebugRollLootRequest::clear_loot_list_name() {
  loot_list_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgDevDebugRollLootRequest::loot_list_name() const {
  // @@protoc_insertion_point(field_get:CMsgDevDebugRollLootRequest.loot_list_name)
  return _internal_loot_list_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgDevDebugRollLootRequest::set_loot_list_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 loot_list_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgDevDebugRollLootRequest.loot_list_name)
}
inline std::string* CMsgDevDebugRollLootRequest::mutable_loot_list_name() {
  // @@protoc_insertion_point(field_mutable:CMsgDevDebugRollLootRequest.loot_list_name)
  return _internal_mutable_loot_list_name();
}
inline const std::string& CMsgDevDebugRollLootRequest::_internal_loot_list_name() const {
  return loot_list_name_.Get();
}
inline void CMsgDevDebugRollLootRequest::_internal_set_loot_list_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  loot_list_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgDevDebugRollLootRequest::_internal_mutable_loot_list_name() {
  _has_bits_[0] |= 0x00000001u;
  return loot_list_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgDevDebugRollLootRequest::release_loot_list_name() {
  // @@protoc_insertion_point(field_release:CMsgDevDebugRollLootRequest.loot_list_name)
  if (!_internal_has_loot_list_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return loot_list_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgDevDebugRollLootRequest::set_allocated_loot_list_name(std::string* loot_list_name) {
  if (loot_list_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  loot_list_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), loot_list_name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgDevDebugRollLootRequest.loot_list_name)
}

// -------------------------------------------------------------------

// CMsgIncrementKillCountAttribute

// optional uint64 killer_steam_id = 1;
inline bool CMsgIncrementKillCountAttribute::_internal_has_killer_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgIncrementKillCountAttribute::has_killer_steam_id() const {
  return _internal_has_killer_steam_id();
}
inline void CMsgIncrementKillCountAttribute::clear_killer_steam_id() {
  killer_steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgIncrementKillCountAttribute::_internal_killer_steam_id() const {
  return killer_steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgIncrementKillCountAttribute::killer_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgIncrementKillCountAttribute.killer_steam_id)
  return _internal_killer_steam_id();
}
inline void CMsgIncrementKillCountAttribute::_internal_set_killer_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  killer_steam_id_ = value;
}
inline void CMsgIncrementKillCountAttribute::set_killer_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_killer_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgIncrementKillCountAttribute.killer_steam_id)
}

// optional uint64 victim_steam_id = 2;
inline bool CMsgIncrementKillCountAttribute::_internal_has_victim_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgIncrementKillCountAttribute::has_victim_steam_id() const {
  return _internal_has_victim_steam_id();
}
inline void CMsgIncrementKillCountAttribute::clear_victim_steam_id() {
  victim_steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgIncrementKillCountAttribute::_internal_victim_steam_id() const {
  return victim_steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgIncrementKillCountAttribute::victim_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgIncrementKillCountAttribute.victim_steam_id)
  return _internal_victim_steam_id();
}
inline void CMsgIncrementKillCountAttribute::_internal_set_victim_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  victim_steam_id_ = value;
}
inline void CMsgIncrementKillCountAttribute::set_victim_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_victim_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgIncrementKillCountAttribute.victim_steam_id)
}

// optional uint64 item_id = 3;
inline bool CMsgIncrementKillCountAttribute::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgIncrementKillCountAttribute::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgIncrementKillCountAttribute::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgIncrementKillCountAttribute::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgIncrementKillCountAttribute::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgIncrementKillCountAttribute.item_id)
  return _internal_item_id();
}
inline void CMsgIncrementKillCountAttribute::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  item_id_ = value;
}
inline void CMsgIncrementKillCountAttribute::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgIncrementKillCountAttribute.item_id)
}

// optional uint32 event_type = 4;
inline bool CMsgIncrementKillCountAttribute::_internal_has_event_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgIncrementKillCountAttribute::has_event_type() const {
  return _internal_has_event_type();
}
inline void CMsgIncrementKillCountAttribute::clear_event_type() {
  event_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgIncrementKillCountAttribute::_internal_event_type() const {
  return event_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgIncrementKillCountAttribute::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgIncrementKillCountAttribute.event_type)
  return _internal_event_type();
}
inline void CMsgIncrementKillCountAttribute::_internal_set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  event_type_ = value;
}
inline void CMsgIncrementKillCountAttribute::set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_type(value);
  // @@protoc_insertion_point(field_set:CMsgIncrementKillCountAttribute.event_type)
}

// optional uint32 increment_value = 5;
inline bool CMsgIncrementKillCountAttribute::_internal_has_increment_value() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgIncrementKillCountAttribute::has_increment_value() const {
  return _internal_has_increment_value();
}
inline void CMsgIncrementKillCountAttribute::clear_increment_value() {
  increment_value_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgIncrementKillCountAttribute::_internal_increment_value() const {
  return increment_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgIncrementKillCountAttribute::increment_value() const {
  // @@protoc_insertion_point(field_get:CMsgIncrementKillCountAttribute.increment_value)
  return _internal_increment_value();
}
inline void CMsgIncrementKillCountAttribute::_internal_set_increment_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  increment_value_ = value;
}
inline void CMsgIncrementKillCountAttribute::set_increment_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_increment_value(value);
  // @@protoc_insertion_point(field_set:CMsgIncrementKillCountAttribute.increment_value)
}

// -------------------------------------------------------------------

// CMsgIncrementKillCountAttribute_Multiple

// repeated .CMsgIncrementKillCountAttribute msgs = 1;
inline int CMsgIncrementKillCountAttribute_Multiple::_internal_msgs_size() const {
  return msgs_.size();
}
inline int CMsgIncrementKillCountAttribute_Multiple::msgs_size() const {
  return _internal_msgs_size();
}
inline void CMsgIncrementKillCountAttribute_Multiple::clear_msgs() {
  msgs_.Clear();
}
inline ::CMsgIncrementKillCountAttribute* CMsgIncrementKillCountAttribute_Multiple::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgIncrementKillCountAttribute_Multiple.msgs)
  return msgs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgIncrementKillCountAttribute >*
CMsgIncrementKillCountAttribute_Multiple::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgIncrementKillCountAttribute_Multiple.msgs)
  return &msgs_;
}
inline const ::CMsgIncrementKillCountAttribute& CMsgIncrementKillCountAttribute_Multiple::_internal_msgs(int index) const {
  return msgs_.Get(index);
}
inline const ::CMsgIncrementKillCountAttribute& CMsgIncrementKillCountAttribute_Multiple::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgIncrementKillCountAttribute_Multiple.msgs)
  return _internal_msgs(index);
}
inline ::CMsgIncrementKillCountAttribute* CMsgIncrementKillCountAttribute_Multiple::_internal_add_msgs() {
  return msgs_.Add();
}
inline ::CMsgIncrementKillCountAttribute* CMsgIncrementKillCountAttribute_Multiple::add_msgs() {
  // @@protoc_insertion_point(field_add:CMsgIncrementKillCountAttribute_Multiple.msgs)
  return _internal_add_msgs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgIncrementKillCountAttribute >&
CMsgIncrementKillCountAttribute_Multiple::msgs() const {
  // @@protoc_insertion_point(field_list:CMsgIncrementKillCountAttribute_Multiple.msgs)
  return msgs_;
}

// -------------------------------------------------------------------

// CMsgTrackUniquePlayerPairEvent

// optional uint64 killer_steam_id = 1;
inline bool CMsgTrackUniquePlayerPairEvent::_internal_has_killer_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgTrackUniquePlayerPairEvent::has_killer_steam_id() const {
  return _internal_has_killer_steam_id();
}
inline void CMsgTrackUniquePlayerPairEvent::clear_killer_steam_id() {
  killer_steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrackUniquePlayerPairEvent::_internal_killer_steam_id() const {
  return killer_steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrackUniquePlayerPairEvent::killer_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTrackUniquePlayerPairEvent.killer_steam_id)
  return _internal_killer_steam_id();
}
inline void CMsgTrackUniquePlayerPairEvent::_internal_set_killer_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  killer_steam_id_ = value;
}
inline void CMsgTrackUniquePlayerPairEvent::set_killer_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_killer_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgTrackUniquePlayerPairEvent.killer_steam_id)
}

// optional uint64 victim_steam_id = 2;
inline bool CMsgTrackUniquePlayerPairEvent::_internal_has_victim_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgTrackUniquePlayerPairEvent::has_victim_steam_id() const {
  return _internal_has_victim_steam_id();
}
inline void CMsgTrackUniquePlayerPairEvent::clear_victim_steam_id() {
  victim_steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrackUniquePlayerPairEvent::_internal_victim_steam_id() const {
  return victim_steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrackUniquePlayerPairEvent::victim_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTrackUniquePlayerPairEvent.victim_steam_id)
  return _internal_victim_steam_id();
}
inline void CMsgTrackUniquePlayerPairEvent::_internal_set_victim_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  victim_steam_id_ = value;
}
inline void CMsgTrackUniquePlayerPairEvent::set_victim_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_victim_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgTrackUniquePlayerPairEvent.victim_steam_id)
}

// optional uint64 item_id = 3;
inline bool CMsgTrackUniquePlayerPairEvent::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgTrackUniquePlayerPairEvent::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgTrackUniquePlayerPairEvent::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrackUniquePlayerPairEvent::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrackUniquePlayerPairEvent::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgTrackUniquePlayerPairEvent.item_id)
  return _internal_item_id();
}
inline void CMsgTrackUniquePlayerPairEvent::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  item_id_ = value;
}
inline void CMsgTrackUniquePlayerPairEvent::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgTrackUniquePlayerPairEvent.item_id)
}

// optional uint32 event_type = 4;
inline bool CMsgTrackUniquePlayerPairEvent::_internal_has_event_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgTrackUniquePlayerPairEvent::has_event_type() const {
  return _internal_has_event_type();
}
inline void CMsgTrackUniquePlayerPairEvent::clear_event_type() {
  event_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrackUniquePlayerPairEvent::_internal_event_type() const {
  return event_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrackUniquePlayerPairEvent::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgTrackUniquePlayerPairEvent.event_type)
  return _internal_event_type();
}
inline void CMsgTrackUniquePlayerPairEvent::_internal_set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  event_type_ = value;
}
inline void CMsgTrackUniquePlayerPairEvent::set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_type(value);
  // @@protoc_insertion_point(field_set:CMsgTrackUniquePlayerPairEvent.event_type)
}

// -------------------------------------------------------------------

// CMsgApplyStrangeCountTransfer

// optional uint64 tool_item_id = 1;
inline bool CMsgApplyStrangeCountTransfer::_internal_has_tool_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgApplyStrangeCountTransfer::has_tool_item_id() const {
  return _internal_has_tool_item_id();
}
inline void CMsgApplyStrangeCountTransfer::clear_tool_item_id() {
  tool_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangeCountTransfer::_internal_tool_item_id() const {
  return tool_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangeCountTransfer::tool_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyStrangeCountTransfer.tool_item_id)
  return _internal_tool_item_id();
}
inline void CMsgApplyStrangeCountTransfer::_internal_set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  tool_item_id_ = value;
}
inline void CMsgApplyStrangeCountTransfer::set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tool_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyStrangeCountTransfer.tool_item_id)
}

// optional uint64 item_src_item_id = 2;
inline bool CMsgApplyStrangeCountTransfer::_internal_has_item_src_item_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgApplyStrangeCountTransfer::has_item_src_item_id() const {
  return _internal_has_item_src_item_id();
}
inline void CMsgApplyStrangeCountTransfer::clear_item_src_item_id() {
  item_src_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangeCountTransfer::_internal_item_src_item_id() const {
  return item_src_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangeCountTransfer::item_src_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyStrangeCountTransfer.item_src_item_id)
  return _internal_item_src_item_id();
}
inline void CMsgApplyStrangeCountTransfer::_internal_set_item_src_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  item_src_item_id_ = value;
}
inline void CMsgApplyStrangeCountTransfer::set_item_src_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_src_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyStrangeCountTransfer.item_src_item_id)
}

// optional uint64 item_dest_item_id = 3;
inline bool CMsgApplyStrangeCountTransfer::_internal_has_item_dest_item_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgApplyStrangeCountTransfer::has_item_dest_item_id() const {
  return _internal_has_item_dest_item_id();
}
inline void CMsgApplyStrangeCountTransfer::clear_item_dest_item_id() {
  item_dest_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangeCountTransfer::_internal_item_dest_item_id() const {
  return item_dest_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangeCountTransfer::item_dest_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyStrangeCountTransfer.item_dest_item_id)
  return _internal_item_dest_item_id();
}
inline void CMsgApplyStrangeCountTransfer::_internal_set_item_dest_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  item_dest_item_id_ = value;
}
inline void CMsgApplyStrangeCountTransfer::set_item_dest_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_dest_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyStrangeCountTransfer.item_dest_item_id)
}

// -------------------------------------------------------------------

// CMsgApplyStrangePart

// optional uint64 strange_part_item_id = 1;
inline bool CMsgApplyStrangePart::_internal_has_strange_part_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgApplyStrangePart::has_strange_part_item_id() const {
  return _internal_has_strange_part_item_id();
}
inline void CMsgApplyStrangePart::clear_strange_part_item_id() {
  strange_part_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangePart::_internal_strange_part_item_id() const {
  return strange_part_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangePart::strange_part_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyStrangePart.strange_part_item_id)
  return _internal_strange_part_item_id();
}
inline void CMsgApplyStrangePart::_internal_set_strange_part_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  strange_part_item_id_ = value;
}
inline void CMsgApplyStrangePart::set_strange_part_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_strange_part_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyStrangePart.strange_part_item_id)
}

// optional uint64 item_item_id = 2;
inline bool CMsgApplyStrangePart::_internal_has_item_item_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgApplyStrangePart::has_item_item_id() const {
  return _internal_has_item_item_id();
}
inline void CMsgApplyStrangePart::clear_item_item_id() {
  item_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangePart::_internal_item_item_id() const {
  return item_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangePart::item_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyStrangePart.item_item_id)
  return _internal_item_item_id();
}
inline void CMsgApplyStrangePart::_internal_set_item_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  item_item_id_ = value;
}
inline void CMsgApplyStrangePart::set_item_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyStrangePart.item_item_id)
}

// -------------------------------------------------------------------

// CMsgApplyStrangeRestriction

// optional uint64 strange_part_item_id = 1;
inline bool CMsgApplyStrangeRestriction::_internal_has_strange_part_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgApplyStrangeRestriction::has_strange_part_item_id() const {
  return _internal_has_strange_part_item_id();
}
inline void CMsgApplyStrangeRestriction::clear_strange_part_item_id() {
  strange_part_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangeRestriction::_internal_strange_part_item_id() const {
  return strange_part_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangeRestriction::strange_part_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyStrangeRestriction.strange_part_item_id)
  return _internal_strange_part_item_id();
}
inline void CMsgApplyStrangeRestriction::_internal_set_strange_part_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  strange_part_item_id_ = value;
}
inline void CMsgApplyStrangeRestriction::set_strange_part_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_strange_part_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyStrangeRestriction.strange_part_item_id)
}

// optional uint64 item_item_id = 2;
inline bool CMsgApplyStrangeRestriction::_internal_has_item_item_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgApplyStrangeRestriction::has_item_item_id() const {
  return _internal_has_item_item_id();
}
inline void CMsgApplyStrangeRestriction::clear_item_item_id() {
  item_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangeRestriction::_internal_item_item_id() const {
  return item_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyStrangeRestriction::item_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyStrangeRestriction.item_item_id)
  return _internal_item_item_id();
}
inline void CMsgApplyStrangeRestriction::_internal_set_item_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  item_item_id_ = value;
}
inline void CMsgApplyStrangeRestriction::set_item_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyStrangeRestriction.item_item_id)
}

// optional uint32 strange_attr_index = 3;
inline bool CMsgApplyStrangeRestriction::_internal_has_strange_attr_index() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgApplyStrangeRestriction::has_strange_attr_index() const {
  return _internal_has_strange_attr_index();
}
inline void CMsgApplyStrangeRestriction::clear_strange_attr_index() {
  strange_attr_index_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgApplyStrangeRestriction::_internal_strange_attr_index() const {
  return strange_attr_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgApplyStrangeRestriction::strange_attr_index() const {
  // @@protoc_insertion_point(field_get:CMsgApplyStrangeRestriction.strange_attr_index)
  return _internal_strange_attr_index();
}
inline void CMsgApplyStrangeRestriction::_internal_set_strange_attr_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  strange_attr_index_ = value;
}
inline void CMsgApplyStrangeRestriction::set_strange_attr_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_strange_attr_index(value);
  // @@protoc_insertion_point(field_set:CMsgApplyStrangeRestriction.strange_attr_index)
}

// -------------------------------------------------------------------

// CMsgApplyUpgradeCard

// optional uint64 upgrade_card_item_id = 1;
inline bool CMsgApplyUpgradeCard::_internal_has_upgrade_card_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgApplyUpgradeCard::has_upgrade_card_item_id() const {
  return _internal_has_upgrade_card_item_id();
}
inline void CMsgApplyUpgradeCard::clear_upgrade_card_item_id() {
  upgrade_card_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyUpgradeCard::_internal_upgrade_card_item_id() const {
  return upgrade_card_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyUpgradeCard::upgrade_card_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyUpgradeCard.upgrade_card_item_id)
  return _internal_upgrade_card_item_id();
}
inline void CMsgApplyUpgradeCard::_internal_set_upgrade_card_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  upgrade_card_item_id_ = value;
}
inline void CMsgApplyUpgradeCard::set_upgrade_card_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_upgrade_card_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyUpgradeCard.upgrade_card_item_id)
}

// optional uint64 subject_item_id = 2;
inline bool CMsgApplyUpgradeCard::_internal_has_subject_item_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgApplyUpgradeCard::has_subject_item_id() const {
  return _internal_has_subject_item_id();
}
inline void CMsgApplyUpgradeCard::clear_subject_item_id() {
  subject_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyUpgradeCard::_internal_subject_item_id() const {
  return subject_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyUpgradeCard::subject_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyUpgradeCard.subject_item_id)
  return _internal_subject_item_id();
}
inline void CMsgApplyUpgradeCard::_internal_set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  subject_item_id_ = value;
}
inline void CMsgApplyUpgradeCard::set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_subject_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyUpgradeCard.subject_item_id)
}

// -------------------------------------------------------------------

// CSOEconItemAttribute

// optional uint32 def_index = 1;
inline bool CSOEconItemAttribute::_internal_has_def_index() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOEconItemAttribute::has_def_index() const {
  return _internal_has_def_index();
}
inline void CSOEconItemAttribute::clear_def_index() {
  def_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemAttribute::_internal_def_index() const {
  return def_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemAttribute::def_index() const {
  // @@protoc_insertion_point(field_get:CSOEconItemAttribute.def_index)
  return _internal_def_index();
}
inline void CSOEconItemAttribute::_internal_set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  def_index_ = value;
}
inline void CSOEconItemAttribute::set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_def_index(value);
  // @@protoc_insertion_point(field_set:CSOEconItemAttribute.def_index)
}

// optional uint32 value = 2;
inline bool CSOEconItemAttribute::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOEconItemAttribute::has_value() const {
  return _internal_has_value();
}
inline void CSOEconItemAttribute::clear_value() {
  value_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemAttribute::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemAttribute::value() const {
  // @@protoc_insertion_point(field_get:CSOEconItemAttribute.value)
  return _internal_value();
}
inline void CSOEconItemAttribute::_internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  value_ = value;
}
inline void CSOEconItemAttribute::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CSOEconItemAttribute.value)
}

// optional bytes value_bytes = 3;
inline bool CSOEconItemAttribute::_internal_has_value_bytes() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOEconItemAttribute::has_value_bytes() const {
  return _internal_has_value_bytes();
}
inline void CSOEconItemAttribute::clear_value_bytes() {
  value_bytes_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CSOEconItemAttribute::value_bytes() const {
  // @@protoc_insertion_point(field_get:CSOEconItemAttribute.value_bytes)
  return _internal_value_bytes();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOEconItemAttribute::set_value_bytes(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 value_bytes_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOEconItemAttribute.value_bytes)
}
inline std::string* CSOEconItemAttribute::mutable_value_bytes() {
  // @@protoc_insertion_point(field_mutable:CSOEconItemAttribute.value_bytes)
  return _internal_mutable_value_bytes();
}
inline const std::string& CSOEconItemAttribute::_internal_value_bytes() const {
  return value_bytes_.Get();
}
inline void CSOEconItemAttribute::_internal_set_value_bytes(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  value_bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOEconItemAttribute::_internal_mutable_value_bytes() {
  _has_bits_[0] |= 0x00000001u;
  return value_bytes_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOEconItemAttribute::release_value_bytes() {
  // @@protoc_insertion_point(field_release:CSOEconItemAttribute.value_bytes)
  if (!_internal_has_value_bytes()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return value_bytes_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOEconItemAttribute::set_allocated_value_bytes(std::string* value_bytes) {
  if (value_bytes != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  value_bytes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value_bytes,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOEconItemAttribute.value_bytes)
}

// -------------------------------------------------------------------

// CSOEconItemEquipped

// optional uint32 new_class = 1;
inline bool CSOEconItemEquipped::_internal_has_new_class() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOEconItemEquipped::has_new_class() const {
  return _internal_has_new_class();
}
inline void CSOEconItemEquipped::clear_new_class() {
  new_class_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemEquipped::_internal_new_class() const {
  return new_class_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemEquipped::new_class() const {
  // @@protoc_insertion_point(field_get:CSOEconItemEquipped.new_class)
  return _internal_new_class();
}
inline void CSOEconItemEquipped::_internal_set_new_class(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  new_class_ = value;
}
inline void CSOEconItemEquipped::set_new_class(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_new_class(value);
  // @@protoc_insertion_point(field_set:CSOEconItemEquipped.new_class)
}

// optional uint32 new_slot = 2;
inline bool CSOEconItemEquipped::_internal_has_new_slot() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOEconItemEquipped::has_new_slot() const {
  return _internal_has_new_slot();
}
inline void CSOEconItemEquipped::clear_new_slot() {
  new_slot_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemEquipped::_internal_new_slot() const {
  return new_slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemEquipped::new_slot() const {
  // @@protoc_insertion_point(field_get:CSOEconItemEquipped.new_slot)
  return _internal_new_slot();
}
inline void CSOEconItemEquipped::_internal_set_new_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  new_slot_ = value;
}
inline void CSOEconItemEquipped::set_new_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_new_slot(value);
  // @@protoc_insertion_point(field_set:CSOEconItemEquipped.new_slot)
}

// -------------------------------------------------------------------

// CSOEconItem

// optional uint64 id = 1;
inline bool CSOEconItem::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOEconItem::has_id() const {
  return _internal_has_id();
}
inline void CSOEconItem::clear_id() {
  id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CSOEconItem::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CSOEconItem::id() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.id)
  return _internal_id();
}
inline void CSOEconItem::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  id_ = value;
}
inline void CSOEconItem::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.id)
}

// optional uint32 account_id = 2;
inline bool CSOEconItem::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOEconItem::has_account_id() const {
  return _internal_has_account_id();
}
inline void CSOEconItem::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::account_id() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.account_id)
  return _internal_account_id();
}
inline void CSOEconItem::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  account_id_ = value;
}
inline void CSOEconItem::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.account_id)
}

// optional uint32 inventory = 3;
inline bool CSOEconItem::_internal_has_inventory() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CSOEconItem::has_inventory() const {
  return _internal_has_inventory();
}
inline void CSOEconItem::clear_inventory() {
  inventory_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::_internal_inventory() const {
  return inventory_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::inventory() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.inventory)
  return _internal_inventory();
}
inline void CSOEconItem::_internal_set_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  inventory_ = value;
}
inline void CSOEconItem::set_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_inventory(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.inventory)
}

// optional uint32 def_index = 4;
inline bool CSOEconItem::_internal_has_def_index() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CSOEconItem::has_def_index() const {
  return _internal_has_def_index();
}
inline void CSOEconItem::clear_def_index() {
  def_index_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::_internal_def_index() const {
  return def_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::def_index() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.def_index)
  return _internal_def_index();
}
inline void CSOEconItem::_internal_set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  def_index_ = value;
}
inline void CSOEconItem::set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_def_index(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.def_index)
}

// optional uint32 quantity = 5;
inline bool CSOEconItem::_internal_has_quantity() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CSOEconItem::has_quantity() const {
  return _internal_has_quantity();
}
inline void CSOEconItem::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::_internal_quantity() const {
  return quantity_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::quantity() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.quantity)
  return _internal_quantity();
}
inline void CSOEconItem::_internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  quantity_ = value;
}
inline void CSOEconItem::set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.quantity)
}

// optional uint32 level = 6;
inline bool CSOEconItem::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CSOEconItem::has_level() const {
  return _internal_has_level();
}
inline void CSOEconItem::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::level() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.level)
  return _internal_level();
}
inline void CSOEconItem::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  level_ = value;
}
inline void CSOEconItem::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.level)
}

// optional uint32 quality = 7;
inline bool CSOEconItem::_internal_has_quality() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CSOEconItem::has_quality() const {
  return _internal_has_quality();
}
inline void CSOEconItem::clear_quality() {
  quality_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::_internal_quality() const {
  return quality_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::quality() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.quality)
  return _internal_quality();
}
inline void CSOEconItem::_internal_set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  quality_ = value;
}
inline void CSOEconItem::set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quality(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.quality)
}

// optional uint32 flags = 8 [default = 0];
inline bool CSOEconItem::_internal_has_flags() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CSOEconItem::has_flags() const {
  return _internal_has_flags();
}
inline void CSOEconItem::clear_flags() {
  flags_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::_internal_flags() const {
  return flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::flags() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.flags)
  return _internal_flags();
}
inline void CSOEconItem::_internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  flags_ = value;
}
inline void CSOEconItem::set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.flags)
}

// optional uint32 origin = 9;
inline bool CSOEconItem::_internal_has_origin() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CSOEconItem::has_origin() const {
  return _internal_has_origin();
}
inline void CSOEconItem::clear_origin() {
  origin_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::_internal_origin() const {
  return origin_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::origin() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.origin)
  return _internal_origin();
}
inline void CSOEconItem::_internal_set_origin(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  origin_ = value;
}
inline void CSOEconItem::set_origin(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_origin(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.origin)
}

// optional string custom_name = 10;
inline bool CSOEconItem::_internal_has_custom_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOEconItem::has_custom_name() const {
  return _internal_has_custom_name();
}
inline void CSOEconItem::clear_custom_name() {
  custom_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CSOEconItem::custom_name() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.custom_name)
  return _internal_custom_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOEconItem::set_custom_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 custom_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOEconItem.custom_name)
}
inline std::string* CSOEconItem::mutable_custom_name() {
  // @@protoc_insertion_point(field_mutable:CSOEconItem.custom_name)
  return _internal_mutable_custom_name();
}
inline const std::string& CSOEconItem::_internal_custom_name() const {
  return custom_name_.Get();
}
inline void CSOEconItem::_internal_set_custom_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  custom_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOEconItem::_internal_mutable_custom_name() {
  _has_bits_[0] |= 0x00000001u;
  return custom_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOEconItem::release_custom_name() {
  // @@protoc_insertion_point(field_release:CSOEconItem.custom_name)
  if (!_internal_has_custom_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return custom_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOEconItem::set_allocated_custom_name(std::string* custom_name) {
  if (custom_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  custom_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), custom_name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOEconItem.custom_name)
}

// optional string custom_desc = 11;
inline bool CSOEconItem::_internal_has_custom_desc() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOEconItem::has_custom_desc() const {
  return _internal_has_custom_desc();
}
inline void CSOEconItem::clear_custom_desc() {
  custom_desc_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CSOEconItem::custom_desc() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.custom_desc)
  return _internal_custom_desc();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOEconItem::set_custom_desc(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 custom_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOEconItem.custom_desc)
}
inline std::string* CSOEconItem::mutable_custom_desc() {
  // @@protoc_insertion_point(field_mutable:CSOEconItem.custom_desc)
  return _internal_mutable_custom_desc();
}
inline const std::string& CSOEconItem::_internal_custom_desc() const {
  return custom_desc_.Get();
}
inline void CSOEconItem::_internal_set_custom_desc(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  custom_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOEconItem::_internal_mutable_custom_desc() {
  _has_bits_[0] |= 0x00000002u;
  return custom_desc_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOEconItem::release_custom_desc() {
  // @@protoc_insertion_point(field_release:CSOEconItem.custom_desc)
  if (!_internal_has_custom_desc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return custom_desc_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOEconItem::set_allocated_custom_desc(std::string* custom_desc) {
  if (custom_desc != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  custom_desc_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), custom_desc,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOEconItem.custom_desc)
}

// repeated .CSOEconItemAttribute attribute = 12;
inline int CSOEconItem::_internal_attribute_size() const {
  return attribute_.size();
}
inline int CSOEconItem::attribute_size() const {
  return _internal_attribute_size();
}
inline void CSOEconItem::clear_attribute() {
  attribute_.Clear();
}
inline ::CSOEconItemAttribute* CSOEconItem::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:CSOEconItem.attribute)
  return attribute_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemAttribute >*
CSOEconItem::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:CSOEconItem.attribute)
  return &attribute_;
}
inline const ::CSOEconItemAttribute& CSOEconItem::_internal_attribute(int index) const {
  return attribute_.Get(index);
}
inline const ::CSOEconItemAttribute& CSOEconItem::attribute(int index) const {
  // @@protoc_insertion_point(field_get:CSOEconItem.attribute)
  return _internal_attribute(index);
}
inline ::CSOEconItemAttribute* CSOEconItem::_internal_add_attribute() {
  return attribute_.Add();
}
inline ::CSOEconItemAttribute* CSOEconItem::add_attribute() {
  // @@protoc_insertion_point(field_add:CSOEconItem.attribute)
  return _internal_add_attribute();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemAttribute >&
CSOEconItem::attribute() const {
  // @@protoc_insertion_point(field_list:CSOEconItem.attribute)
  return attribute_;
}

// optional .CSOEconItem interior_item = 13;
inline bool CSOEconItem::_internal_has_interior_item() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || interior_item_ != nullptr);
  return value;
}
inline bool CSOEconItem::has_interior_item() const {
  return _internal_has_interior_item();
}
inline void CSOEconItem::clear_interior_item() {
  if (interior_item_ != nullptr) interior_item_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::CSOEconItem& CSOEconItem::_internal_interior_item() const {
  const ::CSOEconItem* p = interior_item_;
  return p != nullptr ? *p : reinterpret_cast<const ::CSOEconItem&>(
      ::_CSOEconItem_default_instance_);
}
inline const ::CSOEconItem& CSOEconItem::interior_item() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.interior_item)
  return _internal_interior_item();
}
inline void CSOEconItem::unsafe_arena_set_allocated_interior_item(
    ::CSOEconItem* interior_item) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(interior_item_);
  }
  interior_item_ = interior_item;
  if (interior_item) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CSOEconItem.interior_item)
}
inline ::CSOEconItem* CSOEconItem::release_interior_item() {
  _has_bits_[0] &= ~0x00000004u;
  ::CSOEconItem* temp = interior_item_;
  interior_item_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CSOEconItem* CSOEconItem::unsafe_arena_release_interior_item() {
  // @@protoc_insertion_point(field_release:CSOEconItem.interior_item)
  _has_bits_[0] &= ~0x00000004u;
  ::CSOEconItem* temp = interior_item_;
  interior_item_ = nullptr;
  return temp;
}
inline ::CSOEconItem* CSOEconItem::_internal_mutable_interior_item() {
  _has_bits_[0] |= 0x00000004u;
  if (interior_item_ == nullptr) {
    auto* p = CreateMaybeMessage<::CSOEconItem>(GetArenaForAllocation());
    interior_item_ = p;
  }
  return interior_item_;
}
inline ::CSOEconItem* CSOEconItem::mutable_interior_item() {
  // @@protoc_insertion_point(field_mutable:CSOEconItem.interior_item)
  return _internal_mutable_interior_item();
}
inline void CSOEconItem::set_allocated_interior_item(::CSOEconItem* interior_item) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete interior_item_;
  }
  if (interior_item) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CSOEconItem>::GetOwningArena(interior_item);
    if (message_arena != submessage_arena) {
      interior_item = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, interior_item, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  interior_item_ = interior_item;
  // @@protoc_insertion_point(field_set_allocated:CSOEconItem.interior_item)
}

// optional bool in_use = 14 [default = false];
inline bool CSOEconItem::_internal_has_in_use() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CSOEconItem::has_in_use() const {
  return _internal_has_in_use();
}
inline void CSOEconItem::clear_in_use() {
  in_use_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool CSOEconItem::_internal_in_use() const {
  return in_use_;
}
inline bool CSOEconItem::in_use() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.in_use)
  return _internal_in_use();
}
inline void CSOEconItem::_internal_set_in_use(bool value) {
  _has_bits_[0] |= 0x00004000u;
  in_use_ = value;
}
inline void CSOEconItem::set_in_use(bool value) {
  _internal_set_in_use(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.in_use)
}

// optional uint32 style = 15 [default = 0];
inline bool CSOEconItem::_internal_has_style() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CSOEconItem::has_style() const {
  return _internal_has_style();
}
inline void CSOEconItem::clear_style() {
  style_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::_internal_style() const {
  return style_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItem::style() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.style)
  return _internal_style();
}
inline void CSOEconItem::_internal_set_style(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  style_ = value;
}
inline void CSOEconItem::set_style(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_style(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.style)
}

// optional uint64 original_id = 16 [default = 0];
inline bool CSOEconItem::_internal_has_original_id() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CSOEconItem::has_original_id() const {
  return _internal_has_original_id();
}
inline void CSOEconItem::clear_original_id() {
  original_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CSOEconItem::_internal_original_id() const {
  return original_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CSOEconItem::original_id() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.original_id)
  return _internal_original_id();
}
inline void CSOEconItem::_internal_set_original_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00001000u;
  original_id_ = value;
}
inline void CSOEconItem::set_original_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_original_id(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.original_id)
}

// optional bool contains_equipped_state = 17;
inline bool CSOEconItem::_internal_has_contains_equipped_state() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CSOEconItem::has_contains_equipped_state() const {
  return _internal_has_contains_equipped_state();
}
inline void CSOEconItem::clear_contains_equipped_state() {
  contains_equipped_state_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool CSOEconItem::_internal_contains_equipped_state() const {
  return contains_equipped_state_;
}
inline bool CSOEconItem::contains_equipped_state() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.contains_equipped_state)
  return _internal_contains_equipped_state();
}
inline void CSOEconItem::_internal_set_contains_equipped_state(bool value) {
  _has_bits_[0] |= 0x00008000u;
  contains_equipped_state_ = value;
}
inline void CSOEconItem::set_contains_equipped_state(bool value) {
  _internal_set_contains_equipped_state(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.contains_equipped_state)
}

// repeated .CSOEconItemEquipped equipped_state = 18;
inline int CSOEconItem::_internal_equipped_state_size() const {
  return equipped_state_.size();
}
inline int CSOEconItem::equipped_state_size() const {
  return _internal_equipped_state_size();
}
inline void CSOEconItem::clear_equipped_state() {
  equipped_state_.Clear();
}
inline ::CSOEconItemEquipped* CSOEconItem::mutable_equipped_state(int index) {
  // @@protoc_insertion_point(field_mutable:CSOEconItem.equipped_state)
  return equipped_state_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemEquipped >*
CSOEconItem::mutable_equipped_state() {
  // @@protoc_insertion_point(field_mutable_list:CSOEconItem.equipped_state)
  return &equipped_state_;
}
inline const ::CSOEconItemEquipped& CSOEconItem::_internal_equipped_state(int index) const {
  return equipped_state_.Get(index);
}
inline const ::CSOEconItemEquipped& CSOEconItem::equipped_state(int index) const {
  // @@protoc_insertion_point(field_get:CSOEconItem.equipped_state)
  return _internal_equipped_state(index);
}
inline ::CSOEconItemEquipped* CSOEconItem::_internal_add_equipped_state() {
  return equipped_state_.Add();
}
inline ::CSOEconItemEquipped* CSOEconItem::add_equipped_state() {
  // @@protoc_insertion_point(field_add:CSOEconItem.equipped_state)
  return _internal_add_equipped_state();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemEquipped >&
CSOEconItem::equipped_state() const {
  // @@protoc_insertion_point(field_list:CSOEconItem.equipped_state)
  return equipped_state_;
}

// optional bool contains_equipped_state_v2 = 19;
inline bool CSOEconItem::_internal_has_contains_equipped_state_v2() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CSOEconItem::has_contains_equipped_state_v2() const {
  return _internal_has_contains_equipped_state_v2();
}
inline void CSOEconItem::clear_contains_equipped_state_v2() {
  contains_equipped_state_v2_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool CSOEconItem::_internal_contains_equipped_state_v2() const {
  return contains_equipped_state_v2_;
}
inline bool CSOEconItem::contains_equipped_state_v2() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.contains_equipped_state_v2)
  return _internal_contains_equipped_state_v2();
}
inline void CSOEconItem::_internal_set_contains_equipped_state_v2(bool value) {
  _has_bits_[0] |= 0x00010000u;
  contains_equipped_state_v2_ = value;
}
inline void CSOEconItem::set_contains_equipped_state_v2(bool value) {
  _internal_set_contains_equipped_state_v2(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.contains_equipped_state_v2)
}

// -------------------------------------------------------------------

// CMsgAdjustItemEquippedState

// optional uint64 item_id = 1;
inline bool CMsgAdjustItemEquippedState::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAdjustItemEquippedState::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgAdjustItemEquippedState::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgAdjustItemEquippedState::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgAdjustItemEquippedState::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgAdjustItemEquippedState.item_id)
  return _internal_item_id();
}
inline void CMsgAdjustItemEquippedState::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
}
inline void CMsgAdjustItemEquippedState::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgAdjustItemEquippedState.item_id)
}

// optional uint32 new_class = 2;
inline bool CMsgAdjustItemEquippedState::_internal_has_new_class() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAdjustItemEquippedState::has_new_class() const {
  return _internal_has_new_class();
}
inline void CMsgAdjustItemEquippedState::clear_new_class() {
  new_class_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAdjustItemEquippedState::_internal_new_class() const {
  return new_class_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAdjustItemEquippedState::new_class() const {
  // @@protoc_insertion_point(field_get:CMsgAdjustItemEquippedState.new_class)
  return _internal_new_class();
}
inline void CMsgAdjustItemEquippedState::_internal_set_new_class(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  new_class_ = value;
}
inline void CMsgAdjustItemEquippedState::set_new_class(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_new_class(value);
  // @@protoc_insertion_point(field_set:CMsgAdjustItemEquippedState.new_class)
}

// optional uint32 new_slot = 3;
inline bool CMsgAdjustItemEquippedState::_internal_has_new_slot() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgAdjustItemEquippedState::has_new_slot() const {
  return _internal_has_new_slot();
}
inline void CMsgAdjustItemEquippedState::clear_new_slot() {
  new_slot_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAdjustItemEquippedState::_internal_new_slot() const {
  return new_slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAdjustItemEquippedState::new_slot() const {
  // @@protoc_insertion_point(field_get:CMsgAdjustItemEquippedState.new_slot)
  return _internal_new_slot();
}
inline void CMsgAdjustItemEquippedState::_internal_set_new_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  new_slot_ = value;
}
inline void CMsgAdjustItemEquippedState::set_new_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_new_slot(value);
  // @@protoc_insertion_point(field_set:CMsgAdjustItemEquippedState.new_slot)
}

// -------------------------------------------------------------------

// CMsgSortItems

// optional uint32 sort_type = 1;
inline bool CMsgSortItems::_internal_has_sort_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSortItems::has_sort_type() const {
  return _internal_has_sort_type();
}
inline void CMsgSortItems::clear_sort_type() {
  sort_type_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSortItems::_internal_sort_type() const {
  return sort_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSortItems::sort_type() const {
  // @@protoc_insertion_point(field_get:CMsgSortItems.sort_type)
  return _internal_sort_type();
}
inline void CMsgSortItems::_internal_set_sort_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  sort_type_ = value;
}
inline void CMsgSortItems::set_sort_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sort_type(value);
  // @@protoc_insertion_point(field_set:CMsgSortItems.sort_type)
}

// -------------------------------------------------------------------

// CSOEconClaimCode

// optional uint32 account_id = 1;
inline bool CSOEconClaimCode::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOEconClaimCode::has_account_id() const {
  return _internal_has_account_id();
}
inline void CSOEconClaimCode::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconClaimCode::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconClaimCode::account_id() const {
  // @@protoc_insertion_point(field_get:CSOEconClaimCode.account_id)
  return _internal_account_id();
}
inline void CSOEconClaimCode::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
}
inline void CSOEconClaimCode::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CSOEconClaimCode.account_id)
}

// optional uint32 code_type = 2;
inline bool CSOEconClaimCode::_internal_has_code_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOEconClaimCode::has_code_type() const {
  return _internal_has_code_type();
}
inline void CSOEconClaimCode::clear_code_type() {
  code_type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconClaimCode::_internal_code_type() const {
  return code_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconClaimCode::code_type() const {
  // @@protoc_insertion_point(field_get:CSOEconClaimCode.code_type)
  return _internal_code_type();
}
inline void CSOEconClaimCode::_internal_set_code_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  code_type_ = value;
}
inline void CSOEconClaimCode::set_code_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_code_type(value);
  // @@protoc_insertion_point(field_set:CSOEconClaimCode.code_type)
}

// optional uint32 time_acquired = 3;
inline bool CSOEconClaimCode::_internal_has_time_acquired() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOEconClaimCode::has_time_acquired() const {
  return _internal_has_time_acquired();
}
inline void CSOEconClaimCode::clear_time_acquired() {
  time_acquired_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconClaimCode::_internal_time_acquired() const {
  return time_acquired_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconClaimCode::time_acquired() const {
  // @@protoc_insertion_point(field_get:CSOEconClaimCode.time_acquired)
  return _internal_time_acquired();
}
inline void CSOEconClaimCode::_internal_set_time_acquired(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  time_acquired_ = value;
}
inline void CSOEconClaimCode::set_time_acquired(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_acquired(value);
  // @@protoc_insertion_point(field_set:CSOEconClaimCode.time_acquired)
}

// optional string code = 4;
inline bool CSOEconClaimCode::_internal_has_code() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOEconClaimCode::has_code() const {
  return _internal_has_code();
}
inline void CSOEconClaimCode::clear_code() {
  code_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CSOEconClaimCode::code() const {
  // @@protoc_insertion_point(field_get:CSOEconClaimCode.code)
  return _internal_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOEconClaimCode::set_code(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOEconClaimCode.code)
}
inline std::string* CSOEconClaimCode::mutable_code() {
  // @@protoc_insertion_point(field_mutable:CSOEconClaimCode.code)
  return _internal_mutable_code();
}
inline const std::string& CSOEconClaimCode::_internal_code() const {
  return code_.Get();
}
inline void CSOEconClaimCode::_internal_set_code(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CSOEconClaimCode::_internal_mutable_code() {
  _has_bits_[0] |= 0x00000001u;
  return code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CSOEconClaimCode::release_code() {
  // @@protoc_insertion_point(field_release:CSOEconClaimCode.code)
  if (!_internal_has_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return code_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CSOEconClaimCode::set_allocated_code(std::string* code) {
  if (code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), code,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CSOEconClaimCode.code)
}

// -------------------------------------------------------------------

// CMsgStoreGetUserData

// optional fixed32 price_sheet_version = 1;
inline bool CMsgStoreGetUserData::_internal_has_price_sheet_version() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgStoreGetUserData::has_price_sheet_version() const {
  return _internal_has_price_sheet_version();
}
inline void CMsgStoreGetUserData::clear_price_sheet_version() {
  price_sheet_version_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgStoreGetUserData::_internal_price_sheet_version() const {
  return price_sheet_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgStoreGetUserData::price_sheet_version() const {
  // @@protoc_insertion_point(field_get:CMsgStoreGetUserData.price_sheet_version)
  return _internal_price_sheet_version();
}
inline void CMsgStoreGetUserData::_internal_set_price_sheet_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  price_sheet_version_ = value;
}
inline void CMsgStoreGetUserData::set_price_sheet_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_price_sheet_version(value);
  // @@protoc_insertion_point(field_set:CMsgStoreGetUserData.price_sheet_version)
}

// -------------------------------------------------------------------

// CMsgStoreGetUserDataResponse

// optional int32 result = 1;
inline bool CMsgStoreGetUserDataResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgStoreGetUserDataResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgStoreGetUserDataResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgStoreGetUserDataResponse::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgStoreGetUserDataResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgStoreGetUserDataResponse.result)
  return _internal_result();
}
inline void CMsgStoreGetUserDataResponse::_internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  result_ = value;
}
inline void CMsgStoreGetUserDataResponse::set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgStoreGetUserDataResponse.result)
}

// optional int32 currency = 2;
inline bool CMsgStoreGetUserDataResponse::_internal_has_currency() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgStoreGetUserDataResponse::has_currency() const {
  return _internal_has_currency();
}
inline void CMsgStoreGetUserDataResponse::clear_currency() {
  currency_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgStoreGetUserDataResponse::_internal_currency() const {
  return currency_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgStoreGetUserDataResponse::currency() const {
  // @@protoc_insertion_point(field_get:CMsgStoreGetUserDataResponse.currency)
  return _internal_currency();
}
inline void CMsgStoreGetUserDataResponse::_internal_set_currency(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  currency_ = value;
}
inline void CMsgStoreGetUserDataResponse::set_currency(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:CMsgStoreGetUserDataResponse.currency)
}

// optional string country = 3;
inline bool CMsgStoreGetUserDataResponse::_internal_has_country() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgStoreGetUserDataResponse::has_country() const {
  return _internal_has_country();
}
inline void CMsgStoreGetUserDataResponse::clear_country() {
  country_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgStoreGetUserDataResponse::country() const {
  // @@protoc_insertion_point(field_get:CMsgStoreGetUserDataResponse.country)
  return _internal_country();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgStoreGetUserDataResponse::set_country(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 country_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgStoreGetUserDataResponse.country)
}
inline std::string* CMsgStoreGetUserDataResponse::mutable_country() {
  // @@protoc_insertion_point(field_mutable:CMsgStoreGetUserDataResponse.country)
  return _internal_mutable_country();
}
inline const std::string& CMsgStoreGetUserDataResponse::_internal_country() const {
  return country_.Get();
}
inline void CMsgStoreGetUserDataResponse::_internal_set_country(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  country_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgStoreGetUserDataResponse::_internal_mutable_country() {
  _has_bits_[0] |= 0x00000001u;
  return country_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgStoreGetUserDataResponse::release_country() {
  // @@protoc_insertion_point(field_release:CMsgStoreGetUserDataResponse.country)
  if (!_internal_has_country()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return country_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgStoreGetUserDataResponse::set_allocated_country(std::string* country) {
  if (country != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  country_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), country,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgStoreGetUserDataResponse.country)
}

// optional fixed32 price_sheet_version = 4;
inline bool CMsgStoreGetUserDataResponse::_internal_has_price_sheet_version() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgStoreGetUserDataResponse::has_price_sheet_version() const {
  return _internal_has_price_sheet_version();
}
inline void CMsgStoreGetUserDataResponse::clear_price_sheet_version() {
  price_sheet_version_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgStoreGetUserDataResponse::_internal_price_sheet_version() const {
  return price_sheet_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgStoreGetUserDataResponse::price_sheet_version() const {
  // @@protoc_insertion_point(field_get:CMsgStoreGetUserDataResponse.price_sheet_version)
  return _internal_price_sheet_version();
}
inline void CMsgStoreGetUserDataResponse::_internal_set_price_sheet_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  price_sheet_version_ = value;
}
inline void CMsgStoreGetUserDataResponse::set_price_sheet_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_price_sheet_version(value);
  // @@protoc_insertion_point(field_set:CMsgStoreGetUserDataResponse.price_sheet_version)
}

// optional uint64 experiment_data = 5 [default = 0];
inline bool CMsgStoreGetUserDataResponse::_internal_has_experiment_data() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgStoreGetUserDataResponse::has_experiment_data() const {
  return _internal_has_experiment_data();
}
inline void CMsgStoreGetUserDataResponse::clear_experiment_data() {
  experiment_data_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgStoreGetUserDataResponse::_internal_experiment_data() const {
  return experiment_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgStoreGetUserDataResponse::experiment_data() const {
  // @@protoc_insertion_point(field_get:CMsgStoreGetUserDataResponse.experiment_data)
  return _internal_experiment_data();
}
inline void CMsgStoreGetUserDataResponse::_internal_set_experiment_data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  experiment_data_ = value;
}
inline void CMsgStoreGetUserDataResponse::set_experiment_data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_experiment_data(value);
  // @@protoc_insertion_point(field_set:CMsgStoreGetUserDataResponse.experiment_data)
}

// optional int32 featured_item_idx = 6;
inline bool CMsgStoreGetUserDataResponse::_internal_has_featured_item_idx() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgStoreGetUserDataResponse::has_featured_item_idx() const {
  return _internal_has_featured_item_idx();
}
inline void CMsgStoreGetUserDataResponse::clear_featured_item_idx() {
  featured_item_idx_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgStoreGetUserDataResponse::_internal_featured_item_idx() const {
  return featured_item_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgStoreGetUserDataResponse::featured_item_idx() const {
  // @@protoc_insertion_point(field_get:CMsgStoreGetUserDataResponse.featured_item_idx)
  return _internal_featured_item_idx();
}
inline void CMsgStoreGetUserDataResponse::_internal_set_featured_item_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  featured_item_idx_ = value;
}
inline void CMsgStoreGetUserDataResponse::set_featured_item_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_featured_item_idx(value);
  // @@protoc_insertion_point(field_set:CMsgStoreGetUserDataResponse.featured_item_idx)
}

// optional bool show_hat_descriptions = 7 [default = true];
inline bool CMsgStoreGetUserDataResponse::_internal_has_show_hat_descriptions() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgStoreGetUserDataResponse::has_show_hat_descriptions() const {
  return _internal_has_show_hat_descriptions();
}
inline void CMsgStoreGetUserDataResponse::clear_show_hat_descriptions() {
  show_hat_descriptions_ = true;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CMsgStoreGetUserDataResponse::_internal_show_hat_descriptions() const {
  return show_hat_descriptions_;
}
inline bool CMsgStoreGetUserDataResponse::show_hat_descriptions() const {
  // @@protoc_insertion_point(field_get:CMsgStoreGetUserDataResponse.show_hat_descriptions)
  return _internal_show_hat_descriptions();
}
inline void CMsgStoreGetUserDataResponse::_internal_set_show_hat_descriptions(bool value) {
  _has_bits_[0] |= 0x00000100u;
  show_hat_descriptions_ = value;
}
inline void CMsgStoreGetUserDataResponse::set_show_hat_descriptions(bool value) {
  _internal_set_show_hat_descriptions(value);
  // @@protoc_insertion_point(field_set:CMsgStoreGetUserDataResponse.show_hat_descriptions)
}

// optional bytes price_sheet = 8;
inline bool CMsgStoreGetUserDataResponse::_internal_has_price_sheet() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgStoreGetUserDataResponse::has_price_sheet() const {
  return _internal_has_price_sheet();
}
inline void CMsgStoreGetUserDataResponse::clear_price_sheet() {
  price_sheet_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgStoreGetUserDataResponse::price_sheet() const {
  // @@protoc_insertion_point(field_get:CMsgStoreGetUserDataResponse.price_sheet)
  return _internal_price_sheet();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgStoreGetUserDataResponse::set_price_sheet(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 price_sheet_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgStoreGetUserDataResponse.price_sheet)
}
inline std::string* CMsgStoreGetUserDataResponse::mutable_price_sheet() {
  // @@protoc_insertion_point(field_mutable:CMsgStoreGetUserDataResponse.price_sheet)
  return _internal_mutable_price_sheet();
}
inline const std::string& CMsgStoreGetUserDataResponse::_internal_price_sheet() const {
  return price_sheet_.Get();
}
inline void CMsgStoreGetUserDataResponse::_internal_set_price_sheet(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  price_sheet_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgStoreGetUserDataResponse::_internal_mutable_price_sheet() {
  _has_bits_[0] |= 0x00000002u;
  return price_sheet_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgStoreGetUserDataResponse::release_price_sheet() {
  // @@protoc_insertion_point(field_release:CMsgStoreGetUserDataResponse.price_sheet)
  if (!_internal_has_price_sheet()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return price_sheet_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgStoreGetUserDataResponse::set_allocated_price_sheet(std::string* price_sheet) {
  if (price_sheet != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  price_sheet_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), price_sheet,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgStoreGetUserDataResponse.price_sheet)
}

// optional int32 default_item_sort = 9 [default = 0];
inline bool CMsgStoreGetUserDataResponse::_internal_has_default_item_sort() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgStoreGetUserDataResponse::has_default_item_sort() const {
  return _internal_has_default_item_sort();
}
inline void CMsgStoreGetUserDataResponse::clear_default_item_sort() {
  default_item_sort_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgStoreGetUserDataResponse::_internal_default_item_sort() const {
  return default_item_sort_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgStoreGetUserDataResponse::default_item_sort() const {
  // @@protoc_insertion_point(field_get:CMsgStoreGetUserDataResponse.default_item_sort)
  return _internal_default_item_sort();
}
inline void CMsgStoreGetUserDataResponse::_internal_set_default_item_sort(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  default_item_sort_ = value;
}
inline void CMsgStoreGetUserDataResponse::set_default_item_sort(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_default_item_sort(value);
  // @@protoc_insertion_point(field_set:CMsgStoreGetUserDataResponse.default_item_sort)
}

// repeated uint32 popular_items = 10;
inline int CMsgStoreGetUserDataResponse::_internal_popular_items_size() const {
  return popular_items_.size();
}
inline int CMsgStoreGetUserDataResponse::popular_items_size() const {
  return _internal_popular_items_size();
}
inline void CMsgStoreGetUserDataResponse::clear_popular_items() {
  popular_items_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgStoreGetUserDataResponse::_internal_popular_items(int index) const {
  return popular_items_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgStoreGetUserDataResponse::popular_items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgStoreGetUserDataResponse.popular_items)
  return _internal_popular_items(index);
}
inline void CMsgStoreGetUserDataResponse::set_popular_items(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  popular_items_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgStoreGetUserDataResponse.popular_items)
}
inline void CMsgStoreGetUserDataResponse::_internal_add_popular_items(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  popular_items_.Add(value);
}
inline void CMsgStoreGetUserDataResponse::add_popular_items(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_popular_items(value);
  // @@protoc_insertion_point(field_add:CMsgStoreGetUserDataResponse.popular_items)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgStoreGetUserDataResponse::_internal_popular_items() const {
  return popular_items_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgStoreGetUserDataResponse::popular_items() const {
  // @@protoc_insertion_point(field_list:CMsgStoreGetUserDataResponse.popular_items)
  return _internal_popular_items();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgStoreGetUserDataResponse::_internal_mutable_popular_items() {
  return &popular_items_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgStoreGetUserDataResponse::mutable_popular_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgStoreGetUserDataResponse.popular_items)
  return _internal_mutable_popular_items();
}

// -------------------------------------------------------------------

// CMsgUpdateItemSchema

// optional bytes items_game = 1;
inline bool CMsgUpdateItemSchema::_internal_has_items_game() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgUpdateItemSchema::has_items_game() const {
  return _internal_has_items_game();
}
inline void CMsgUpdateItemSchema::clear_items_game() {
  items_game_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgUpdateItemSchema::items_game() const {
  // @@protoc_insertion_point(field_get:CMsgUpdateItemSchema.items_game)
  return _internal_items_game();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgUpdateItemSchema::set_items_game(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 items_game_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgUpdateItemSchema.items_game)
}
inline std::string* CMsgUpdateItemSchema::mutable_items_game() {
  // @@protoc_insertion_point(field_mutable:CMsgUpdateItemSchema.items_game)
  return _internal_mutable_items_game();
}
inline const std::string& CMsgUpdateItemSchema::_internal_items_game() const {
  return items_game_.Get();
}
inline void CMsgUpdateItemSchema::_internal_set_items_game(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  items_game_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgUpdateItemSchema::_internal_mutable_items_game() {
  _has_bits_[0] |= 0x00000001u;
  return items_game_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgUpdateItemSchema::release_items_game() {
  // @@protoc_insertion_point(field_release:CMsgUpdateItemSchema.items_game)
  if (!_internal_has_items_game()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return items_game_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgUpdateItemSchema::set_allocated_items_game(std::string* items_game) {
  if (items_game != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  items_game_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), items_game,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgUpdateItemSchema.items_game)
}

// optional fixed32 item_schema_version = 2;
inline bool CMsgUpdateItemSchema::_internal_has_item_schema_version() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgUpdateItemSchema::has_item_schema_version() const {
  return _internal_has_item_schema_version();
}
inline void CMsgUpdateItemSchema::clear_item_schema_version() {
  item_schema_version_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUpdateItemSchema::_internal_item_schema_version() const {
  return item_schema_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUpdateItemSchema::item_schema_version() const {
  // @@protoc_insertion_point(field_get:CMsgUpdateItemSchema.item_schema_version)
  return _internal_item_schema_version();
}
inline void CMsgUpdateItemSchema::_internal_set_item_schema_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  item_schema_version_ = value;
}
inline void CMsgUpdateItemSchema::set_item_schema_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_schema_version(value);
  // @@protoc_insertion_point(field_set:CMsgUpdateItemSchema.item_schema_version)
}

// optional string items_game_url = 3;
inline bool CMsgUpdateItemSchema::_internal_has_items_game_url() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgUpdateItemSchema::has_items_game_url() const {
  return _internal_has_items_game_url();
}
inline void CMsgUpdateItemSchema::clear_items_game_url() {
  items_game_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgUpdateItemSchema::items_game_url() const {
  // @@protoc_insertion_point(field_get:CMsgUpdateItemSchema.items_game_url)
  return _internal_items_game_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgUpdateItemSchema::set_items_game_url(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 items_game_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgUpdateItemSchema.items_game_url)
}
inline std::string* CMsgUpdateItemSchema::mutable_items_game_url() {
  // @@protoc_insertion_point(field_mutable:CMsgUpdateItemSchema.items_game_url)
  return _internal_mutable_items_game_url();
}
inline const std::string& CMsgUpdateItemSchema::_internal_items_game_url() const {
  return items_game_url_.Get();
}
inline void CMsgUpdateItemSchema::_internal_set_items_game_url(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  items_game_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgUpdateItemSchema::_internal_mutable_items_game_url() {
  _has_bits_[0] |= 0x00000002u;
  return items_game_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgUpdateItemSchema::release_items_game_url() {
  // @@protoc_insertion_point(field_release:CMsgUpdateItemSchema.items_game_url)
  if (!_internal_has_items_game_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return items_game_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgUpdateItemSchema::set_allocated_items_game_url(std::string* items_game_url) {
  if (items_game_url != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  items_game_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), items_game_url,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgUpdateItemSchema.items_game_url)
}

// optional bytes signature = 4;
inline bool CMsgUpdateItemSchema::_internal_has_signature() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgUpdateItemSchema::has_signature() const {
  return _internal_has_signature();
}
inline void CMsgUpdateItemSchema::clear_signature() {
  signature_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgUpdateItemSchema::signature() const {
  // @@protoc_insertion_point(field_get:CMsgUpdateItemSchema.signature)
  return _internal_signature();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgUpdateItemSchema::set_signature(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000004u;
 signature_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgUpdateItemSchema.signature)
}
inline std::string* CMsgUpdateItemSchema::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:CMsgUpdateItemSchema.signature)
  return _internal_mutable_signature();
}
inline const std::string& CMsgUpdateItemSchema::_internal_signature() const {
  return signature_.Get();
}
inline void CMsgUpdateItemSchema::_internal_set_signature(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgUpdateItemSchema::_internal_mutable_signature() {
  _has_bits_[0] |= 0x00000004u;
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgUpdateItemSchema::release_signature() {
  // @@protoc_insertion_point(field_release:CMsgUpdateItemSchema.signature)
  if (!_internal_has_signature()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return signature_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgUpdateItemSchema::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgUpdateItemSchema.signature)
}

// -------------------------------------------------------------------

// CMsgGCError

// optional string error_text = 1;
inline bool CMsgGCError::_internal_has_error_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCError::has_error_text() const {
  return _internal_has_error_text();
}
inline void CMsgGCError::clear_error_text() {
  error_text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCError::error_text() const {
  // @@protoc_insertion_point(field_get:CMsgGCError.error_text)
  return _internal_error_text();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCError::set_error_text(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 error_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCError.error_text)
}
inline std::string* CMsgGCError::mutable_error_text() {
  // @@protoc_insertion_point(field_mutable:CMsgGCError.error_text)
  return _internal_mutable_error_text();
}
inline const std::string& CMsgGCError::_internal_error_text() const {
  return error_text_.Get();
}
inline void CMsgGCError::_internal_set_error_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  error_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgGCError::_internal_mutable_error_text() {
  _has_bits_[0] |= 0x00000001u;
  return error_text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgGCError::release_error_text() {
  // @@protoc_insertion_point(field_release:CMsgGCError.error_text)
  if (!_internal_has_error_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return error_text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgGCError::set_allocated_error_text(std::string* error_text) {
  if (error_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  error_text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error_text,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCError.error_text)
}

// -------------------------------------------------------------------

// CMsgRequestInventoryRefresh

// -------------------------------------------------------------------

// CMsgConVarValue

// optional string name = 1;
inline bool CMsgConVarValue::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgConVarValue::has_name() const {
  return _internal_has_name();
}
inline void CMsgConVarValue::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgConVarValue::name() const {
  // @@protoc_insertion_point(field_get:CMsgConVarValue.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgConVarValue::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgConVarValue.name)
}
inline std::string* CMsgConVarValue::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CMsgConVarValue.name)
  return _internal_mutable_name();
}
inline const std::string& CMsgConVarValue::_internal_name() const {
  return name_.Get();
}
inline void CMsgConVarValue::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgConVarValue::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgConVarValue::release_name() {
  // @@protoc_insertion_point(field_release:CMsgConVarValue.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgConVarValue::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgConVarValue.name)
}

// optional string value = 2;
inline bool CMsgConVarValue::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgConVarValue::has_value() const {
  return _internal_has_value();
}
inline void CMsgConVarValue::clear_value() {
  value_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgConVarValue::value() const {
  // @@protoc_insertion_point(field_get:CMsgConVarValue.value)
  return _internal_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgConVarValue::set_value(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgConVarValue.value)
}
inline std::string* CMsgConVarValue::mutable_value() {
  // @@protoc_insertion_point(field_mutable:CMsgConVarValue.value)
  return _internal_mutable_value();
}
inline const std::string& CMsgConVarValue::_internal_value() const {
  return value_.Get();
}
inline void CMsgConVarValue::_internal_set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgConVarValue::_internal_mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  return value_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgConVarValue::release_value() {
  // @@protoc_insertion_point(field_release:CMsgConVarValue.value)
  if (!_internal_has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgConVarValue::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgConVarValue.value)
}

// -------------------------------------------------------------------

// CMsgReplicateConVars

// repeated .CMsgConVarValue convars = 1;
inline int CMsgReplicateConVars::_internal_convars_size() const {
  return convars_.size();
}
inline int CMsgReplicateConVars::convars_size() const {
  return _internal_convars_size();
}
inline void CMsgReplicateConVars::clear_convars() {
  convars_.Clear();
}
inline ::CMsgConVarValue* CMsgReplicateConVars::mutable_convars(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgReplicateConVars.convars)
  return convars_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgConVarValue >*
CMsgReplicateConVars::mutable_convars() {
  // @@protoc_insertion_point(field_mutable_list:CMsgReplicateConVars.convars)
  return &convars_;
}
inline const ::CMsgConVarValue& CMsgReplicateConVars::_internal_convars(int index) const {
  return convars_.Get(index);
}
inline const ::CMsgConVarValue& CMsgReplicateConVars::convars(int index) const {
  // @@protoc_insertion_point(field_get:CMsgReplicateConVars.convars)
  return _internal_convars(index);
}
inline ::CMsgConVarValue* CMsgReplicateConVars::_internal_add_convars() {
  return convars_.Add();
}
inline ::CMsgConVarValue* CMsgReplicateConVars::add_convars() {
  // @@protoc_insertion_point(field_add:CMsgReplicateConVars.convars)
  return _internal_add_convars();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgConVarValue >&
CMsgReplicateConVars::convars() const {
  // @@protoc_insertion_point(field_list:CMsgReplicateConVars.convars)
  return convars_;
}

// -------------------------------------------------------------------

// CMsgUseItem

// optional uint64 item_id = 1;
inline bool CMsgUseItem::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgUseItem::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgUseItem::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgUseItem::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgUseItem::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.item_id)
  return _internal_item_id();
}
inline void CMsgUseItem::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
}
inline void CMsgUseItem::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.item_id)
}

// optional fixed64 target_steam_id = 2;
inline bool CMsgUseItem::_internal_has_target_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgUseItem::has_target_steam_id() const {
  return _internal_has_target_steam_id();
}
inline void CMsgUseItem::clear_target_steam_id() {
  target_steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgUseItem::_internal_target_steam_id() const {
  return target_steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgUseItem::target_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.target_steam_id)
  return _internal_target_steam_id();
}
inline void CMsgUseItem::_internal_set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  target_steam_id_ = value;
}
inline void CMsgUseItem::set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_target_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.target_steam_id)
}

// repeated uint32 gift__potential_targets = 3;
inline int CMsgUseItem::_internal_gift__potential_targets_size() const {
  return gift__potential_targets_.size();
}
inline int CMsgUseItem::gift__potential_targets_size() const {
  return _internal_gift__potential_targets_size();
}
inline void CMsgUseItem::clear_gift__potential_targets() {
  gift__potential_targets_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUseItem::_internal_gift__potential_targets(int index) const {
  return gift__potential_targets_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUseItem::gift__potential_targets(int index) const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.gift__potential_targets)
  return _internal_gift__potential_targets(index);
}
inline void CMsgUseItem::set_gift__potential_targets(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  gift__potential_targets_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.gift__potential_targets)
}
inline void CMsgUseItem::_internal_add_gift__potential_targets(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  gift__potential_targets_.Add(value);
}
inline void CMsgUseItem::add_gift__potential_targets(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_gift__potential_targets(value);
  // @@protoc_insertion_point(field_add:CMsgUseItem.gift__potential_targets)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgUseItem::_internal_gift__potential_targets() const {
  return gift__potential_targets_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgUseItem::gift__potential_targets() const {
  // @@protoc_insertion_point(field_list:CMsgUseItem.gift__potential_targets)
  return _internal_gift__potential_targets();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgUseItem::_internal_mutable_gift__potential_targets() {
  return &gift__potential_targets_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgUseItem::mutable_gift__potential_targets() {
  // @@protoc_insertion_point(field_mutable_list:CMsgUseItem.gift__potential_targets)
  return _internal_mutable_gift__potential_targets();
}

// optional uint32 duel__class_lock = 4;
inline bool CMsgUseItem::_internal_has_duel__class_lock() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgUseItem::has_duel__class_lock() const {
  return _internal_has_duel__class_lock();
}
inline void CMsgUseItem::clear_duel__class_lock() {
  duel__class_lock_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUseItem::_internal_duel__class_lock() const {
  return duel__class_lock_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUseItem::duel__class_lock() const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.duel__class_lock)
  return _internal_duel__class_lock();
}
inline void CMsgUseItem::_internal_set_duel__class_lock(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  duel__class_lock_ = value;
}
inline void CMsgUseItem::set_duel__class_lock(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_duel__class_lock(value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.duel__class_lock)
}

// optional fixed64 initiator_steam_id = 5;
inline bool CMsgUseItem::_internal_has_initiator_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgUseItem::has_initiator_steam_id() const {
  return _internal_has_initiator_steam_id();
}
inline void CMsgUseItem::clear_initiator_steam_id() {
  initiator_steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgUseItem::_internal_initiator_steam_id() const {
  return initiator_steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgUseItem::initiator_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.initiator_steam_id)
  return _internal_initiator_steam_id();
}
inline void CMsgUseItem::_internal_set_initiator_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  initiator_steam_id_ = value;
}
inline void CMsgUseItem::set_initiator_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_initiator_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.initiator_steam_id)
}

// optional bool itempack__ack_immediately = 6;
inline bool CMsgUseItem::_internal_has_itempack__ack_immediately() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgUseItem::has_itempack__ack_immediately() const {
  return _internal_has_itempack__ack_immediately();
}
inline void CMsgUseItem::clear_itempack__ack_immediately() {
  itempack__ack_immediately_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgUseItem::_internal_itempack__ack_immediately() const {
  return itempack__ack_immediately_;
}
inline bool CMsgUseItem::itempack__ack_immediately() const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.itempack__ack_immediately)
  return _internal_itempack__ack_immediately();
}
inline void CMsgUseItem::_internal_set_itempack__ack_immediately(bool value) {
  _has_bits_[0] |= 0x00000010u;
  itempack__ack_immediately_ = value;
}
inline void CMsgUseItem::set_itempack__ack_immediately(bool value) {
  _internal_set_itempack__ack_immediately(value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.itempack__ack_immediately)
}

// -------------------------------------------------------------------

// CMsgReplayUploadedToYouTube

// optional string youtube_url = 1;
inline bool CMsgReplayUploadedToYouTube::_internal_has_youtube_url() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgReplayUploadedToYouTube::has_youtube_url() const {
  return _internal_has_youtube_url();
}
inline void CMsgReplayUploadedToYouTube::clear_youtube_url() {
  youtube_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgReplayUploadedToYouTube::youtube_url() const {
  // @@protoc_insertion_point(field_get:CMsgReplayUploadedToYouTube.youtube_url)
  return _internal_youtube_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgReplayUploadedToYouTube::set_youtube_url(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 youtube_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgReplayUploadedToYouTube.youtube_url)
}
inline std::string* CMsgReplayUploadedToYouTube::mutable_youtube_url() {
  // @@protoc_insertion_point(field_mutable:CMsgReplayUploadedToYouTube.youtube_url)
  return _internal_mutable_youtube_url();
}
inline const std::string& CMsgReplayUploadedToYouTube::_internal_youtube_url() const {
  return youtube_url_.Get();
}
inline void CMsgReplayUploadedToYouTube::_internal_set_youtube_url(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  youtube_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgReplayUploadedToYouTube::_internal_mutable_youtube_url() {
  _has_bits_[0] |= 0x00000001u;
  return youtube_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgReplayUploadedToYouTube::release_youtube_url() {
  // @@protoc_insertion_point(field_release:CMsgReplayUploadedToYouTube.youtube_url)
  if (!_internal_has_youtube_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return youtube_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgReplayUploadedToYouTube::set_allocated_youtube_url(std::string* youtube_url) {
  if (youtube_url != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  youtube_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), youtube_url,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgReplayUploadedToYouTube.youtube_url)
}

// optional string youtube_account_name = 2;
inline bool CMsgReplayUploadedToYouTube::_internal_has_youtube_account_name() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgReplayUploadedToYouTube::has_youtube_account_name() const {
  return _internal_has_youtube_account_name();
}
inline void CMsgReplayUploadedToYouTube::clear_youtube_account_name() {
  youtube_account_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgReplayUploadedToYouTube::youtube_account_name() const {
  // @@protoc_insertion_point(field_get:CMsgReplayUploadedToYouTube.youtube_account_name)
  return _internal_youtube_account_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgReplayUploadedToYouTube::set_youtube_account_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 youtube_account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgReplayUploadedToYouTube.youtube_account_name)
}
inline std::string* CMsgReplayUploadedToYouTube::mutable_youtube_account_name() {
  // @@protoc_insertion_point(field_mutable:CMsgReplayUploadedToYouTube.youtube_account_name)
  return _internal_mutable_youtube_account_name();
}
inline const std::string& CMsgReplayUploadedToYouTube::_internal_youtube_account_name() const {
  return youtube_account_name_.Get();
}
inline void CMsgReplayUploadedToYouTube::_internal_set_youtube_account_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  youtube_account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgReplayUploadedToYouTube::_internal_mutable_youtube_account_name() {
  _has_bits_[0] |= 0x00000002u;
  return youtube_account_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgReplayUploadedToYouTube::release_youtube_account_name() {
  // @@protoc_insertion_point(field_release:CMsgReplayUploadedToYouTube.youtube_account_name)
  if (!_internal_has_youtube_account_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return youtube_account_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgReplayUploadedToYouTube::set_allocated_youtube_account_name(std::string* youtube_account_name) {
  if (youtube_account_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  youtube_account_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), youtube_account_name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgReplayUploadedToYouTube.youtube_account_name)
}

// optional uint64 session_id = 3;
inline bool CMsgReplayUploadedToYouTube::_internal_has_session_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgReplayUploadedToYouTube::has_session_id() const {
  return _internal_has_session_id();
}
inline void CMsgReplayUploadedToYouTube::clear_session_id() {
  session_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgReplayUploadedToYouTube::_internal_session_id() const {
  return session_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgReplayUploadedToYouTube::session_id() const {
  // @@protoc_insertion_point(field_get:CMsgReplayUploadedToYouTube.session_id)
  return _internal_session_id();
}
inline void CMsgReplayUploadedToYouTube::_internal_set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  session_id_ = value;
}
inline void CMsgReplayUploadedToYouTube::set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:CMsgReplayUploadedToYouTube.session_id)
}

// -------------------------------------------------------------------

// CMsgConsumableExhausted

// optional int32 item_def_id = 1;
inline bool CMsgConsumableExhausted::_internal_has_item_def_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgConsumableExhausted::has_item_def_id() const {
  return _internal_has_item_def_id();
}
inline void CMsgConsumableExhausted::clear_item_def_id() {
  item_def_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgConsumableExhausted::_internal_item_def_id() const {
  return item_def_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgConsumableExhausted::item_def_id() const {
  // @@protoc_insertion_point(field_get:CMsgConsumableExhausted.item_def_id)
  return _internal_item_def_id();
}
inline void CMsgConsumableExhausted::_internal_set_item_def_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_def_id_ = value;
}
inline void CMsgConsumableExhausted::set_item_def_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_def_id(value);
  // @@protoc_insertion_point(field_set:CMsgConsumableExhausted.item_def_id)
}

// -------------------------------------------------------------------

// CMsgItemAcknowledged

// optional uint32 account_id = 1;
inline bool CMsgItemAcknowledged::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgItemAcknowledged::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.account_id)
  return _internal_account_id();
}
inline void CMsgItemAcknowledged::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
}
inline void CMsgItemAcknowledged::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.account_id)
}

// optional uint32 inventory = 2;
inline bool CMsgItemAcknowledged::_internal_has_inventory() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_inventory() const {
  return _internal_has_inventory();
}
inline void CMsgItemAcknowledged::clear_inventory() {
  inventory_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::_internal_inventory() const {
  return inventory_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::inventory() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.inventory)
  return _internal_inventory();
}
inline void CMsgItemAcknowledged::_internal_set_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  inventory_ = value;
}
inline void CMsgItemAcknowledged::set_inventory(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_inventory(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.inventory)
}

// optional uint32 def_index = 3;
inline bool CMsgItemAcknowledged::_internal_has_def_index() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_def_index() const {
  return _internal_has_def_index();
}
inline void CMsgItemAcknowledged::clear_def_index() {
  def_index_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::_internal_def_index() const {
  return def_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.def_index)
  return _internal_def_index();
}
inline void CMsgItemAcknowledged::_internal_set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  def_index_ = value;
}
inline void CMsgItemAcknowledged::set_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.def_index)
}

// optional uint32 quality = 4;
inline bool CMsgItemAcknowledged::_internal_has_quality() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_quality() const {
  return _internal_has_quality();
}
inline void CMsgItemAcknowledged::clear_quality() {
  quality_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::_internal_quality() const {
  return quality_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::quality() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.quality)
  return _internal_quality();
}
inline void CMsgItemAcknowledged::_internal_set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  quality_ = value;
}
inline void CMsgItemAcknowledged::set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quality(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.quality)
}

// optional uint32 rarity = 5;
inline bool CMsgItemAcknowledged::_internal_has_rarity() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_rarity() const {
  return _internal_has_rarity();
}
inline void CMsgItemAcknowledged::clear_rarity() {
  rarity_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::_internal_rarity() const {
  return rarity_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::rarity() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.rarity)
  return _internal_rarity();
}
inline void CMsgItemAcknowledged::_internal_set_rarity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  rarity_ = value;
}
inline void CMsgItemAcknowledged::set_rarity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rarity(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.rarity)
}

// optional uint32 origin = 6;
inline bool CMsgItemAcknowledged::_internal_has_origin() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_origin() const {
  return _internal_has_origin();
}
inline void CMsgItemAcknowledged::clear_origin() {
  origin_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::_internal_origin() const {
  return origin_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::origin() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.origin)
  return _internal_origin();
}
inline void CMsgItemAcknowledged::_internal_set_origin(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  origin_ = value;
}
inline void CMsgItemAcknowledged::set_origin(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_origin(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.origin)
}

// optional uint32 is_strange = 7;
inline bool CMsgItemAcknowledged::_internal_has_is_strange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_is_strange() const {
  return _internal_has_is_strange();
}
inline void CMsgItemAcknowledged::clear_is_strange() {
  is_strange_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::_internal_is_strange() const {
  return is_strange_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::is_strange() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.is_strange)
  return _internal_is_strange();
}
inline void CMsgItemAcknowledged::_internal_set_is_strange(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  is_strange_ = value;
}
inline void CMsgItemAcknowledged::set_is_strange(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_is_strange(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.is_strange)
}

// optional uint32 is_unusual = 8;
inline bool CMsgItemAcknowledged::_internal_has_is_unusual() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_is_unusual() const {
  return _internal_has_is_unusual();
}
inline void CMsgItemAcknowledged::clear_is_unusual() {
  is_unusual_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::_internal_is_unusual() const {
  return is_unusual_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgItemAcknowledged::is_unusual() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.is_unusual)
  return _internal_is_unusual();
}
inline void CMsgItemAcknowledged::_internal_set_is_unusual(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  is_unusual_ = value;
}
inline void CMsgItemAcknowledged::set_is_unusual(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_is_unusual(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.is_unusual)
}

// optional float wear = 9;
inline bool CMsgItemAcknowledged::_internal_has_wear() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_wear() const {
  return _internal_has_wear();
}
inline void CMsgItemAcknowledged::clear_wear() {
  wear_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float CMsgItemAcknowledged::_internal_wear() const {
  return wear_;
}
inline float CMsgItemAcknowledged::wear() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.wear)
  return _internal_wear();
}
inline void CMsgItemAcknowledged::_internal_set_wear(float value) {
  _has_bits_[0] |= 0x00000100u;
  wear_ = value;
}
inline void CMsgItemAcknowledged::set_wear(float value) {
  _internal_set_wear(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.wear)
}

// -------------------------------------------------------------------

// CMsgSetPresetItemPosition

// optional uint32 class_id = 1;
inline bool CMsgSetPresetItemPosition::_internal_has_class_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSetPresetItemPosition::has_class_id() const {
  return _internal_has_class_id();
}
inline void CMsgSetPresetItemPosition::clear_class_id() {
  class_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSetPresetItemPosition::_internal_class_id() const {
  return class_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSetPresetItemPosition::class_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetPresetItemPosition.class_id)
  return _internal_class_id();
}
inline void CMsgSetPresetItemPosition::_internal_set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  class_id_ = value;
}
inline void CMsgSetPresetItemPosition::set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_class_id(value);
  // @@protoc_insertion_point(field_set:CMsgSetPresetItemPosition.class_id)
}

// optional uint32 preset_id = 2;
inline bool CMsgSetPresetItemPosition::_internal_has_preset_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSetPresetItemPosition::has_preset_id() const {
  return _internal_has_preset_id();
}
inline void CMsgSetPresetItemPosition::clear_preset_id() {
  preset_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSetPresetItemPosition::_internal_preset_id() const {
  return preset_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSetPresetItemPosition::preset_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetPresetItemPosition.preset_id)
  return _internal_preset_id();
}
inline void CMsgSetPresetItemPosition::_internal_set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  preset_id_ = value;
}
inline void CMsgSetPresetItemPosition::set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preset_id(value);
  // @@protoc_insertion_point(field_set:CMsgSetPresetItemPosition.preset_id)
}

// optional uint32 slot_id = 3;
inline bool CMsgSetPresetItemPosition::_internal_has_slot_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgSetPresetItemPosition::has_slot_id() const {
  return _internal_has_slot_id();
}
inline void CMsgSetPresetItemPosition::clear_slot_id() {
  slot_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSetPresetItemPosition::_internal_slot_id() const {
  return slot_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSetPresetItemPosition::slot_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetPresetItemPosition.slot_id)
  return _internal_slot_id();
}
inline void CMsgSetPresetItemPosition::_internal_set_slot_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  slot_id_ = value;
}
inline void CMsgSetPresetItemPosition::set_slot_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slot_id(value);
  // @@protoc_insertion_point(field_set:CMsgSetPresetItemPosition.slot_id)
}

// optional uint64 item_id = 4;
inline bool CMsgSetPresetItemPosition::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSetPresetItemPosition::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgSetPresetItemPosition::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSetPresetItemPosition::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSetPresetItemPosition::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetPresetItemPosition.item_id)
  return _internal_item_id();
}
inline void CMsgSetPresetItemPosition::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  item_id_ = value;
}
inline void CMsgSetPresetItemPosition::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgSetPresetItemPosition.item_id)
}

// -------------------------------------------------------------------

// CMsgSetItemPositions_ItemPosition

// optional uint64 item_id = 1;
inline bool CMsgSetItemPositions_ItemPosition::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSetItemPositions_ItemPosition::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgSetItemPositions_ItemPosition::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSetItemPositions_ItemPosition::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSetItemPositions_ItemPosition::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemPositions.ItemPosition.item_id)
  return _internal_item_id();
}
inline void CMsgSetItemPositions_ItemPosition::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
}
inline void CMsgSetItemPositions_ItemPosition::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgSetItemPositions.ItemPosition.item_id)
}

// optional uint32 position = 2;
inline bool CMsgSetItemPositions_ItemPosition::_internal_has_position() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSetItemPositions_ItemPosition::has_position() const {
  return _internal_has_position();
}
inline void CMsgSetItemPositions_ItemPosition::clear_position() {
  position_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSetItemPositions_ItemPosition::_internal_position() const {
  return position_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSetItemPositions_ItemPosition::position() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemPositions.ItemPosition.position)
  return _internal_position();
}
inline void CMsgSetItemPositions_ItemPosition::_internal_set_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  position_ = value;
}
inline void CMsgSetItemPositions_ItemPosition::set_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_position(value);
  // @@protoc_insertion_point(field_set:CMsgSetItemPositions.ItemPosition.position)
}

// -------------------------------------------------------------------

// CMsgSetItemPositions

// repeated .CMsgSetItemPositions.ItemPosition item_positions = 1;
inline int CMsgSetItemPositions::_internal_item_positions_size() const {
  return item_positions_.size();
}
inline int CMsgSetItemPositions::item_positions_size() const {
  return _internal_item_positions_size();
}
inline void CMsgSetItemPositions::clear_item_positions() {
  item_positions_.Clear();
}
inline ::CMsgSetItemPositions_ItemPosition* CMsgSetItemPositions::mutable_item_positions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSetItemPositions.item_positions)
  return item_positions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSetItemPositions_ItemPosition >*
CMsgSetItemPositions::mutable_item_positions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSetItemPositions.item_positions)
  return &item_positions_;
}
inline const ::CMsgSetItemPositions_ItemPosition& CMsgSetItemPositions::_internal_item_positions(int index) const {
  return item_positions_.Get(index);
}
inline const ::CMsgSetItemPositions_ItemPosition& CMsgSetItemPositions::item_positions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSetItemPositions.item_positions)
  return _internal_item_positions(index);
}
inline ::CMsgSetItemPositions_ItemPosition* CMsgSetItemPositions::_internal_add_item_positions() {
  return item_positions_.Add();
}
inline ::CMsgSetItemPositions_ItemPosition* CMsgSetItemPositions::add_item_positions() {
  // @@protoc_insertion_point(field_add:CMsgSetItemPositions.item_positions)
  return _internal_add_item_positions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSetItemPositions_ItemPosition >&
CMsgSetItemPositions::item_positions() const {
  // @@protoc_insertion_point(field_list:CMsgSetItemPositions.item_positions)
  return item_positions_;
}

// -------------------------------------------------------------------

// CSOEconItemPresetInstance

// optional uint32 class_id = 2 [(.key_field) = true];
inline bool CSOEconItemPresetInstance::_internal_has_class_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOEconItemPresetInstance::has_class_id() const {
  return _internal_has_class_id();
}
inline void CSOEconItemPresetInstance::clear_class_id() {
  class_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemPresetInstance::_internal_class_id() const {
  return class_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemPresetInstance::class_id() const {
  // @@protoc_insertion_point(field_get:CSOEconItemPresetInstance.class_id)
  return _internal_class_id();
}
inline void CSOEconItemPresetInstance::_internal_set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  class_id_ = value;
}
inline void CSOEconItemPresetInstance::set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_class_id(value);
  // @@protoc_insertion_point(field_set:CSOEconItemPresetInstance.class_id)
}

// optional uint32 preset_id = 3 [(.key_field) = true];
inline bool CSOEconItemPresetInstance::_internal_has_preset_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOEconItemPresetInstance::has_preset_id() const {
  return _internal_has_preset_id();
}
inline void CSOEconItemPresetInstance::clear_preset_id() {
  preset_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemPresetInstance::_internal_preset_id() const {
  return preset_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemPresetInstance::preset_id() const {
  // @@protoc_insertion_point(field_get:CSOEconItemPresetInstance.preset_id)
  return _internal_preset_id();
}
inline void CSOEconItemPresetInstance::_internal_set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  preset_id_ = value;
}
inline void CSOEconItemPresetInstance::set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preset_id(value);
  // @@protoc_insertion_point(field_set:CSOEconItemPresetInstance.preset_id)
}

// optional uint32 slot_id = 4 [(.key_field) = true];
inline bool CSOEconItemPresetInstance::_internal_has_slot_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOEconItemPresetInstance::has_slot_id() const {
  return _internal_has_slot_id();
}
inline void CSOEconItemPresetInstance::clear_slot_id() {
  slot_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemPresetInstance::_internal_slot_id() const {
  return slot_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOEconItemPresetInstance::slot_id() const {
  // @@protoc_insertion_point(field_get:CSOEconItemPresetInstance.slot_id)
  return _internal_slot_id();
}
inline void CSOEconItemPresetInstance::_internal_set_slot_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  slot_id_ = value;
}
inline void CSOEconItemPresetInstance::set_slot_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slot_id(value);
  // @@protoc_insertion_point(field_set:CSOEconItemPresetInstance.slot_id)
}

// optional uint64 item_id = 5;
inline bool CSOEconItemPresetInstance::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOEconItemPresetInstance::has_item_id() const {
  return _internal_has_item_id();
}
inline void CSOEconItemPresetInstance::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CSOEconItemPresetInstance::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CSOEconItemPresetInstance::item_id() const {
  // @@protoc_insertion_point(field_get:CSOEconItemPresetInstance.item_id)
  return _internal_item_id();
}
inline void CSOEconItemPresetInstance::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  item_id_ = value;
}
inline void CSOEconItemPresetInstance::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CSOEconItemPresetInstance.item_id)
}

// -------------------------------------------------------------------

// CMsgSelectPresetForClass

// optional uint32 class_id = 1;
inline bool CMsgSelectPresetForClass::_internal_has_class_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSelectPresetForClass::has_class_id() const {
  return _internal_has_class_id();
}
inline void CMsgSelectPresetForClass::clear_class_id() {
  class_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSelectPresetForClass::_internal_class_id() const {
  return class_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSelectPresetForClass::class_id() const {
  // @@protoc_insertion_point(field_get:CMsgSelectPresetForClass.class_id)
  return _internal_class_id();
}
inline void CMsgSelectPresetForClass::_internal_set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  class_id_ = value;
}
inline void CMsgSelectPresetForClass::set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_class_id(value);
  // @@protoc_insertion_point(field_set:CMsgSelectPresetForClass.class_id)
}

// optional uint32 preset_id = 2;
inline bool CMsgSelectPresetForClass::_internal_has_preset_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSelectPresetForClass::has_preset_id() const {
  return _internal_has_preset_id();
}
inline void CMsgSelectPresetForClass::clear_preset_id() {
  preset_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSelectPresetForClass::_internal_preset_id() const {
  return preset_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSelectPresetForClass::preset_id() const {
  // @@protoc_insertion_point(field_get:CMsgSelectPresetForClass.preset_id)
  return _internal_preset_id();
}
inline void CMsgSelectPresetForClass::_internal_set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  preset_id_ = value;
}
inline void CMsgSelectPresetForClass::set_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preset_id(value);
  // @@protoc_insertion_point(field_set:CMsgSelectPresetForClass.preset_id)
}

// -------------------------------------------------------------------

// CSOClassPresetClientData

// optional uint32 account_id = 1;
inline bool CSOClassPresetClientData::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOClassPresetClientData::has_account_id() const {
  return _internal_has_account_id();
}
inline void CSOClassPresetClientData::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOClassPresetClientData::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOClassPresetClientData::account_id() const {
  // @@protoc_insertion_point(field_get:CSOClassPresetClientData.account_id)
  return _internal_account_id();
}
inline void CSOClassPresetClientData::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
}
inline void CSOClassPresetClientData::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CSOClassPresetClientData.account_id)
}

// optional uint32 class_id = 2;
inline bool CSOClassPresetClientData::_internal_has_class_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOClassPresetClientData::has_class_id() const {
  return _internal_has_class_id();
}
inline void CSOClassPresetClientData::clear_class_id() {
  class_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOClassPresetClientData::_internal_class_id() const {
  return class_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOClassPresetClientData::class_id() const {
  // @@protoc_insertion_point(field_get:CSOClassPresetClientData.class_id)
  return _internal_class_id();
}
inline void CSOClassPresetClientData::_internal_set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  class_id_ = value;
}
inline void CSOClassPresetClientData::set_class_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_class_id(value);
  // @@protoc_insertion_point(field_set:CSOClassPresetClientData.class_id)
}

// optional uint32 active_preset_id = 3;
inline bool CSOClassPresetClientData::_internal_has_active_preset_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOClassPresetClientData::has_active_preset_id() const {
  return _internal_has_active_preset_id();
}
inline void CSOClassPresetClientData::clear_active_preset_id() {
  active_preset_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOClassPresetClientData::_internal_active_preset_id() const {
  return active_preset_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CSOClassPresetClientData::active_preset_id() const {
  // @@protoc_insertion_point(field_get:CSOClassPresetClientData.active_preset_id)
  return _internal_active_preset_id();
}
inline void CSOClassPresetClientData::_internal_set_active_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  active_preset_id_ = value;
}
inline void CSOClassPresetClientData::set_active_preset_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_active_preset_id(value);
  // @@protoc_insertion_point(field_set:CSOClassPresetClientData.active_preset_id)
}

// -------------------------------------------------------------------

// CMsgGCReportAbuse

// optional fixed64 target_steam_id = 1;
inline bool CMsgGCReportAbuse::_internal_has_target_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCReportAbuse::has_target_steam_id() const {
  return _internal_has_target_steam_id();
}
inline void CMsgGCReportAbuse::clear_target_steam_id() {
  target_steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCReportAbuse::_internal_target_steam_id() const {
  return target_steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCReportAbuse::target_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCReportAbuse.target_steam_id)
  return _internal_target_steam_id();
}
inline void CMsgGCReportAbuse::_internal_set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  target_steam_id_ = value;
}
inline void CMsgGCReportAbuse::set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_target_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCReportAbuse.target_steam_id)
}

// optional string description = 4;
inline bool CMsgGCReportAbuse::_internal_has_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCReportAbuse::has_description() const {
  return _internal_has_description();
}
inline void CMsgGCReportAbuse::clear_description() {
  description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCReportAbuse::description() const {
  // @@protoc_insertion_point(field_get:CMsgGCReportAbuse.description)
  return _internal_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCReportAbuse::set_description(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCReportAbuse.description)
}
inline std::string* CMsgGCReportAbuse::mutable_description() {
  // @@protoc_insertion_point(field_mutable:CMsgGCReportAbuse.description)
  return _internal_mutable_description();
}
inline const std::string& CMsgGCReportAbuse::_internal_description() const {
  return description_.Get();
}
inline void CMsgGCReportAbuse::_internal_set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgGCReportAbuse::_internal_mutable_description() {
  _has_bits_[0] |= 0x00000001u;
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgGCReportAbuse::release_description() {
  // @@protoc_insertion_point(field_release:CMsgGCReportAbuse.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgGCReportAbuse::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCReportAbuse.description)
}

// optional uint64 gid = 5;
inline bool CMsgGCReportAbuse::_internal_has_gid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCReportAbuse::has_gid() const {
  return _internal_has_gid();
}
inline void CMsgGCReportAbuse::clear_gid() {
  gid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCReportAbuse::_internal_gid() const {
  return gid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCReportAbuse::gid() const {
  // @@protoc_insertion_point(field_get:CMsgGCReportAbuse.gid)
  return _internal_gid();
}
inline void CMsgGCReportAbuse::_internal_set_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  gid_ = value;
}
inline void CMsgGCReportAbuse::set_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gid(value);
  // @@protoc_insertion_point(field_set:CMsgGCReportAbuse.gid)
}

// optional uint32 abuse_type = 2;
inline bool CMsgGCReportAbuse::_internal_has_abuse_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCReportAbuse::has_abuse_type() const {
  return _internal_has_abuse_type();
}
inline void CMsgGCReportAbuse::clear_abuse_type() {
  abuse_type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCReportAbuse::_internal_abuse_type() const {
  return abuse_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCReportAbuse::abuse_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCReportAbuse.abuse_type)
  return _internal_abuse_type();
}
inline void CMsgGCReportAbuse::_internal_set_abuse_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  abuse_type_ = value;
}
inline void CMsgGCReportAbuse::set_abuse_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_abuse_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCReportAbuse.abuse_type)
}

// optional uint32 content_type = 3;
inline bool CMsgGCReportAbuse::_internal_has_content_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCReportAbuse::has_content_type() const {
  return _internal_has_content_type();
}
inline void CMsgGCReportAbuse::clear_content_type() {
  content_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCReportAbuse::_internal_content_type() const {
  return content_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCReportAbuse::content_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCReportAbuse.content_type)
  return _internal_content_type();
}
inline void CMsgGCReportAbuse::_internal_set_content_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  content_type_ = value;
}
inline void CMsgGCReportAbuse::set_content_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_content_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCReportAbuse.content_type)
}

// optional fixed32 target_game_server_ip = 6;
inline bool CMsgGCReportAbuse::_internal_has_target_game_server_ip() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgGCReportAbuse::has_target_game_server_ip() const {
  return _internal_has_target_game_server_ip();
}
inline void CMsgGCReportAbuse::clear_target_game_server_ip() {
  target_game_server_ip_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCReportAbuse::_internal_target_game_server_ip() const {
  return target_game_server_ip_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCReportAbuse::target_game_server_ip() const {
  // @@protoc_insertion_point(field_get:CMsgGCReportAbuse.target_game_server_ip)
  return _internal_target_game_server_ip();
}
inline void CMsgGCReportAbuse::_internal_set_target_game_server_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  target_game_server_ip_ = value;
}
inline void CMsgGCReportAbuse::set_target_game_server_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_game_server_ip(value);
  // @@protoc_insertion_point(field_set:CMsgGCReportAbuse.target_game_server_ip)
}

// optional uint32 target_game_server_port = 7;
inline bool CMsgGCReportAbuse::_internal_has_target_game_server_port() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgGCReportAbuse::has_target_game_server_port() const {
  return _internal_has_target_game_server_port();
}
inline void CMsgGCReportAbuse::clear_target_game_server_port() {
  target_game_server_port_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCReportAbuse::_internal_target_game_server_port() const {
  return target_game_server_port_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCReportAbuse::target_game_server_port() const {
  // @@protoc_insertion_point(field_get:CMsgGCReportAbuse.target_game_server_port)
  return _internal_target_game_server_port();
}
inline void CMsgGCReportAbuse::_internal_set_target_game_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  target_game_server_port_ = value;
}
inline void CMsgGCReportAbuse::set_target_game_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_game_server_port(value);
  // @@protoc_insertion_point(field_set:CMsgGCReportAbuse.target_game_server_port)
}

// -------------------------------------------------------------------

// CMsgGCReportAbuseResponse

// optional fixed64 target_steam_id = 1;
inline bool CMsgGCReportAbuseResponse::_internal_has_target_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCReportAbuseResponse::has_target_steam_id() const {
  return _internal_has_target_steam_id();
}
inline void CMsgGCReportAbuseResponse::clear_target_steam_id() {
  target_steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCReportAbuseResponse::_internal_target_steam_id() const {
  return target_steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCReportAbuseResponse::target_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCReportAbuseResponse.target_steam_id)
  return _internal_target_steam_id();
}
inline void CMsgGCReportAbuseResponse::_internal_set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  target_steam_id_ = value;
}
inline void CMsgGCReportAbuseResponse::set_target_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_target_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCReportAbuseResponse.target_steam_id)
}

// optional uint32 result = 2;
inline bool CMsgGCReportAbuseResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCReportAbuseResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgGCReportAbuseResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCReportAbuseResponse::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCReportAbuseResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCReportAbuseResponse.result)
  return _internal_result();
}
inline void CMsgGCReportAbuseResponse::_internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  result_ = value;
}
inline void CMsgGCReportAbuseResponse::set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgGCReportAbuseResponse.result)
}

// optional string error_message = 3;
inline bool CMsgGCReportAbuseResponse::_internal_has_error_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCReportAbuseResponse::has_error_message() const {
  return _internal_has_error_message();
}
inline void CMsgGCReportAbuseResponse::clear_error_message() {
  error_message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCReportAbuseResponse::error_message() const {
  // @@protoc_insertion_point(field_get:CMsgGCReportAbuseResponse.error_message)
  return _internal_error_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCReportAbuseResponse::set_error_message(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 error_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCReportAbuseResponse.error_message)
}
inline std::string* CMsgGCReportAbuseResponse::mutable_error_message() {
  // @@protoc_insertion_point(field_mutable:CMsgGCReportAbuseResponse.error_message)
  return _internal_mutable_error_message();
}
inline const std::string& CMsgGCReportAbuseResponse::_internal_error_message() const {
  return error_message_.Get();
}
inline void CMsgGCReportAbuseResponse::_internal_set_error_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  error_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgGCReportAbuseResponse::_internal_mutable_error_message() {
  _has_bits_[0] |= 0x00000001u;
  return error_message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgGCReportAbuseResponse::release_error_message() {
  // @@protoc_insertion_point(field_release:CMsgGCReportAbuseResponse.error_message)
  if (!_internal_has_error_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return error_message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgGCReportAbuseResponse::set_allocated_error_message(std::string* error_message) {
  if (error_message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  error_message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error_message,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCReportAbuseResponse.error_message)
}

// -------------------------------------------------------------------

// CMsgGCNameItemNotification

// optional fixed64 player_steamid = 1;
inline bool CMsgGCNameItemNotification::_internal_has_player_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCNameItemNotification::has_player_steamid() const {
  return _internal_has_player_steamid();
}
inline void CMsgGCNameItemNotification::clear_player_steamid() {
  player_steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCNameItemNotification::_internal_player_steamid() const {
  return player_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCNameItemNotification::player_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCNameItemNotification.player_steamid)
  return _internal_player_steamid();
}
inline void CMsgGCNameItemNotification::_internal_set_player_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  player_steamid_ = value;
}
inline void CMsgGCNameItemNotification::set_player_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_player_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgGCNameItemNotification.player_steamid)
}

// optional uint32 item_def_index = 2;
inline bool CMsgGCNameItemNotification::_internal_has_item_def_index() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCNameItemNotification::has_item_def_index() const {
  return _internal_has_item_def_index();
}
inline void CMsgGCNameItemNotification::clear_item_def_index() {
  item_def_index_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCNameItemNotification::_internal_item_def_index() const {
  return item_def_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCNameItemNotification::item_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCNameItemNotification.item_def_index)
  return _internal_item_def_index();
}
inline void CMsgGCNameItemNotification::_internal_set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  item_def_index_ = value;
}
inline void CMsgGCNameItemNotification::set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgGCNameItemNotification.item_def_index)
}

// optional string item_name_custom = 3;
inline bool CMsgGCNameItemNotification::_internal_has_item_name_custom() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCNameItemNotification::has_item_name_custom() const {
  return _internal_has_item_name_custom();
}
inline void CMsgGCNameItemNotification::clear_item_name_custom() {
  item_name_custom_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCNameItemNotification::item_name_custom() const {
  // @@protoc_insertion_point(field_get:CMsgGCNameItemNotification.item_name_custom)
  return _internal_item_name_custom();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCNameItemNotification::set_item_name_custom(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 item_name_custom_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCNameItemNotification.item_name_custom)
}
inline std::string* CMsgGCNameItemNotification::mutable_item_name_custom() {
  // @@protoc_insertion_point(field_mutable:CMsgGCNameItemNotification.item_name_custom)
  return _internal_mutable_item_name_custom();
}
inline const std::string& CMsgGCNameItemNotification::_internal_item_name_custom() const {
  return item_name_custom_.Get();
}
inline void CMsgGCNameItemNotification::_internal_set_item_name_custom(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  item_name_custom_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgGCNameItemNotification::_internal_mutable_item_name_custom() {
  _has_bits_[0] |= 0x00000001u;
  return item_name_custom_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgGCNameItemNotification::release_item_name_custom() {
  // @@protoc_insertion_point(field_release:CMsgGCNameItemNotification.item_name_custom)
  if (!_internal_has_item_name_custom()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return item_name_custom_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgGCNameItemNotification::set_allocated_item_name_custom(std::string* item_name_custom) {
  if (item_name_custom != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  item_name_custom_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), item_name_custom,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCNameItemNotification.item_name_custom)
}

// -------------------------------------------------------------------

// CMsgGCClientDisplayNotification

// optional string notification_title_localization_key = 1;
inline bool CMsgGCClientDisplayNotification::_internal_has_notification_title_localization_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCClientDisplayNotification::has_notification_title_localization_key() const {
  return _internal_has_notification_title_localization_key();
}
inline void CMsgGCClientDisplayNotification::clear_notification_title_localization_key() {
  notification_title_localization_key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCClientDisplayNotification::notification_title_localization_key() const {
  // @@protoc_insertion_point(field_get:CMsgGCClientDisplayNotification.notification_title_localization_key)
  return _internal_notification_title_localization_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCClientDisplayNotification::set_notification_title_localization_key(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 notification_title_localization_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCClientDisplayNotification.notification_title_localization_key)
}
inline std::string* CMsgGCClientDisplayNotification::mutable_notification_title_localization_key() {
  // @@protoc_insertion_point(field_mutable:CMsgGCClientDisplayNotification.notification_title_localization_key)
  return _internal_mutable_notification_title_localization_key();
}
inline const std::string& CMsgGCClientDisplayNotification::_internal_notification_title_localization_key() const {
  return notification_title_localization_key_.Get();
}
inline void CMsgGCClientDisplayNotification::_internal_set_notification_title_localization_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  notification_title_localization_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgGCClientDisplayNotification::_internal_mutable_notification_title_localization_key() {
  _has_bits_[0] |= 0x00000001u;
  return notification_title_localization_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgGCClientDisplayNotification::release_notification_title_localization_key() {
  // @@protoc_insertion_point(field_release:CMsgGCClientDisplayNotification.notification_title_localization_key)
  if (!_internal_has_notification_title_localization_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return notification_title_localization_key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgGCClientDisplayNotification::set_allocated_notification_title_localization_key(std::string* notification_title_localization_key) {
  if (notification_title_localization_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  notification_title_localization_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), notification_title_localization_key,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCClientDisplayNotification.notification_title_localization_key)
}

// optional string notification_body_localization_key = 2;
inline bool CMsgGCClientDisplayNotification::_internal_has_notification_body_localization_key() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCClientDisplayNotification::has_notification_body_localization_key() const {
  return _internal_has_notification_body_localization_key();
}
inline void CMsgGCClientDisplayNotification::clear_notification_body_localization_key() {
  notification_body_localization_key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgGCClientDisplayNotification::notification_body_localization_key() const {
  // @@protoc_insertion_point(field_get:CMsgGCClientDisplayNotification.notification_body_localization_key)
  return _internal_notification_body_localization_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCClientDisplayNotification::set_notification_body_localization_key(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 notification_body_localization_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCClientDisplayNotification.notification_body_localization_key)
}
inline std::string* CMsgGCClientDisplayNotification::mutable_notification_body_localization_key() {
  // @@protoc_insertion_point(field_mutable:CMsgGCClientDisplayNotification.notification_body_localization_key)
  return _internal_mutable_notification_body_localization_key();
}
inline const std::string& CMsgGCClientDisplayNotification::_internal_notification_body_localization_key() const {
  return notification_body_localization_key_.Get();
}
inline void CMsgGCClientDisplayNotification::_internal_set_notification_body_localization_key(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  notification_body_localization_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgGCClientDisplayNotification::_internal_mutable_notification_body_localization_key() {
  _has_bits_[0] |= 0x00000002u;
  return notification_body_localization_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgGCClientDisplayNotification::release_notification_body_localization_key() {
  // @@protoc_insertion_point(field_release:CMsgGCClientDisplayNotification.notification_body_localization_key)
  if (!_internal_has_notification_body_localization_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return notification_body_localization_key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgGCClientDisplayNotification::set_allocated_notification_body_localization_key(std::string* notification_body_localization_key) {
  if (notification_body_localization_key != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  notification_body_localization_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), notification_body_localization_key,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCClientDisplayNotification.notification_body_localization_key)
}

// repeated string body_substring_keys = 3;
inline int CMsgGCClientDisplayNotification::_internal_body_substring_keys_size() const {
  return body_substring_keys_.size();
}
inline int CMsgGCClientDisplayNotification::body_substring_keys_size() const {
  return _internal_body_substring_keys_size();
}
inline void CMsgGCClientDisplayNotification::clear_body_substring_keys() {
  body_substring_keys_.Clear();
}
inline std::string* CMsgGCClientDisplayNotification::add_body_substring_keys() {
  // @@protoc_insertion_point(field_add_mutable:CMsgGCClientDisplayNotification.body_substring_keys)
  return _internal_add_body_substring_keys();
}
inline const std::string& CMsgGCClientDisplayNotification::_internal_body_substring_keys(int index) const {
  return body_substring_keys_.Get(index);
}
inline const std::string& CMsgGCClientDisplayNotification::body_substring_keys(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCClientDisplayNotification.body_substring_keys)
  return _internal_body_substring_keys(index);
}
inline std::string* CMsgGCClientDisplayNotification::mutable_body_substring_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCClientDisplayNotification.body_substring_keys)
  return body_substring_keys_.Mutable(index);
}
inline void CMsgGCClientDisplayNotification::set_body_substring_keys(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgGCClientDisplayNotification.body_substring_keys)
  body_substring_keys_.Mutable(index)->assign(value);
}
inline void CMsgGCClientDisplayNotification::set_body_substring_keys(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CMsgGCClientDisplayNotification.body_substring_keys)
  body_substring_keys_.Mutable(index)->assign(std::move(value));
}
inline void CMsgGCClientDisplayNotification::set_body_substring_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  body_substring_keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCClientDisplayNotification.body_substring_keys)
}
inline void CMsgGCClientDisplayNotification::set_body_substring_keys(int index, const char* value, size_t size) {
  body_substring_keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCClientDisplayNotification.body_substring_keys)
}
inline std::string* CMsgGCClientDisplayNotification::_internal_add_body_substring_keys() {
  return body_substring_keys_.Add();
}
inline void CMsgGCClientDisplayNotification::add_body_substring_keys(const std::string& value) {
  body_substring_keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgGCClientDisplayNotification.body_substring_keys)
}
inline void CMsgGCClientDisplayNotification::add_body_substring_keys(std::string&& value) {
  body_substring_keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgGCClientDisplayNotification.body_substring_keys)
}
inline void CMsgGCClientDisplayNotification::add_body_substring_keys(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  body_substring_keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgGCClientDisplayNotification.body_substring_keys)
}
inline void CMsgGCClientDisplayNotification::add_body_substring_keys(const char* value, size_t size) {
  body_substring_keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgGCClientDisplayNotification.body_substring_keys)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgGCClientDisplayNotification::body_substring_keys() const {
  // @@protoc_insertion_point(field_list:CMsgGCClientDisplayNotification.body_substring_keys)
  return body_substring_keys_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgGCClientDisplayNotification::mutable_body_substring_keys() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCClientDisplayNotification.body_substring_keys)
  return &body_substring_keys_;
}

// repeated string body_substring_values = 4;
inline int CMsgGCClientDisplayNotification::_internal_body_substring_values_size() const {
  return body_substring_values_.size();
}
inline int CMsgGCClientDisplayNotification::body_substring_values_size() const {
  return _internal_body_substring_values_size();
}
inline void CMsgGCClientDisplayNotification::clear_body_substring_values() {
  body_substring_values_.Clear();
}
inline std::string* CMsgGCClientDisplayNotification::add_body_substring_values() {
  // @@protoc_insertion_point(field_add_mutable:CMsgGCClientDisplayNotification.body_substring_values)
  return _internal_add_body_substring_values();
}
inline const std::string& CMsgGCClientDisplayNotification::_internal_body_substring_values(int index) const {
  return body_substring_values_.Get(index);
}
inline const std::string& CMsgGCClientDisplayNotification::body_substring_values(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCClientDisplayNotification.body_substring_values)
  return _internal_body_substring_values(index);
}
inline std::string* CMsgGCClientDisplayNotification::mutable_body_substring_values(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCClientDisplayNotification.body_substring_values)
  return body_substring_values_.Mutable(index);
}
inline void CMsgGCClientDisplayNotification::set_body_substring_values(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgGCClientDisplayNotification.body_substring_values)
  body_substring_values_.Mutable(index)->assign(value);
}
inline void CMsgGCClientDisplayNotification::set_body_substring_values(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CMsgGCClientDisplayNotification.body_substring_values)
  body_substring_values_.Mutable(index)->assign(std::move(value));
}
inline void CMsgGCClientDisplayNotification::set_body_substring_values(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  body_substring_values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCClientDisplayNotification.body_substring_values)
}
inline void CMsgGCClientDisplayNotification::set_body_substring_values(int index, const char* value, size_t size) {
  body_substring_values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCClientDisplayNotification.body_substring_values)
}
inline std::string* CMsgGCClientDisplayNotification::_internal_add_body_substring_values() {
  return body_substring_values_.Add();
}
inline void CMsgGCClientDisplayNotification::add_body_substring_values(const std::string& value) {
  body_substring_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgGCClientDisplayNotification.body_substring_values)
}
inline void CMsgGCClientDisplayNotification::add_body_substring_values(std::string&& value) {
  body_substring_values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgGCClientDisplayNotification.body_substring_values)
}
inline void CMsgGCClientDisplayNotification::add_body_substring_values(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  body_substring_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgGCClientDisplayNotification.body_substring_values)
}
inline void CMsgGCClientDisplayNotification::add_body_substring_values(const char* value, size_t size) {
  body_substring_values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgGCClientDisplayNotification.body_substring_values)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgGCClientDisplayNotification::body_substring_values() const {
  // @@protoc_insertion_point(field_list:CMsgGCClientDisplayNotification.body_substring_values)
  return body_substring_values_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgGCClientDisplayNotification::mutable_body_substring_values() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCClientDisplayNotification.body_substring_values)
  return &body_substring_values_;
}

// -------------------------------------------------------------------

// CMsgGCShowItemsPickedUp

// optional fixed64 player_steamid = 1;
inline bool CMsgGCShowItemsPickedUp::_internal_has_player_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCShowItemsPickedUp::has_player_steamid() const {
  return _internal_has_player_steamid();
}
inline void CMsgGCShowItemsPickedUp::clear_player_steamid() {
  player_steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCShowItemsPickedUp::_internal_player_steamid() const {
  return player_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCShowItemsPickedUp::player_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCShowItemsPickedUp.player_steamid)
  return _internal_player_steamid();
}
inline void CMsgGCShowItemsPickedUp::_internal_set_player_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  player_steamid_ = value;
}
inline void CMsgGCShowItemsPickedUp::set_player_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_player_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgGCShowItemsPickedUp.player_steamid)
}

// -------------------------------------------------------------------

// CMsgUpdatePeriodicEvent

// optional uint32 account_id = 1;
inline bool CMsgUpdatePeriodicEvent::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgUpdatePeriodicEvent::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgUpdatePeriodicEvent::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUpdatePeriodicEvent::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUpdatePeriodicEvent::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgUpdatePeriodicEvent.account_id)
  return _internal_account_id();
}
inline void CMsgUpdatePeriodicEvent::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
}
inline void CMsgUpdatePeriodicEvent::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgUpdatePeriodicEvent.account_id)
}

// optional uint32 event_type = 2;
inline bool CMsgUpdatePeriodicEvent::_internal_has_event_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgUpdatePeriodicEvent::has_event_type() const {
  return _internal_has_event_type();
}
inline void CMsgUpdatePeriodicEvent::clear_event_type() {
  event_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUpdatePeriodicEvent::_internal_event_type() const {
  return event_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUpdatePeriodicEvent::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgUpdatePeriodicEvent.event_type)
  return _internal_event_type();
}
inline void CMsgUpdatePeriodicEvent::_internal_set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  event_type_ = value;
}
inline void CMsgUpdatePeriodicEvent::set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_type(value);
  // @@protoc_insertion_point(field_set:CMsgUpdatePeriodicEvent.event_type)
}

// optional uint32 amount = 3;
inline bool CMsgUpdatePeriodicEvent::_internal_has_amount() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgUpdatePeriodicEvent::has_amount() const {
  return _internal_has_amount();
}
inline void CMsgUpdatePeriodicEvent::clear_amount() {
  amount_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUpdatePeriodicEvent::_internal_amount() const {
  return amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgUpdatePeriodicEvent::amount() const {
  // @@protoc_insertion_point(field_get:CMsgUpdatePeriodicEvent.amount)
  return _internal_amount();
}
inline void CMsgUpdatePeriodicEvent::_internal_set_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  amount_ = value;
}
inline void CMsgUpdatePeriodicEvent::set_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:CMsgUpdatePeriodicEvent.amount)
}

// -------------------------------------------------------------------

// CMsgGCIncrementKillCountResponse

// optional uint32 killer_account_id = 1 [(.key_field) = true];
inline bool CMsgGCIncrementKillCountResponse::_internal_has_killer_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCIncrementKillCountResponse::has_killer_account_id() const {
  return _internal_has_killer_account_id();
}
inline void CMsgGCIncrementKillCountResponse::clear_killer_account_id() {
  killer_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCIncrementKillCountResponse::_internal_killer_account_id() const {
  return killer_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCIncrementKillCountResponse::killer_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCIncrementKillCountResponse.killer_account_id)
  return _internal_killer_account_id();
}
inline void CMsgGCIncrementKillCountResponse::_internal_set_killer_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  killer_account_id_ = value;
}
inline void CMsgGCIncrementKillCountResponse::set_killer_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_killer_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCIncrementKillCountResponse.killer_account_id)
}

// optional uint32 num_kills = 2;
inline bool CMsgGCIncrementKillCountResponse::_internal_has_num_kills() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCIncrementKillCountResponse::has_num_kills() const {
  return _internal_has_num_kills();
}
inline void CMsgGCIncrementKillCountResponse::clear_num_kills() {
  num_kills_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCIncrementKillCountResponse::_internal_num_kills() const {
  return num_kills_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCIncrementKillCountResponse::num_kills() const {
  // @@protoc_insertion_point(field_get:CMsgGCIncrementKillCountResponse.num_kills)
  return _internal_num_kills();
}
inline void CMsgGCIncrementKillCountResponse::_internal_set_num_kills(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_kills_ = value;
}
inline void CMsgGCIncrementKillCountResponse::set_num_kills(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_kills(value);
  // @@protoc_insertion_point(field_set:CMsgGCIncrementKillCountResponse.num_kills)
}

// optional uint32 item_def = 3;
inline bool CMsgGCIncrementKillCountResponse::_internal_has_item_def() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCIncrementKillCountResponse::has_item_def() const {
  return _internal_has_item_def();
}
inline void CMsgGCIncrementKillCountResponse::clear_item_def() {
  item_def_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCIncrementKillCountResponse::_internal_item_def() const {
  return item_def_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCIncrementKillCountResponse::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgGCIncrementKillCountResponse.item_def)
  return _internal_item_def();
}
inline void CMsgGCIncrementKillCountResponse::_internal_set_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  item_def_ = value;
}
inline void CMsgGCIncrementKillCountResponse::set_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_def(value);
  // @@protoc_insertion_point(field_set:CMsgGCIncrementKillCountResponse.item_def)
}

// optional uint32 level_type = 4;
inline bool CMsgGCIncrementKillCountResponse::_internal_has_level_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCIncrementKillCountResponse::has_level_type() const {
  return _internal_has_level_type();
}
inline void CMsgGCIncrementKillCountResponse::clear_level_type() {
  level_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCIncrementKillCountResponse::_internal_level_type() const {
  return level_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCIncrementKillCountResponse::level_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCIncrementKillCountResponse.level_type)
  return _internal_level_type();
}
inline void CMsgGCIncrementKillCountResponse::_internal_set_level_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  level_type_ = value;
}
inline void CMsgGCIncrementKillCountResponse::set_level_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCIncrementKillCountResponse.level_type)
}

// -------------------------------------------------------------------

// CMsgGCRemoveStrangePart

// optional uint64 item_id = 1;
inline bool CMsgGCRemoveStrangePart::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCRemoveStrangePart::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgGCRemoveStrangePart::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCRemoveStrangePart::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCRemoveStrangePart::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCRemoveStrangePart.item_id)
  return _internal_item_id();
}
inline void CMsgGCRemoveStrangePart::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
}
inline void CMsgGCRemoveStrangePart::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCRemoveStrangePart.item_id)
}

// optional uint32 strange_part_score_type = 2;
inline bool CMsgGCRemoveStrangePart::_internal_has_strange_part_score_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCRemoveStrangePart::has_strange_part_score_type() const {
  return _internal_has_strange_part_score_type();
}
inline void CMsgGCRemoveStrangePart::clear_strange_part_score_type() {
  strange_part_score_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCRemoveStrangePart::_internal_strange_part_score_type() const {
  return strange_part_score_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCRemoveStrangePart::strange_part_score_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCRemoveStrangePart.strange_part_score_type)
  return _internal_strange_part_score_type();
}
inline void CMsgGCRemoveStrangePart::_internal_set_strange_part_score_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  strange_part_score_type_ = value;
}
inline void CMsgGCRemoveStrangePart::set_strange_part_score_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_strange_part_score_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCRemoveStrangePart.strange_part_score_type)
}

// -------------------------------------------------------------------

// CMsgGCRemoveUpgradeCard

// optional uint64 item_id = 1;
inline bool CMsgGCRemoveUpgradeCard::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCRemoveUpgradeCard::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgGCRemoveUpgradeCard::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCRemoveUpgradeCard::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCRemoveUpgradeCard::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCRemoveUpgradeCard.item_id)
  return _internal_item_id();
}
inline void CMsgGCRemoveUpgradeCard::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
}
inline void CMsgGCRemoveUpgradeCard::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCRemoveUpgradeCard.item_id)
}

// optional uint32 attribute_index = 2;
inline bool CMsgGCRemoveUpgradeCard::_internal_has_attribute_index() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCRemoveUpgradeCard::has_attribute_index() const {
  return _internal_has_attribute_index();
}
inline void CMsgGCRemoveUpgradeCard::clear_attribute_index() {
  attribute_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCRemoveUpgradeCard::_internal_attribute_index() const {
  return attribute_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCRemoveUpgradeCard::attribute_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCRemoveUpgradeCard.attribute_index)
  return _internal_attribute_index();
}
inline void CMsgGCRemoveUpgradeCard::_internal_set_attribute_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  attribute_index_ = value;
}
inline void CMsgGCRemoveUpgradeCard::set_attribute_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attribute_index(value);
  // @@protoc_insertion_point(field_set:CMsgGCRemoveUpgradeCard.attribute_index)
}

// -------------------------------------------------------------------

// CMsgGCRemoveCustomizationAttributeSimple

// optional uint64 item_id = 1;
inline bool CMsgGCRemoveCustomizationAttributeSimple::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCRemoveCustomizationAttributeSimple::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgGCRemoveCustomizationAttributeSimple::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCRemoveCustomizationAttributeSimple::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCRemoveCustomizationAttributeSimple::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCRemoveCustomizationAttributeSimple.item_id)
  return _internal_item_id();
}
inline void CMsgGCRemoveCustomizationAttributeSimple::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
}
inline void CMsgGCRemoveCustomizationAttributeSimple::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCRemoveCustomizationAttributeSimple.item_id)
}

// -------------------------------------------------------------------

// CMsgGCResetStrangeScores

// optional uint64 item_id = 1;
inline bool CMsgGCResetStrangeScores::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCResetStrangeScores::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgGCResetStrangeScores::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCResetStrangeScores::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCResetStrangeScores::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCResetStrangeScores.item_id)
  return _internal_item_id();
}
inline void CMsgGCResetStrangeScores::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
}
inline void CMsgGCResetStrangeScores::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCResetStrangeScores.item_id)
}

// -------------------------------------------------------------------

// CMsgGCItemPreviewItemBoughtNotification

// optional uint32 item_def_index = 1;
inline bool CMsgGCItemPreviewItemBoughtNotification::_internal_has_item_def_index() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCItemPreviewItemBoughtNotification::has_item_def_index() const {
  return _internal_has_item_def_index();
}
inline void CMsgGCItemPreviewItemBoughtNotification::clear_item_def_index() {
  item_def_index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCItemPreviewItemBoughtNotification::_internal_item_def_index() const {
  return item_def_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCItemPreviewItemBoughtNotification::item_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemPreviewItemBoughtNotification.item_def_index)
  return _internal_item_def_index();
}
inline void CMsgGCItemPreviewItemBoughtNotification::_internal_set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_def_index_ = value;
}
inline void CMsgGCItemPreviewItemBoughtNotification::set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemPreviewItemBoughtNotification.item_def_index)
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseCancel

// optional uint64 txn_id = 1;
inline bool CMsgGCStorePurchaseCancel::_internal_has_txn_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseCancel::has_txn_id() const {
  return _internal_has_txn_id();
}
inline void CMsgGCStorePurchaseCancel::clear_txn_id() {
  txn_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCStorePurchaseCancel::_internal_txn_id() const {
  return txn_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCStorePurchaseCancel::txn_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseCancel.txn_id)
  return _internal_txn_id();
}
inline void CMsgGCStorePurchaseCancel::_internal_set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  txn_id_ = value;
}
inline void CMsgGCStorePurchaseCancel::set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_txn_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseCancel.txn_id)
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseCancelResponse

// optional uint32 result = 1;
inline bool CMsgGCStorePurchaseCancelResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseCancelResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgGCStorePurchaseCancelResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCStorePurchaseCancelResponse::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCStorePurchaseCancelResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseCancelResponse.result)
  return _internal_result();
}
inline void CMsgGCStorePurchaseCancelResponse::_internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgGCStorePurchaseCancelResponse::set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseCancelResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseFinalize

// optional uint64 txn_id = 1;
inline bool CMsgGCStorePurchaseFinalize::_internal_has_txn_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseFinalize::has_txn_id() const {
  return _internal_has_txn_id();
}
inline void CMsgGCStorePurchaseFinalize::clear_txn_id() {
  txn_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCStorePurchaseFinalize::_internal_txn_id() const {
  return txn_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCStorePurchaseFinalize::txn_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseFinalize.txn_id)
  return _internal_txn_id();
}
inline void CMsgGCStorePurchaseFinalize::_internal_set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  txn_id_ = value;
}
inline void CMsgGCStorePurchaseFinalize::set_txn_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_txn_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseFinalize.txn_id)
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseFinalizeResponse

// optional uint32 result = 1;
inline bool CMsgGCStorePurchaseFinalizeResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseFinalizeResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgGCStorePurchaseFinalizeResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCStorePurchaseFinalizeResponse::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCStorePurchaseFinalizeResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseFinalizeResponse.result)
  return _internal_result();
}
inline void CMsgGCStorePurchaseFinalizeResponse::_internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgGCStorePurchaseFinalizeResponse::set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseFinalizeResponse.result)
}

// repeated uint64 item_ids = 2;
inline int CMsgGCStorePurchaseFinalizeResponse::_internal_item_ids_size() const {
  return item_ids_.size();
}
inline int CMsgGCStorePurchaseFinalizeResponse::item_ids_size() const {
  return _internal_item_ids_size();
}
inline void CMsgGCStorePurchaseFinalizeResponse::clear_item_ids() {
  item_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCStorePurchaseFinalizeResponse::_internal_item_ids(int index) const {
  return item_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCStorePurchaseFinalizeResponse::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseFinalizeResponse.item_ids)
  return _internal_item_ids(index);
}
inline void CMsgGCStorePurchaseFinalizeResponse::set_item_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseFinalizeResponse.item_ids)
}
inline void CMsgGCStorePurchaseFinalizeResponse::_internal_add_item_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  item_ids_.Add(value);
}
inline void CMsgGCStorePurchaseFinalizeResponse::add_item_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_item_ids(value);
  // @@protoc_insertion_point(field_add:CMsgGCStorePurchaseFinalizeResponse.item_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgGCStorePurchaseFinalizeResponse::_internal_item_ids() const {
  return item_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgGCStorePurchaseFinalizeResponse::item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCStorePurchaseFinalizeResponse.item_ids)
  return _internal_item_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgGCStorePurchaseFinalizeResponse::_internal_mutable_item_ids() {
  return &item_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgGCStorePurchaseFinalizeResponse::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCStorePurchaseFinalizeResponse.item_ids)
  return _internal_mutable_item_ids();
}

// -------------------------------------------------------------------

// CMsgGCBannedWordListRequest

// optional uint32 ban_list_group_id = 1;
inline bool CMsgGCBannedWordListRequest::_internal_has_ban_list_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCBannedWordListRequest::has_ban_list_group_id() const {
  return _internal_has_ban_list_group_id();
}
inline void CMsgGCBannedWordListRequest::clear_ban_list_group_id() {
  ban_list_group_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCBannedWordListRequest::_internal_ban_list_group_id() const {
  return ban_list_group_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCBannedWordListRequest::ban_list_group_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCBannedWordListRequest.ban_list_group_id)
  return _internal_ban_list_group_id();
}
inline void CMsgGCBannedWordListRequest::_internal_set_ban_list_group_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ban_list_group_id_ = value;
}
inline void CMsgGCBannedWordListRequest::set_ban_list_group_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ban_list_group_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCBannedWordListRequest.ban_list_group_id)
}

// optional uint32 word_id = 2;
inline bool CMsgGCBannedWordListRequest::_internal_has_word_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCBannedWordListRequest::has_word_id() const {
  return _internal_has_word_id();
}
inline void CMsgGCBannedWordListRequest::clear_word_id() {
  word_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCBannedWordListRequest::_internal_word_id() const {
  return word_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCBannedWordListRequest::word_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCBannedWordListRequest.word_id)
  return _internal_word_id();
}
inline void CMsgGCBannedWordListRequest::_internal_set_word_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  word_id_ = value;
}
inline void CMsgGCBannedWordListRequest::set_word_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_word_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCBannedWordListRequest.word_id)
}

// -------------------------------------------------------------------

// CMsgGCGiftedItems

// optional uint64 gifter_steam_id = 1;
inline bool CMsgGCGiftedItems::_internal_has_gifter_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCGiftedItems::has_gifter_steam_id() const {
  return _internal_has_gifter_steam_id();
}
inline void CMsgGCGiftedItems::clear_gifter_steam_id() {
  gifter_steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCGiftedItems::_internal_gifter_steam_id() const {
  return gifter_steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCGiftedItems::gifter_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCGiftedItems.gifter_steam_id)
  return _internal_gifter_steam_id();
}
inline void CMsgGCGiftedItems::_internal_set_gifter_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  gifter_steam_id_ = value;
}
inline void CMsgGCGiftedItems::set_gifter_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gifter_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCGiftedItems.gifter_steam_id)
}

// optional bool was_random_person = 2;
inline bool CMsgGCGiftedItems::_internal_has_was_random_person() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCGiftedItems::has_was_random_person() const {
  return _internal_has_was_random_person();
}
inline void CMsgGCGiftedItems::clear_was_random_person() {
  was_random_person_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCGiftedItems::_internal_was_random_person() const {
  return was_random_person_;
}
inline bool CMsgGCGiftedItems::was_random_person() const {
  // @@protoc_insertion_point(field_get:CMsgGCGiftedItems.was_random_person)
  return _internal_was_random_person();
}
inline void CMsgGCGiftedItems::_internal_set_was_random_person(bool value) {
  _has_bits_[0] |= 0x00000002u;
  was_random_person_ = value;
}
inline void CMsgGCGiftedItems::set_was_random_person(bool value) {
  _internal_set_was_random_person(value);
  // @@protoc_insertion_point(field_set:CMsgGCGiftedItems.was_random_person)
}

// repeated uint32 recipient_account_ids = 3;
inline int CMsgGCGiftedItems::_internal_recipient_account_ids_size() const {
  return recipient_account_ids_.size();
}
inline int CMsgGCGiftedItems::recipient_account_ids_size() const {
  return _internal_recipient_account_ids_size();
}
inline void CMsgGCGiftedItems::clear_recipient_account_ids() {
  recipient_account_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCGiftedItems::_internal_recipient_account_ids(int index) const {
  return recipient_account_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCGiftedItems::recipient_account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCGiftedItems.recipient_account_ids)
  return _internal_recipient_account_ids(index);
}
inline void CMsgGCGiftedItems::set_recipient_account_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  recipient_account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCGiftedItems.recipient_account_ids)
}
inline void CMsgGCGiftedItems::_internal_add_recipient_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  recipient_account_ids_.Add(value);
}
inline void CMsgGCGiftedItems::add_recipient_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_recipient_account_ids(value);
  // @@protoc_insertion_point(field_add:CMsgGCGiftedItems.recipient_account_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGCGiftedItems::_internal_recipient_account_ids() const {
  return recipient_account_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGCGiftedItems::recipient_account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCGiftedItems.recipient_account_ids)
  return _internal_recipient_account_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGCGiftedItems::_internal_mutable_recipient_account_ids() {
  return &recipient_account_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGCGiftedItems::mutable_recipient_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCGiftedItems.recipient_account_ids)
  return _internal_mutable_recipient_account_ids();
}

// -------------------------------------------------------------------

// CMsgGCCollectItem

// optional uint64 collection_item_id = 1;
inline bool CMsgGCCollectItem::_internal_has_collection_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCCollectItem::has_collection_item_id() const {
  return _internal_has_collection_item_id();
}
inline void CMsgGCCollectItem::clear_collection_item_id() {
  collection_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCCollectItem::_internal_collection_item_id() const {
  return collection_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCCollectItem::collection_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCCollectItem.collection_item_id)
  return _internal_collection_item_id();
}
inline void CMsgGCCollectItem::_internal_set_collection_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  collection_item_id_ = value;
}
inline void CMsgGCCollectItem::set_collection_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_collection_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCCollectItem.collection_item_id)
}

// optional uint64 subject_item_id = 2;
inline bool CMsgGCCollectItem::_internal_has_subject_item_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCCollectItem::has_subject_item_id() const {
  return _internal_has_subject_item_id();
}
inline void CMsgGCCollectItem::clear_subject_item_id() {
  subject_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCCollectItem::_internal_subject_item_id() const {
  return subject_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCCollectItem::subject_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCCollectItem.subject_item_id)
  return _internal_subject_item_id();
}
inline void CMsgGCCollectItem::_internal_set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  subject_item_id_ = value;
}
inline void CMsgGCCollectItem::set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_subject_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCCollectItem.subject_item_id)
}

// -------------------------------------------------------------------

// CMsgGCClientMarketDataRequest

// optional uint32 user_currency = 1;
inline bool CMsgGCClientMarketDataRequest::_internal_has_user_currency() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCClientMarketDataRequest::has_user_currency() const {
  return _internal_has_user_currency();
}
inline void CMsgGCClientMarketDataRequest::clear_user_currency() {
  user_currency_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClientMarketDataRequest::_internal_user_currency() const {
  return user_currency_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClientMarketDataRequest::user_currency() const {
  // @@protoc_insertion_point(field_get:CMsgGCClientMarketDataRequest.user_currency)
  return _internal_user_currency();
}
inline void CMsgGCClientMarketDataRequest::_internal_set_user_currency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  user_currency_ = value;
}
inline void CMsgGCClientMarketDataRequest::set_user_currency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_currency(value);
  // @@protoc_insertion_point(field_set:CMsgGCClientMarketDataRequest.user_currency)
}

// -------------------------------------------------------------------

// CMsgGCClientMarketDataEntry

// optional uint32 item_def_index = 1;
inline bool CMsgGCClientMarketDataEntry::_internal_has_item_def_index() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCClientMarketDataEntry::has_item_def_index() const {
  return _internal_has_item_def_index();
}
inline void CMsgGCClientMarketDataEntry::clear_item_def_index() {
  item_def_index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClientMarketDataEntry::_internal_item_def_index() const {
  return item_def_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClientMarketDataEntry::item_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCClientMarketDataEntry.item_def_index)
  return _internal_item_def_index();
}
inline void CMsgGCClientMarketDataEntry::_internal_set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_def_index_ = value;
}
inline void CMsgGCClientMarketDataEntry::set_item_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgGCClientMarketDataEntry.item_def_index)
}

// optional uint32 item_quality = 2;
inline bool CMsgGCClientMarketDataEntry::_internal_has_item_quality() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCClientMarketDataEntry::has_item_quality() const {
  return _internal_has_item_quality();
}
inline void CMsgGCClientMarketDataEntry::clear_item_quality() {
  item_quality_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClientMarketDataEntry::_internal_item_quality() const {
  return item_quality_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClientMarketDataEntry::item_quality() const {
  // @@protoc_insertion_point(field_get:CMsgGCClientMarketDataEntry.item_quality)
  return _internal_item_quality();
}
inline void CMsgGCClientMarketDataEntry::_internal_set_item_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  item_quality_ = value;
}
inline void CMsgGCClientMarketDataEntry::set_item_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_quality(value);
  // @@protoc_insertion_point(field_set:CMsgGCClientMarketDataEntry.item_quality)
}

// optional uint32 item_sell_listings = 3;
inline bool CMsgGCClientMarketDataEntry::_internal_has_item_sell_listings() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCClientMarketDataEntry::has_item_sell_listings() const {
  return _internal_has_item_sell_listings();
}
inline void CMsgGCClientMarketDataEntry::clear_item_sell_listings() {
  item_sell_listings_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClientMarketDataEntry::_internal_item_sell_listings() const {
  return item_sell_listings_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClientMarketDataEntry::item_sell_listings() const {
  // @@protoc_insertion_point(field_get:CMsgGCClientMarketDataEntry.item_sell_listings)
  return _internal_item_sell_listings();
}
inline void CMsgGCClientMarketDataEntry::_internal_set_item_sell_listings(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  item_sell_listings_ = value;
}
inline void CMsgGCClientMarketDataEntry::set_item_sell_listings(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_sell_listings(value);
  // @@protoc_insertion_point(field_set:CMsgGCClientMarketDataEntry.item_sell_listings)
}

// optional uint32 price_in_local_currency = 4;
inline bool CMsgGCClientMarketDataEntry::_internal_has_price_in_local_currency() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCClientMarketDataEntry::has_price_in_local_currency() const {
  return _internal_has_price_in_local_currency();
}
inline void CMsgGCClientMarketDataEntry::clear_price_in_local_currency() {
  price_in_local_currency_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClientMarketDataEntry::_internal_price_in_local_currency() const {
  return price_in_local_currency_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClientMarketDataEntry::price_in_local_currency() const {
  // @@protoc_insertion_point(field_get:CMsgGCClientMarketDataEntry.price_in_local_currency)
  return _internal_price_in_local_currency();
}
inline void CMsgGCClientMarketDataEntry::_internal_set_price_in_local_currency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  price_in_local_currency_ = value;
}
inline void CMsgGCClientMarketDataEntry::set_price_in_local_currency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_price_in_local_currency(value);
  // @@protoc_insertion_point(field_set:CMsgGCClientMarketDataEntry.price_in_local_currency)
}

// -------------------------------------------------------------------

// CMsgGCClientMarketData

// repeated .CMsgGCClientMarketDataEntry entries = 1;
inline int CMsgGCClientMarketData::_internal_entries_size() const {
  return entries_.size();
}
inline int CMsgGCClientMarketData::entries_size() const {
  return _internal_entries_size();
}
inline void CMsgGCClientMarketData::clear_entries() {
  entries_.Clear();
}
inline ::CMsgGCClientMarketDataEntry* CMsgGCClientMarketData::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCClientMarketData.entries)
  return entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCClientMarketDataEntry >*
CMsgGCClientMarketData::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCClientMarketData.entries)
  return &entries_;
}
inline const ::CMsgGCClientMarketDataEntry& CMsgGCClientMarketData::_internal_entries(int index) const {
  return entries_.Get(index);
}
inline const ::CMsgGCClientMarketDataEntry& CMsgGCClientMarketData::entries(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCClientMarketData.entries)
  return _internal_entries(index);
}
inline ::CMsgGCClientMarketDataEntry* CMsgGCClientMarketData::_internal_add_entries() {
  return entries_.Add();
}
inline ::CMsgGCClientMarketDataEntry* CMsgGCClientMarketData::add_entries() {
  // @@protoc_insertion_point(field_add:CMsgGCClientMarketData.entries)
  return _internal_add_entries();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCClientMarketDataEntry >&
CMsgGCClientMarketData::entries() const {
  // @@protoc_insertion_point(field_list:CMsgGCClientMarketData.entries)
  return entries_;
}

// -------------------------------------------------------------------

// CMsgApplyToolToItem

// optional uint64 tool_item_id = 1;
inline bool CMsgApplyToolToItem::_internal_has_tool_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgApplyToolToItem::has_tool_item_id() const {
  return _internal_has_tool_item_id();
}
inline void CMsgApplyToolToItem::clear_tool_item_id() {
  tool_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyToolToItem::_internal_tool_item_id() const {
  return tool_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyToolToItem::tool_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyToolToItem.tool_item_id)
  return _internal_tool_item_id();
}
inline void CMsgApplyToolToItem::_internal_set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  tool_item_id_ = value;
}
inline void CMsgApplyToolToItem::set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tool_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyToolToItem.tool_item_id)
}

// optional uint64 subject_item_id = 2;
inline bool CMsgApplyToolToItem::_internal_has_subject_item_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgApplyToolToItem::has_subject_item_id() const {
  return _internal_has_subject_item_id();
}
inline void CMsgApplyToolToItem::clear_subject_item_id() {
  subject_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyToolToItem::_internal_subject_item_id() const {
  return subject_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyToolToItem::subject_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyToolToItem.subject_item_id)
  return _internal_subject_item_id();
}
inline void CMsgApplyToolToItem::_internal_set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  subject_item_id_ = value;
}
inline void CMsgApplyToolToItem::set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_subject_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyToolToItem.subject_item_id)
}

// -------------------------------------------------------------------

// CMsgApplyToolToBaseItem

// optional uint64 tool_item_id = 1;
inline bool CMsgApplyToolToBaseItem::_internal_has_tool_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgApplyToolToBaseItem::has_tool_item_id() const {
  return _internal_has_tool_item_id();
}
inline void CMsgApplyToolToBaseItem::clear_tool_item_id() {
  tool_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyToolToBaseItem::_internal_tool_item_id() const {
  return tool_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgApplyToolToBaseItem::tool_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyToolToBaseItem.tool_item_id)
  return _internal_tool_item_id();
}
inline void CMsgApplyToolToBaseItem::_internal_set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  tool_item_id_ = value;
}
inline void CMsgApplyToolToBaseItem::set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tool_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyToolToBaseItem.tool_item_id)
}

// optional uint32 baseitem_def_index = 2;
inline bool CMsgApplyToolToBaseItem::_internal_has_baseitem_def_index() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgApplyToolToBaseItem::has_baseitem_def_index() const {
  return _internal_has_baseitem_def_index();
}
inline void CMsgApplyToolToBaseItem::clear_baseitem_def_index() {
  baseitem_def_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgApplyToolToBaseItem::_internal_baseitem_def_index() const {
  return baseitem_def_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgApplyToolToBaseItem::baseitem_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgApplyToolToBaseItem.baseitem_def_index)
  return _internal_baseitem_def_index();
}
inline void CMsgApplyToolToBaseItem::_internal_set_baseitem_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  baseitem_def_index_ = value;
}
inline void CMsgApplyToolToBaseItem::set_baseitem_def_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baseitem_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgApplyToolToBaseItem.baseitem_def_index)
}

// -------------------------------------------------------------------

// CMsgRecipeComponent

// optional uint64 subject_item_id = 1;
inline bool CMsgRecipeComponent::_internal_has_subject_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgRecipeComponent::has_subject_item_id() const {
  return _internal_has_subject_item_id();
}
inline void CMsgRecipeComponent::clear_subject_item_id() {
  subject_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgRecipeComponent::_internal_subject_item_id() const {
  return subject_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgRecipeComponent::subject_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgRecipeComponent.subject_item_id)
  return _internal_subject_item_id();
}
inline void CMsgRecipeComponent::_internal_set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  subject_item_id_ = value;
}
inline void CMsgRecipeComponent::set_subject_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_subject_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgRecipeComponent.subject_item_id)
}

// optional uint64 attribute_index = 2;
inline bool CMsgRecipeComponent::_internal_has_attribute_index() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgRecipeComponent::has_attribute_index() const {
  return _internal_has_attribute_index();
}
inline void CMsgRecipeComponent::clear_attribute_index() {
  attribute_index_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgRecipeComponent::_internal_attribute_index() const {
  return attribute_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgRecipeComponent::attribute_index() const {
  // @@protoc_insertion_point(field_get:CMsgRecipeComponent.attribute_index)
  return _internal_attribute_index();
}
inline void CMsgRecipeComponent::_internal_set_attribute_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  attribute_index_ = value;
}
inline void CMsgRecipeComponent::set_attribute_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_attribute_index(value);
  // @@protoc_insertion_point(field_set:CMsgRecipeComponent.attribute_index)
}

// -------------------------------------------------------------------

// CMsgFulfillDynamicRecipeComponent

// optional uint64 tool_item_id = 1;
inline bool CMsgFulfillDynamicRecipeComponent::_internal_has_tool_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgFulfillDynamicRecipeComponent::has_tool_item_id() const {
  return _internal_has_tool_item_id();
}
inline void CMsgFulfillDynamicRecipeComponent::clear_tool_item_id() {
  tool_item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgFulfillDynamicRecipeComponent::_internal_tool_item_id() const {
  return tool_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgFulfillDynamicRecipeComponent::tool_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgFulfillDynamicRecipeComponent.tool_item_id)
  return _internal_tool_item_id();
}
inline void CMsgFulfillDynamicRecipeComponent::_internal_set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  tool_item_id_ = value;
}
inline void CMsgFulfillDynamicRecipeComponent::set_tool_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tool_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgFulfillDynamicRecipeComponent.tool_item_id)
}

// repeated .CMsgRecipeComponent consumption_components = 2;
inline int CMsgFulfillDynamicRecipeComponent::_internal_consumption_components_size() const {
  return consumption_components_.size();
}
inline int CMsgFulfillDynamicRecipeComponent::consumption_components_size() const {
  return _internal_consumption_components_size();
}
inline void CMsgFulfillDynamicRecipeComponent::clear_consumption_components() {
  consumption_components_.Clear();
}
inline ::CMsgRecipeComponent* CMsgFulfillDynamicRecipeComponent::mutable_consumption_components(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgFulfillDynamicRecipeComponent.consumption_components)
  return consumption_components_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgRecipeComponent >*
CMsgFulfillDynamicRecipeComponent::mutable_consumption_components() {
  // @@protoc_insertion_point(field_mutable_list:CMsgFulfillDynamicRecipeComponent.consumption_components)
  return &consumption_components_;
}
inline const ::CMsgRecipeComponent& CMsgFulfillDynamicRecipeComponent::_internal_consumption_components(int index) const {
  return consumption_components_.Get(index);
}
inline const ::CMsgRecipeComponent& CMsgFulfillDynamicRecipeComponent::consumption_components(int index) const {
  // @@protoc_insertion_point(field_get:CMsgFulfillDynamicRecipeComponent.consumption_components)
  return _internal_consumption_components(index);
}
inline ::CMsgRecipeComponent* CMsgFulfillDynamicRecipeComponent::_internal_add_consumption_components() {
  return consumption_components_.Add();
}
inline ::CMsgRecipeComponent* CMsgFulfillDynamicRecipeComponent::add_consumption_components() {
  // @@protoc_insertion_point(field_add:CMsgFulfillDynamicRecipeComponent.consumption_components)
  return _internal_add_consumption_components();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgRecipeComponent >&
CMsgFulfillDynamicRecipeComponent::consumption_components() const {
  // @@protoc_insertion_point(field_list:CMsgFulfillDynamicRecipeComponent.consumption_components)
  return consumption_components_;
}

// -------------------------------------------------------------------

// CMsgSetItemEffectVerticalOffset

// optional uint64 item_id = 1;
inline bool CMsgSetItemEffectVerticalOffset::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSetItemEffectVerticalOffset::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgSetItemEffectVerticalOffset::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSetItemEffectVerticalOffset::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSetItemEffectVerticalOffset::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemEffectVerticalOffset.item_id)
  return _internal_item_id();
}
inline void CMsgSetItemEffectVerticalOffset::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
}
inline void CMsgSetItemEffectVerticalOffset::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgSetItemEffectVerticalOffset.item_id)
}

// optional float offset = 2;
inline bool CMsgSetItemEffectVerticalOffset::_internal_has_offset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSetItemEffectVerticalOffset::has_offset() const {
  return _internal_has_offset();
}
inline void CMsgSetItemEffectVerticalOffset::clear_offset() {
  offset_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgSetItemEffectVerticalOffset::_internal_offset() const {
  return offset_;
}
inline float CMsgSetItemEffectVerticalOffset::offset() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemEffectVerticalOffset.offset)
  return _internal_offset();
}
inline void CMsgSetItemEffectVerticalOffset::_internal_set_offset(float value) {
  _has_bits_[0] |= 0x00000002u;
  offset_ = value;
}
inline void CMsgSetItemEffectVerticalOffset::set_offset(float value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:CMsgSetItemEffectVerticalOffset.offset)
}

// -------------------------------------------------------------------

// CMsgSetHatEffectUseHeadOrigin

// optional uint64 item_id = 1;
inline bool CMsgSetHatEffectUseHeadOrigin::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSetHatEffectUseHeadOrigin::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgSetHatEffectUseHeadOrigin::clear_item_id() {
  item_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSetHatEffectUseHeadOrigin::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSetHatEffectUseHeadOrigin::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetHatEffectUseHeadOrigin.item_id)
  return _internal_item_id();
}
inline void CMsgSetHatEffectUseHeadOrigin::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
}
inline void CMsgSetHatEffectUseHeadOrigin::set_item_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgSetHatEffectUseHeadOrigin.item_id)
}

// optional bool use_head = 2;
inline bool CMsgSetHatEffectUseHeadOrigin::_internal_has_use_head() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSetHatEffectUseHeadOrigin::has_use_head() const {
  return _internal_has_use_head();
}
inline void CMsgSetHatEffectUseHeadOrigin::clear_use_head() {
  use_head_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgSetHatEffectUseHeadOrigin::_internal_use_head() const {
  return use_head_;
}
inline bool CMsgSetHatEffectUseHeadOrigin::use_head() const {
  // @@protoc_insertion_point(field_get:CMsgSetHatEffectUseHeadOrigin.use_head)
  return _internal_use_head();
}
inline void CMsgSetHatEffectUseHeadOrigin::_internal_set_use_head(bool value) {
  _has_bits_[0] |= 0x00000002u;
  use_head_ = value;
}
inline void CMsgSetHatEffectUseHeadOrigin::set_use_head(bool value) {
  _internal_set_use_head(value);
  // @@protoc_insertion_point(field_set:CMsgSetHatEffectUseHeadOrigin.use_head)
}

// -------------------------------------------------------------------

// CMsgDeliverGiftResponseGiver

// optional uint32 response_code = 1;
inline bool CMsgDeliverGiftResponseGiver::_internal_has_response_code() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDeliverGiftResponseGiver::has_response_code() const {
  return _internal_has_response_code();
}
inline void CMsgDeliverGiftResponseGiver::clear_response_code() {
  response_code_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDeliverGiftResponseGiver::_internal_response_code() const {
  return response_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDeliverGiftResponseGiver::response_code() const {
  // @@protoc_insertion_point(field_get:CMsgDeliverGiftResponseGiver.response_code)
  return _internal_response_code();
}
inline void CMsgDeliverGiftResponseGiver::_internal_set_response_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  response_code_ = value;
}
inline void CMsgDeliverGiftResponseGiver::set_response_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_response_code(value);
  // @@protoc_insertion_point(field_set:CMsgDeliverGiftResponseGiver.response_code)
}

// optional string receiver_account_name = 2;
inline bool CMsgDeliverGiftResponseGiver::_internal_has_receiver_account_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDeliverGiftResponseGiver::has_receiver_account_name() const {
  return _internal_has_receiver_account_name();
}
inline void CMsgDeliverGiftResponseGiver::clear_receiver_account_name() {
  receiver_account_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgDeliverGiftResponseGiver::receiver_account_name() const {
  // @@protoc_insertion_point(field_get:CMsgDeliverGiftResponseGiver.receiver_account_name)
  return _internal_receiver_account_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgDeliverGiftResponseGiver::set_receiver_account_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 receiver_account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgDeliverGiftResponseGiver.receiver_account_name)
}
inline std::string* CMsgDeliverGiftResponseGiver::mutable_receiver_account_name() {
  // @@protoc_insertion_point(field_mutable:CMsgDeliverGiftResponseGiver.receiver_account_name)
  return _internal_mutable_receiver_account_name();
}
inline const std::string& CMsgDeliverGiftResponseGiver::_internal_receiver_account_name() const {
  return receiver_account_name_.Get();
}
inline void CMsgDeliverGiftResponseGiver::_internal_set_receiver_account_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  receiver_account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgDeliverGiftResponseGiver::_internal_mutable_receiver_account_name() {
  _has_bits_[0] |= 0x00000001u;
  return receiver_account_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgDeliverGiftResponseGiver::release_receiver_account_name() {
  // @@protoc_insertion_point(field_release:CMsgDeliverGiftResponseGiver.receiver_account_name)
  if (!_internal_has_receiver_account_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return receiver_account_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CMsgDeliverGiftResponseGiver::set_allocated_receiver_account_name(std::string* receiver_account_name) {
  if (receiver_account_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  receiver_account_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), receiver_account_name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CMsgDeliverGiftResponseGiver.receiver_account_name)
}

// -------------------------------------------------------------------

// CSOEconGameAccountForGameServers

// optional bool disable_party_quest_progress = 6 [default = false];
inline bool CSOEconGameAccountForGameServers::_internal_has_disable_party_quest_progress() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOEconGameAccountForGameServers::has_disable_party_quest_progress() const {
  return _internal_has_disable_party_quest_progress();
}
inline void CSOEconGameAccountForGameServers::clear_disable_party_quest_progress() {
  disable_party_quest_progress_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CSOEconGameAccountForGameServers::_internal_disable_party_quest_progress() const {
  return disable_party_quest_progress_;
}
inline bool CSOEconGameAccountForGameServers::disable_party_quest_progress() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountForGameServers.disable_party_quest_progress)
  return _internal_disable_party_quest_progress();
}
inline void CSOEconGameAccountForGameServers::_internal_set_disable_party_quest_progress(bool value) {
  _has_bits_[0] |= 0x00000001u;
  disable_party_quest_progress_ = value;
}
inline void CSOEconGameAccountForGameServers::set_disable_party_quest_progress(bool value) {
  _internal_set_disable_party_quest_progress(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountForGameServers.disable_party_quest_progress)
}

// -------------------------------------------------------------------

// CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription

// optional uint32 gameitemid = 1;
inline bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_has_gameitemid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::has_gameitemid() const {
  return _internal_has_gameitemid();
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_gameitemid() {
  gameitemid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_gameitemid() const {
  return gameitemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::gameitemid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.gameitemid)
  return _internal_gameitemid();
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  gameitemid_ = value;
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gameitemid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.gameitemid)
}

// optional string item_description = 2;
inline bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_has_item_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::has_item_description() const {
  return _internal_has_item_description();
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_item_description() {
  item_description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::item_description() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
  return _internal_item_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 item_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::mutable_item_description() {
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
  return _internal_mutable_item_description();
}
inline const std::string& CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_item_description() const {
  return item_description_.Get();
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_set_item_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  item_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_mutable_item_description() {
  _has_bits_[0] |= 0x00000001u;
  return item_description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::release_item_description() {
  // @@protoc_insertion_point(field_release:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
  if (!_internal_has_item_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return item_description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_allocated_item_description(std::string* item_description) {
  if (item_description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  item_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), item_description,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}

// -------------------------------------------------------------------

// CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock

// optional string language = 1;
inline bool CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_has_language() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::has_language() const {
  return _internal_has_language();
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::clear_language() {
  language_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::language() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
  return _internal_language();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_language() {
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
  return _internal_mutable_language();
}
inline const std::string& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_language() const {
  return language_.Get();
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_set_language(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_mutable_language() {
  _has_bits_[0] |= 0x00000001u;
  return language_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::release_language() {
  // @@protoc_insertion_point(field_release:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
  if (!_internal_has_language()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return language_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_allocated_language(std::string* language) {
  if (language != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  language_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), language,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}

// repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
inline int CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_descriptions_size() const {
  return descriptions_.size();
}
inline int CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions_size() const {
  return _internal_descriptions_size();
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::clear_descriptions() {
  descriptions_.Clear();
}
inline ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_descriptions(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return descriptions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >*
CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_descriptions() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return &descriptions_;
}
inline const ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_descriptions(int index) const {
  return descriptions_.Get(index);
}
inline const ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return _internal_descriptions(index);
}
inline ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_add_descriptions() {
  return descriptions_.Add();
}
inline ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::add_descriptions() {
  // @@protoc_insertion_point(field_add:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return _internal_add_descriptions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >&
CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions() const {
  // @@protoc_insertion_point(field_list:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return descriptions_;
}

// -------------------------------------------------------------------

// CWorkshop_PopulateItemDescriptions_Request

// optional uint32 appid = 1;
inline bool CWorkshop_PopulateItemDescriptions_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_PopulateItemDescriptions_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CWorkshop_PopulateItemDescriptions_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_PopulateItemDescriptions_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_PopulateItemDescriptions_Request::appid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.appid)
  return _internal_appid();
}
inline void CWorkshop_PopulateItemDescriptions_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CWorkshop_PopulateItemDescriptions_Request::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.appid)
}

// repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
inline int CWorkshop_PopulateItemDescriptions_Request::_internal_languages_size() const {
  return languages_.size();
}
inline int CWorkshop_PopulateItemDescriptions_Request::languages_size() const {
  return _internal_languages_size();
}
inline void CWorkshop_PopulateItemDescriptions_Request::clear_languages() {
  languages_.Clear();
}
inline ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request::mutable_languages(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.languages)
  return languages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >*
CWorkshop_PopulateItemDescriptions_Request::mutable_languages() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_PopulateItemDescriptions_Request.languages)
  return &languages_;
}
inline const ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& CWorkshop_PopulateItemDescriptions_Request::_internal_languages(int index) const {
  return languages_.Get(index);
}
inline const ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& CWorkshop_PopulateItemDescriptions_Request::languages(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.languages)
  return _internal_languages(index);
}
inline ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request::_internal_add_languages() {
  return languages_.Add();
}
inline ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request::add_languages() {
  // @@protoc_insertion_point(field_add:CWorkshop_PopulateItemDescriptions_Request.languages)
  return _internal_add_languages();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >&
CWorkshop_PopulateItemDescriptions_Request::languages() const {
  // @@protoc_insertion_point(field_list:CWorkshop_PopulateItemDescriptions_Request.languages)
  return languages_;
}

// -------------------------------------------------------------------

// CWorkshop_GetContributors_Request

// optional uint32 appid = 1;
inline bool CWorkshop_GetContributors_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_GetContributors_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CWorkshop_GetContributors_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_GetContributors_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_GetContributors_Request::appid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetContributors_Request.appid)
  return _internal_appid();
}
inline void CWorkshop_GetContributors_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CWorkshop_GetContributors_Request::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetContributors_Request.appid)
}

// optional uint32 gameitemid = 2;
inline bool CWorkshop_GetContributors_Request::_internal_has_gameitemid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_GetContributors_Request::has_gameitemid() const {
  return _internal_has_gameitemid();
}
inline void CWorkshop_GetContributors_Request::clear_gameitemid() {
  gameitemid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_GetContributors_Request::_internal_gameitemid() const {
  return gameitemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_GetContributors_Request::gameitemid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetContributors_Request.gameitemid)
  return _internal_gameitemid();
}
inline void CWorkshop_GetContributors_Request::_internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  gameitemid_ = value;
}
inline void CWorkshop_GetContributors_Request::set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gameitemid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetContributors_Request.gameitemid)
}

// -------------------------------------------------------------------

// CWorkshop_GetContributors_Response

// repeated fixed64 contributors = 1;
inline int CWorkshop_GetContributors_Response::_internal_contributors_size() const {
  return contributors_.size();
}
inline int CWorkshop_GetContributors_Response::contributors_size() const {
  return _internal_contributors_size();
}
inline void CWorkshop_GetContributors_Response::clear_contributors() {
  contributors_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CWorkshop_GetContributors_Response::_internal_contributors(int index) const {
  return contributors_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CWorkshop_GetContributors_Response::contributors(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetContributors_Response.contributors)
  return _internal_contributors(index);
}
inline void CWorkshop_GetContributors_Response::set_contributors(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  contributors_.Set(index, value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetContributors_Response.contributors)
}
inline void CWorkshop_GetContributors_Response::_internal_add_contributors(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  contributors_.Add(value);
}
inline void CWorkshop_GetContributors_Response::add_contributors(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_contributors(value);
  // @@protoc_insertion_point(field_add:CWorkshop_GetContributors_Response.contributors)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CWorkshop_GetContributors_Response::_internal_contributors() const {
  return contributors_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CWorkshop_GetContributors_Response::contributors() const {
  // @@protoc_insertion_point(field_list:CWorkshop_GetContributors_Response.contributors)
  return _internal_contributors();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CWorkshop_GetContributors_Response::_internal_mutable_contributors() {
  return &contributors_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CWorkshop_GetContributors_Response::mutable_contributors() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_GetContributors_Response.contributors)
  return _internal_mutable_contributors();
}

// -------------------------------------------------------------------

// CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule

// optional uint64 workshop_file_id = 1;
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_has_workshop_file_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::has_workshop_file_id() const {
  return _internal_has_workshop_file_id();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_workshop_file_id() {
  workshop_file_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_workshop_file_id() const {
  return workshop_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::workshop_file_id() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.workshop_file_id)
  return _internal_workshop_file_id();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  workshop_file_id_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_workshop_file_id(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.workshop_file_id)
}

// optional float revenue_percentage = 2;
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_has_revenue_percentage() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::has_revenue_percentage() const {
  return _internal_has_revenue_percentage();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_revenue_percentage() {
  revenue_percentage_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_revenue_percentage() const {
  return revenue_percentage_;
}
inline float CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::revenue_percentage() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.revenue_percentage)
  return _internal_revenue_percentage();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_set_revenue_percentage(float value) {
  _has_bits_[0] |= 0x00000004u;
  revenue_percentage_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_revenue_percentage(float value) {
  _internal_set_revenue_percentage(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.revenue_percentage)
}

// optional string rule_description = 3;
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_has_rule_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::has_rule_description() const {
  return _internal_has_rule_description();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_rule_description() {
  rule_description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::rule_description() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
  return _internal_rule_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_rule_description(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::mutable_rule_description() {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
  return _internal_mutable_rule_description();
}
inline const std::string& CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_rule_description() const {
  return rule_description_.Get();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_set_rule_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_mutable_rule_description() {
  _has_bits_[0] |= 0x00000001u;
  return rule_description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::release_rule_description() {
  // @@protoc_insertion_point(field_release:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
  if (!_internal_has_rule_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return rule_description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_allocated_rule_description(std::string* rule_description) {
  if (rule_description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  rule_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rule_description,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}

// -------------------------------------------------------------------

// CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule

// optional uint32 account_id = 1;
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::has_account_id() const {
  return _internal_has_account_id();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::account_id() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.account_id)
  return _internal_account_id();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.account_id)
}

// optional float revenue_percentage = 2;
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_has_revenue_percentage() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::has_revenue_percentage() const {
  return _internal_has_revenue_percentage();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_revenue_percentage() {
  revenue_percentage_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_revenue_percentage() const {
  return revenue_percentage_;
}
inline float CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::revenue_percentage() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.revenue_percentage)
  return _internal_revenue_percentage();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_set_revenue_percentage(float value) {
  _has_bits_[0] |= 0x00000004u;
  revenue_percentage_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_revenue_percentage(float value) {
  _internal_set_revenue_percentage(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.revenue_percentage)
}

// optional string rule_description = 3;
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_has_rule_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::has_rule_description() const {
  return _internal_has_rule_description();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_rule_description() {
  rule_description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::rule_description() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
  return _internal_rule_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_rule_description(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::mutable_rule_description() {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
  return _internal_mutable_rule_description();
}
inline const std::string& CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_rule_description() const {
  return rule_description_.Get();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_set_rule_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_mutable_rule_description() {
  _has_bits_[0] |= 0x00000001u;
  return rule_description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::release_rule_description() {
  // @@protoc_insertion_point(field_release:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
  if (!_internal_has_rule_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return rule_description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_allocated_rule_description(std::string* rule_description) {
  if (rule_description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  rule_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rule_description,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}

// -------------------------------------------------------------------

// CWorkshop_SetItemPaymentRules_Request

// optional uint32 appid = 1;
inline bool CWorkshop_SetItemPaymentRules_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CWorkshop_SetItemPaymentRules_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request::appid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.appid)
  return _internal_appid();
}
inline void CWorkshop_SetItemPaymentRules_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.appid)
}

// optional uint32 gameitemid = 2;
inline bool CWorkshop_SetItemPaymentRules_Request::_internal_has_gameitemid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request::has_gameitemid() const {
  return _internal_has_gameitemid();
}
inline void CWorkshop_SetItemPaymentRules_Request::clear_gameitemid() {
  gameitemid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request::_internal_gameitemid() const {
  return gameitemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request::gameitemid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.gameitemid)
  return _internal_gameitemid();
}
inline void CWorkshop_SetItemPaymentRules_Request::_internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  gameitemid_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request::set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gameitemid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.gameitemid)
}

// repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
inline int CWorkshop_SetItemPaymentRules_Request::_internal_associated_workshop_files_size() const {
  return associated_workshop_files_.size();
}
inline int CWorkshop_SetItemPaymentRules_Request::associated_workshop_files_size() const {
  return _internal_associated_workshop_files_size();
}
inline void CWorkshop_SetItemPaymentRules_Request::clear_associated_workshop_files() {
  associated_workshop_files_.Clear();
}
inline ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::mutable_associated_workshop_files(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return associated_workshop_files_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule >*
CWorkshop_SetItemPaymentRules_Request::mutable_associated_workshop_files() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return &associated_workshop_files_;
}
inline const ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& CWorkshop_SetItemPaymentRules_Request::_internal_associated_workshop_files(int index) const {
  return associated_workshop_files_.Get(index);
}
inline const ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& CWorkshop_SetItemPaymentRules_Request::associated_workshop_files(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return _internal_associated_workshop_files(index);
}
inline ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::_internal_add_associated_workshop_files() {
  return associated_workshop_files_.Add();
}
inline ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::add_associated_workshop_files() {
  // @@protoc_insertion_point(field_add:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return _internal_add_associated_workshop_files();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule >&
CWorkshop_SetItemPaymentRules_Request::associated_workshop_files() const {
  // @@protoc_insertion_point(field_list:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return associated_workshop_files_;
}

// repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
inline int CWorkshop_SetItemPaymentRules_Request::_internal_partner_accounts_size() const {
  return partner_accounts_.size();
}
inline int CWorkshop_SetItemPaymentRules_Request::partner_accounts_size() const {
  return _internal_partner_accounts_size();
}
inline void CWorkshop_SetItemPaymentRules_Request::clear_partner_accounts() {
  partner_accounts_.Clear();
}
inline ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::mutable_partner_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return partner_accounts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule >*
CWorkshop_SetItemPaymentRules_Request::mutable_partner_accounts() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return &partner_accounts_;
}
inline const ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& CWorkshop_SetItemPaymentRules_Request::_internal_partner_accounts(int index) const {
  return partner_accounts_.Get(index);
}
inline const ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& CWorkshop_SetItemPaymentRules_Request::partner_accounts(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return _internal_partner_accounts(index);
}
inline ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::_internal_add_partner_accounts() {
  return partner_accounts_.Add();
}
inline ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::add_partner_accounts() {
  // @@protoc_insertion_point(field_add:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return _internal_add_partner_accounts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule >&
CWorkshop_SetItemPaymentRules_Request::partner_accounts() const {
  // @@protoc_insertion_point(field_list:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return partner_accounts_;
}

// -------------------------------------------------------------------

// CWorkshop_SetItemPaymentRules_Response

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::EGCBaseMsg> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCBaseMsg>() {
  return ::EGCBaseMsg_descriptor();
}
template <> struct is_proto_enum< ::EGCBaseProtoObjectTypes> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCBaseProtoObjectTypes>() {
  return ::EGCBaseProtoObjectTypes_descriptor();
}
template <> struct is_proto_enum< ::GCGoodbyeReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GCGoodbyeReason>() {
  return ::GCGoodbyeReason_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_base_5fgcmessages_2eproto
